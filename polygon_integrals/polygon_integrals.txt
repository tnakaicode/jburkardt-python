Sat Feb  1 15:36:27 2020

POLYGON_INTEGRALS_TEST
  Python version: 3.6.9
  Test the POLYGON_INTEGRALS library.

I4_UNIFORM_AB_TEST
  Python version: 3.6.9
  I4_UNIFORM_AB computes pseudorandom values
  in an interval [A,B].

  The lower endpoint A = -100
  The upper endpoint B = 200
  The initial seed is 123456789

         1       -35
         2       187
         3       149
         4        69
         5        25
         6       -81
         7       -23
         8       -67
         9       -87
        10        90
        11       -82
        12        35
        13        20
        14       127
        15       139
        16      -100
        17       170
        18         5
        19       -72
        20       -96

I4_UNIFORM_AB_TEST:
  Normal end of execution.

R8_CHOOSE_TEST
  Python version: 3.6.9
  R8_CHOOSE evaluates C(N,K).

         N         K       CNK

         0         0               1

         1         0               1
         1         1               1

         2         0               1
         2         1               2
         2         2               1

         3         0               1
         3         1               3
         3         2               3
         3         3               1

         4         0               1
         4         1               4
         4         2               6
         4         3               4
         4         4               1

         5         0               1
         5         1               5
         5         2              10
         5         3              10
         5         4               5
         5         5               1

R8_CHOOSE_TEST
  Normal end of execution.

R8_MOP_TEST
  Python version: 3.6.9
  R8_MOP evaluates (-1.0)^I4 as an R8.

    I4  R8_MOP(I4)

   -57  -1.0
    92   1.0
    66   1.0
    12   1.0
   -17  -1.0
   -87  -1.0
   -49  -1.0
   -78   1.0
   -92   1.0
    27  -1.0

R8_MOP_TEST
  Normal end of execution.

MOMENT_TEST
  Python version: 3.6.9
  MOMENT computes moments of a polygon.
  Here, we test the code using a rectange with known moments.

   P   Q             Nu(P,Q)
            Computed         Exact

   0   0              40              40
   1   0             200             200
   0   1             160             160
   2   0         1226.67         1226.67
   1   1             880             880
   0   2         746.667         746.667

MOMENT_TEST
  Normal end of execution.

MOMENT_CENTRAL_TEST
  Python version: 3.6.9
  MOMENT_CENTRAL computes central moments of a polygon.
  Here, we test the code using a rectange with known moments.

   P   Q             Mu(P,Q)
            Computed         Exact

   0   0               1               1
   1   0               0               0
   0   1               0               0
   2   0         5.66667         5.66667
   1   1               2               2
   0   2         2.66667         2.66667

MOMENT_CENTRAL_TEST
  Normal end of execution.

MOMENT_NORMALIZED_TEST
  Python version: 3.6.9
  MOMENT_NORMALIZED computes normalized moments of a polygon.
  Here, we test the code using a rectange with known moments.

   P   Q          Alpha(P,Q)
            Computed         Exact

   0   0               1               1
   1   0               5               5
   0   1               4               4
   2   0         30.6667         30.6667
   1   1              22              22
   0   2         18.6667         18.6667

MOMENT_NORMALIZED_TEST
  Normal end of execution.

POLYGON_INTEGRALS_TEST:
  Normal end of execution.
Sat Feb  1 15:36:27 2020
