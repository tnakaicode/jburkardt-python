Tue Jan 28 08:24:34 2020

LEGENDRE_POLYNOMIAL_TEST:
  Python version: 3.6.9
  Test the LEGENDRE_POLYNOMIAL library.

IMTQLX_TEST
  Python version: 3.6.9
  IMTQLX takes a symmetric tridiagonal matrix A
  and computes its eigenvalues LAM.
  It also accepts a vector Z and computes Q'*Z,
  where Q is the matrix that diagonalizes A.

  Computed eigenvalues:

     0:      0.267949
     1:             1
     2:             2
     3:             3
     4:       3.73205

  Exact eigenvalues:

     0:      0.267949
     1:             1
     2:             2
     3:             3
     4:       3.73205

  Vector Z:

     0:             1
     1:             1
     2:             1
     3:             1
     4:             1

  Vector Q*Z:

     0:       -2.1547
     1:   -1.8855e-16
     2:       0.57735
     3:   1.66533e-16
     4:     -0.154701

IMTQLX_TEST:
  Normal end of execution.

P_EXPONENTIAL_PRODUCT_TEST
  Python version: 3.6.9
  P_EXPONENTIAL_PRODUCT computes an exponential product table for P(n,x):

  Tij = integral ( -1 <= x <= +1 ) exp(b*x) P(i,x) P(j,x) dx

  Maximum degree P = 5
  Exponential argument coefficient B = 0

  Exponential product table:

  Col:       0             1             2             3             4       
  Row
      0 :           2  -1.60982e-15  -3.46945e-16  -9.71445e-17   2.22045e-16  
      1 :-1.60982e-15      0.666667  -6.52256e-16  -2.77556e-17    -3.747e-16  
      2 :-3.46945e-16  -6.52256e-16           0.4  -7.00828e-16   1.94289e-16  
      3 :-9.71445e-17  -2.77556e-17  -6.93889e-16      0.285714  -4.71845e-16  
      4 : 2.22045e-16  -3.81639e-16   2.01228e-16  -5.06539e-16      0.222222  
      5 : -5.6205e-16   4.02456e-16  -2.42861e-16   1.52656e-16   -3.1225e-16  

  Col:       5       
  Row
      0 : -5.6205e-16  
      1 : 3.88578e-16  
      2 :-2.63678e-16  
      3 : 1.73472e-16  
      4 : -3.1225e-16  
      5 :    0.181818  

P_EXPONENTIAL_PRODUCT_TEST:
  Normal end of execution.

P_EXPONENTIAL_PRODUCT_TEST
  Python version: 3.6.9
  P_EXPONENTIAL_PRODUCT computes an exponential product table for P(n,x):

  Tij = integral ( -1 <= x <= +1 ) exp(b*x) P(i,x) P(j,x) dx

  Maximum degree P = 5
  Exponential argument coefficient B = 1

  Exponential product table:

  Col:       0             1             2             3             4       
  Row
      0 :      2.3504      0.735759      0.143126     0.0201302    0.00221447  
      1 :    0.735759      0.878885      0.306382      0.062605    0.00905782  
      2 :    0.143126      0.306382      0.512112      0.194658     0.0414752  
      3 :   0.0201302      0.062605      0.194658      0.363558      0.143849  
      4 :  0.00221447    0.00905782     0.0414752      0.143849       0.28217  
      5 : 0.000199925    0.00101492    0.00615177     0.0313811      0.114325  

  Col:       5       
  Row
      0 : 0.000199925  
      1 :  0.00101492  
      2 :  0.00615177  
      3 :   0.0313811  
      4 :    0.114325  
      5 :    0.230635  

P_EXPONENTIAL_PRODUCT_TEST:
  Normal end of execution.

P_INTEGRAL_TEST
  Python version: 3.6.9
  P_INTEGRAL returns the integral of P(n,x) over [-1,+1].

     N                  Integral

     0                         2
     1                         0
     2        0.6666666666666666
     3                         0
     4                       0.4
     5                         0
     6        0.2857142857142857
     7                         0
     8        0.2222222222222222
     9                         0
    10        0.1818181818181818

P_INTEGRAL_TEST
  Normal end of execution.

P_POLYNOMIAL_COEFFICIENTS_TEST
  Python version: 3.6.9
  P_POLYNOMIAL_COEFFICIENTS determines polynomial coefficients of P(n,x).

  P(0,x) = 

  1

  P(1,x) = 

  1 * x

  P(2,x) = 

  1.5 * x^2
  -0.5

  P(3,x) = 

  2.5 * x^3
  -1.5 * x

  P(4,x) = 

  4.375 * x^4
  -3.75 * x^2
  0.375

  P(5,x) = 

  7.875 * x^5
  -8.75 * x^3
  1.875 * x

  P(6,x) = 

  14.4375 * x^6
  -19.6875 * x^4
  6.5625 * x^2
  -0.3125

  P(7,x) = 

  26.8125 * x^7
  -43.3125 * x^5
  19.6875 * x^3
  -2.1875 * x

  P(8,x) = 

  50.2734 * x^8
  -93.8438 * x^6
  54.1406 * x^4
  -9.84375 * x^2
  0.273438

  P(9,x) = 

  94.9609 * x^9
  -201.094 * x^7
  140.766 * x^5
  -36.0938 * x^3
  2.46094 * x

  P(10,x) = 

  180.426 * x^10
  -427.324 * x^8
  351.914 * x^6
  -117.305 * x^4
  13.5352 * x^2
  -0.246094

P_POLYNOMIAL_COEFFICIENTS_TEST
  Normal end of execution.

P_POLYNOMIAL_PRIME_TEST:
  Python version: 3.6.9
  P_POLYNOMIAL_PRIME evaluates the derivative of
  the Legendre polynomial P(N,X).

                                      Computed
     N        X                         P'(N,X)

     0            -1                         0
     1            -1                         1
     2            -1                        -3
     3            -1                         6
     4            -1                       -10
     5            -1                        15

     0          -0.8                         0
     1          -0.8                         1
     2          -0.8                      -2.4
     3          -0.8                       3.3
     4          -0.8                     -2.96
     5          -0.8                     1.203

     0          -0.6                         0
     1          -0.6                         1
     2          -0.6                      -1.8
     3          -0.6                       1.2
     4          -0.6                      0.72
     5          -0.6                    -2.472

     0          -0.4                         0
     1          -0.4                         1
     2          -0.4                      -1.2
     3          -0.4                      -0.3
     4          -0.4                      1.88
     5          -0.4                    -1.317

     0          -0.2                         0
     1          -0.2                         1
     2          -0.2                      -0.6
     3          -0.2                      -1.2
     4          -0.2                      1.36
     5          -0.2                     0.888

     0             0                         0
     1             0                         1
     2             0                         0
     3             0                      -1.5
     4             0                        -0
     5             0                     1.875

     0           0.2                         0
     1           0.2                         1
     2           0.2                       0.6
     3           0.2                      -1.2
     4           0.2                     -1.36
     5           0.2                     0.888

     0           0.4                         0
     1           0.4                         1
     2           0.4                       1.2
     3           0.4                      -0.3
     4           0.4                     -1.88
     5           0.4                    -1.317

     0           0.6                         0
     1           0.6                         1
     2           0.6                       1.8
     3           0.6                       1.2
     4           0.6                     -0.72
     5           0.6                    -2.472

     0           0.8                         0
     1           0.8                         1
     2           0.8                       2.4
     3           0.8                       3.3
     4           0.8                      2.96
     5           0.8                     1.203

     0             1                         0
     1             1                         1
     2             1                         3
     3             1                         6
     4             1                        10
     5             1                        15

P_POLYNOMIAL_PRIME_TEST
  Normal end of execution.

P_POLYNOMIAL_PRIME2_TEST:
  Python version: 3.6.9
  P_POLYNOMIAL_PRIME2 evaluates the second derivative of
  the Legendre polynomial P(N,X).

                                      Computed
     N        X                         P"(N,X)

     0            -1                         0
     1            -1                         0
     2            -1                         3
     3            -1                       -15
     4            -1                        45
     5            -1                      -105

     0          -0.8                         0
     1          -0.8                         0
     2          -0.8                         3
     3          -0.8                       -12
     4          -0.8                      26.1
     5          -0.8                    -38.64

     0          -0.6                         0
     1          -0.6                         0
     2          -0.6                         3
     3          -0.6                        -9
     4          -0.6                      11.4
     5          -0.6                     -2.52

     0          -0.4                         0
     1          -0.4                         0
     2          -0.4                         3
     3          -0.4                        -6
     4          -0.4                       0.9
     5          -0.4                     10.92

     0          -0.2                         0
     1          -0.2                         0
     2          -0.2                         3
     3          -0.2                        -3
     4          -0.2                      -5.4
     5          -0.2                      9.24

     0             0                         0
     1             0                         0
     2             0                         3
     3             0                         0
     4             0                      -7.5
     5             0                        -0

     0           0.2                         0
     1           0.2                         0
     2           0.2                         3
     3           0.2                         3
     4           0.2                      -5.4
     5           0.2                     -9.24

     0           0.4                         0
     1           0.4                         0
     2           0.4                         3
     3           0.4                         6
     4           0.4                       0.9
     5           0.4                    -10.92

     0           0.6                         0
     1           0.6                         0
     2           0.6                         3
     3           0.6                         9
     4           0.6                      11.4
     5           0.6                      2.52

     0           0.8                         0
     1           0.8                         0
     2           0.8                         3
     3           0.8                        12
     4           0.8                      26.1
     5           0.8                     38.64

     0             1                         0
     1             1                         0
     2             1                         3
     3             1                        15
     4             1                        45
     5             1                       105

P_POLYNOMIAL_PRIME2_TEST
  Normal end of execution.

P_POLYNOMIAL_VALUE_TEST:
  Python version: 3.6.9
  P_POLYNOMIAL_VALUE evaluates the Legendre polynomial P(n,x).

                        Tabulated                 Computed
     N        X           P(N,X)                    P(N,X)                     Error

     0          0.25                         1                         1         0
     1          0.25                      0.25                      0.25         0
     2          0.25                  -0.40625                  -0.40625         0
     3          0.25                 -0.335938                 -0.335938         0
     4          0.25                  0.157715                  0.157715         0
     5          0.25                  0.339722                  0.339722         0
     6          0.25                 0.0242767                 0.0242767         0
     7          0.25                 -0.279919                 -0.279919         0
     8          0.25                 -0.152454                 -0.152454  -2.77556e-17
     9          0.25                  0.176824                  0.176824         0
    10          0.25                    0.2212                    0.2212  2.77556e-17
     3             0                         0                        -0         0
     3           0.1                   -0.1475                   -0.1475         0
     3           0.2                     -0.28                     -0.28         0
     3           0.3                   -0.3825                   -0.3825         0
     3           0.4                     -0.44                     -0.44  -5.55112e-17
     3           0.5                   -0.4375                   -0.4375         0
     3           0.6                     -0.36                     -0.36  5.55112e-17
     3           0.7                   -0.1925                   -0.1925  1.11022e-16
     3           0.8                      0.08                      0.08  -2.22045e-16
     3           0.9                    0.4725                    0.4725  -1.11022e-16
     3             1                         1                         1         0

P_POLYNOMIAL_VALUE_TEST
  Normal end of execution.

P_POLYNOMIAL_VALUES_TEST:
  Python version: 3.6.9
  P_POLYNOMIAL_VALUES stores values of the Legendre polynomials.

      N            X            F

       0      0.250000                         1
       1      0.250000                      0.25
       2      0.250000                  -0.40625
       3      0.250000                -0.3359375
       4      0.250000             0.15771484375
       5      0.250000           0.3397216796875
       6      0.250000        0.0242767333984375
       7      0.250000       -0.2799186706542969
       8      0.250000       -0.1524540185928345
       9      0.250000        0.1768244206905365
      10      0.250000        0.2212002165615559
       3      0.000000                         0
       3      0.100000                   -0.1475
       3      0.200000                     -0.28
       3      0.300000                   -0.3825
       3      0.400000                     -0.44
       3      0.500000                   -0.4375
       3      0.600000                     -0.36
       3      0.700000                   -0.1925
       3      0.800000                      0.08
       3      0.900000                    0.4725
       3      1.000000                         1

P_POLYNOMIAL_VALUES_TEST:
  Normal end of execution.

P_POLYNOMIAL_ZEROS_TEST:
  Python version: 3.6.9
  P_POLYNOMIAL_ZEROS computes the zeros of P(n,x)
  Check by calling P_POLYNOMIAL_VALUE there.

  Computed zeros for P(1,x)

     0:             0

  Evaluate P(1,z)

     0:             0

  Computed zeros for P(2,x)

     0:      -0.57735
     1:       0.57735

  Evaluate P(2,z)

     0:  -5.55112e-17
     1:  -5.55112e-17

  Computed zeros for P(3,x)

     0:     -0.774597
     1:  -7.20308e-18
     2:      0.774597

  Evaluate P(3,z)

     0:             0
     1:   1.08046e-17
     2:   4.44089e-16

  Computed zeros for P(4,x)

     0:     -0.861136
     1:     -0.339981
     2:      0.339981
     3:      0.861136

  Evaluate P(4,z)

     0:  -1.66533e-16
     1:   1.38778e-16
     2:  -2.77556e-16
     3:   -1.4988e-15

  Computed zeros for P(5,x)

     0:      -0.90618
     1:     -0.538469
     2:   1.41073e-16
     3:      0.538469
     4:       0.90618

  Evaluate P(5,z)

     0:   1.77636e-16
     1:  -3.10862e-16
     2:   2.64513e-16
     3:   5.32907e-16
     4:   9.76996e-16

P_POLYNOMIAL_ZEROS_TEST
  Normal end of execution.

P_POWER_PRODUCT_TEST:
  Python version: 3.6.9
  P_POWER_PRODUCT computes a power product table for P(n,x):

  Tij = integral ( -1 <= x <= +1 ) x^e P(i,x) P(j,x) dx

  Maximum degree P = 5
  Exponent of X, E = 0

  Power product table:

  Col:       0             1             2             3             4       
  Row
      0 :           2   6.66134e-16   8.04912e-16   7.63278e-16  -6.93889e-17  
      1 : 6.66134e-16      0.666667   7.21645e-16   2.77556e-16   3.33067e-16  
      2 : 8.04912e-16   7.21645e-16           0.4   3.46945e-16  -1.66533e-16  
      3 : 7.63278e-16   2.91434e-16   3.19189e-16      0.285714   1.04083e-16  
      4 :-6.93889e-17   3.60822e-16  -1.73472e-16   9.71445e-17      0.222222  
      5 : 4.85723e-17  -5.06539e-16   9.71445e-17   -1.8735e-16   1.94289e-16  

  Col:       5       
  Row
      0 : 4.85723e-17  
      1 :-4.85723e-16  
      2 : 1.00614e-16  
      3 :-1.83881e-16  
      4 :  1.8735e-16  
      5 :    0.181818  

P_POWER_PRODUCT_TEST
  Normal end of execution.

P_POWER_PRODUCT_TEST:
  Python version: 3.6.9
  P_POWER_PRODUCT computes a power product table for P(n,x):

  Tij = integral ( -1 <= x <= +1 ) x^e P(i,x) P(j,x) dx

  Maximum degree P = 5
  Exponent of X, E = 1

  Power product table:

  Col:       0             1             2             3             4       
  Row
      0 :   1.249e-16      0.666667   2.22045e-16     4.996e-16   6.80012e-16  
      1 :    0.666667   1.38778e-16      0.266667   4.71845e-16   6.93889e-17  
      2 : 2.22045e-16      0.266667   4.57967e-16      0.171429   4.64906e-16  
      3 :   4.996e-16   4.85723e-16      0.171429   4.44089e-16      0.126984  
      4 : 6.80012e-16   9.71445e-17   4.51028e-16      0.126984   2.56739e-16  
      5 :-2.28983e-16   5.55112e-16  -1.52656e-16   2.56739e-16       0.10101  

  Col:       5       
  Row
      0 :-2.28983e-16  
      1 : 5.55112e-16  
      2 :-1.45717e-16  
      3 : 2.56739e-16  
      4 :     0.10101  
      5 : 1.04083e-16  

P_POWER_PRODUCT_TEST
  Normal end of execution.

P_QUADRATURE_RULE_TEST:
  Python version: 3.6.9
  P_QUADRATURE_RULE computes the quadrature rule
  associated with P(n,x)

      X            W

       0:       -0.90618      0.236927
       1:      -0.538469      0.478629
       2:    1.41073e-16      0.568889
       3:       0.538469      0.478629
       4:        0.90618      0.236927

  Use the quadrature rule to estimate:

    Q = Integral ( -1 <= X < +1 ) X^E dx

   E       Q_Estimate      Q_Exact

   0               2               2
   1     3.88578e-16               0
   2        0.666667        0.666667
   3     1.66533e-16               0
   4             0.4             0.4
   5     1.38778e-16               0
   6        0.285714        0.285714
   7     1.52656e-16               0
   8        0.222222        0.222222
   9     1.38778e-16               0

P_QUADRATURE_RULE_TEST
  Normal end of execution.

PM_POLYNOMIAL_VALUE_TEST:
  Python version: 3.6.9
  PM_POLYNOMIAL_VALUE evaluates the Legendre polynomial Pm(n,m,x).

                                           Tabulated                 Computed
     N     M             X                 Pm(N,M,X)                 Pm(N,M,X)     Error

     1     0             0                         0                         0         0
     2     0             0                      -0.5                      -0.5         0
     3     0             0                         0                        -0         0
     4     0             0                     0.375                     0.375         0
     5     0             0                         0                         0         0
     1     1           0.5       -0.8660254037844386       -0.8660254037844386         0
     2     1           0.5        -1.299038105676658        -1.299038105676658         0
     3     1           0.5       -0.3247595264191645       -0.3247595264191645         0
     4     1           0.5         1.353164693413185         1.353164693413185  -4.44089e-16
     3     0           0.2                     -0.28                     -0.28         0
     3     1           0.2         1.175755076535925         1.175755076535925  -4.44089e-16
     3     2           0.2                      2.88                      2.88         0
     3     3           0.2        -14.10906091843111         -14.1090609184311  -7.10543e-15
     4     2          0.25              -3.955078125              -3.955078125  4.44089e-16
     5     2          0.25            -9.99755859375        -9.997558593750002  1.77636e-15
     6     3          0.25         82.65311444100485         82.65311444100486  -1.42109e-14
     7     3          0.25         20.24442836815152         20.24442836815153  -1.06581e-14
     8     4          0.25        -423.7997531890869        -423.7997531890869  -5.68434e-14
     9     4          0.25         1638.320624828339         1638.320624828339         0
    10     5          0.25        -20256.87389227225        -20256.87389227226  3.63798e-12

PM_POLYNOMIAL_VALUE_TEST
  Normal end of execution.

PM_POLYNOMIAL_VALUES_TEST:
  Python version: 3.6.9
  PM_POLYNOMIAL_VALUES stores values of the associated Legendre function.

      N       M            X            F

       1       0      0.000000                         0
       2       0      0.000000                      -0.5
       3       0      0.000000                         0
       4       0      0.000000                     0.375
       5       0      0.000000                         0
       1       1      0.500000       -0.8660254037844386
       2       1      0.500000        -1.299038105676658
       3       1      0.500000       -0.3247595264191645
       4       1      0.500000         1.353164693413185
       3       0      0.200000                     -0.28
       3       1      0.200000         1.175755076535925
       3       2      0.200000                      2.88
       3       3      0.200000        -14.10906091843111
       4       2      0.250000              -3.955078125
       5       2      0.250000            -9.99755859375
       6       3      0.250000         82.65311444100485
       7       3      0.250000         20.24442836815152
       8       4      0.250000        -423.7997531890869
       9       4      0.250000         1638.320624828339
      10       5      0.250000        -20256.87389227225

PM_POLYNOMIAL_VALUES_TEST:
  Normal end of execution.

PMN_POLYNOMIAL_VALUE_TEST:
  Python version: 3.6.9
  PMN_POLYNOMIAL_VALUE evaluates the Legendre polynomial Pmn(n,m,x).

                                          Tabulated                 Computed
     N     M             X                Pmn(N,M,X)                Pmn(N,M,X)         Error

     0     0           0.5        0.7071067811865475        0.7071067811865476  -1.11022e-16
     1     0           0.5        0.6123724356957945        0.6123724356957945         0
     1     1           0.5                     -0.75       -0.7499999999999999  -1.11022e-16
     2     0           0.5       -0.1976423537605237       -0.1976423537605237  2.77556e-17
     2     1           0.5       -0.8385254915624211       -0.8385254915624212  1.11022e-16
     2     2           0.5        0.7261843774138907        0.7261843774138906  1.11022e-16
     3     0           0.5       -0.8184875533567997       -0.8184875533567997         0
     3     1           0.5       -0.1753901900050285       -0.1753901900050285  2.77556e-17
     3     2           0.5        0.9606516343087123        0.9606516343087123         0
     3     3           0.5       -0.6792832849776299         -0.67928328497763  1.11022e-16
     4     0           0.5       -0.6131941618102092       -0.6131941618102091  -1.11022e-16
     4     1           0.5        0.6418623720763665        0.6418623720763665         0
     4     2           0.5        0.4716705890038619        0.4716705890038619         0
     4     3           0.5        -1.018924927466445        -1.018924927466445         0
     4     4           0.5        0.6239615396237876        0.6239615396237875  1.11022e-16
     5     0           0.5        0.2107022704608181        0.2107022704608181  -2.77556e-17
     5     1           0.5        0.8256314721961969        0.8256314721961968  1.11022e-16
     5     2           0.5       -0.3982651281554632       -0.3982651281554632  -5.55112e-17
     5     3           0.5       -0.7040399320721435       -0.7040399320721434  -1.11022e-16
     5     4           0.5         1.034723155272289         1.034723155272289  4.44089e-16
     5     5           0.5        -0.566741212915553        -0.566741212915553         0

PMN_POLYNOMIAL_VALUE_TEST
  Normal end of execution.

PMN_POLYNOMIAL_VALUES_TEST:
  Python version: 3.6.9
  PMN_POLYNOMIAL_VALUES stores values of the 
  normalized associated Legendre function.

      N       M            X            F

       0       0           0.5        0.7071067811865475
       1       0           0.5        0.6123724356957945
       1       1           0.5                     -0.75
       2       0           0.5       -0.1976423537605237
       2       1           0.5       -0.8385254915624211
       2       2           0.5        0.7261843774138907
       3       0           0.5       -0.8184875533567997
       3       1           0.5       -0.1753901900050285
       3       2           0.5        0.9606516343087123
       3       3           0.5       -0.6792832849776299
       4       0           0.5       -0.6131941618102092
       4       1           0.5        0.6418623720763665
       4       2           0.5        0.4716705890038619
       4       3           0.5        -1.018924927466445
       4       4           0.5        0.6239615396237876
       5       0           0.5        0.2107022704608181
       5       1           0.5        0.8256314721961969
       5       2           0.5       -0.3982651281554632
       5       3           0.5       -0.7040399320721435
       5       4           0.5         1.034723155272289
       5       5           0.5        -0.566741212915553

PMN_POLYNOMIAL_VALUES_TEST:
  Normal end of execution.

PMNS_POLYNOMIAL_VALUE_TEST:
  Python version: 3.6.9
  PMNS_POLYNOMIAL_VALUE evaluates the Legendre polynomial Pmns(n,m,x).

                                         Tabulated                 Computed
     N     M             X               Pmns(N,M,X)               Pmns(N,M,X)         Error

     0     0           0.5        0.2820947917738781        0.2820947917738781  -5.55112e-17
     1     0           0.5          0.24430125595146          0.24430125595146  2.77556e-17
     1     1           0.5       -0.2992067103010745       -0.2992067103010745         0
     2     0           0.5         -0.07884789131313      -0.07884789131313001  1.38778e-17
     2     1           0.5       -0.3345232717786446       -0.3345232717786445  -5.55112e-17
     2     2           0.5        0.2897056515173922        0.2897056515173921  5.55112e-17
     3     0           0.5        -0.326529291016351        -0.326529291016351         0
     3     1           0.5      -0.06997056236064664      -0.06997056236064664         0
     3     2           0.5        0.3832445536624809        0.3832445536624809  -5.55112e-17
     3     3           0.5       -0.2709948227475519       -0.2709948227475519  5.55112e-17
     4     0           0.5         -0.24462907724141         -0.24462907724141  -2.77556e-17
     4     1           0.5        0.2560660384200185        0.2560660384200185         0
     4     2           0.5        0.1881693403754876        0.1881693403754876  2.77556e-17
     4     3           0.5       -0.4064922341213279        -0.406492234121328  5.55112e-17
     4     4           0.5        0.2489246395003027        0.2489246395003027  -5.55112e-17
     5     0           0.5        0.0840580442633982       0.08405804426339822  -1.38778e-17
     5     1           0.5        0.3293793022891428        0.3293793022891428         0
     5     2           0.5       -0.1588847984307093       -0.1588847984307093  2.77556e-17
     5     3           0.5       -0.2808712959945307       -0.2808712959945307         0
     5     4           0.5        0.4127948151484925        0.4127948151484925         0
     5     5           0.5       -0.2260970318780046       -0.2260970318780046  2.77556e-17

PMNS_POLYNOMIAL_VALUE_TEST
  Normal end of execution.

PMNS_POLYNOMIAL_VALUES_TEST:
  Python version: 3.6.9
  PMNS_POLYNOMIAL_VALUES stores values of the 
  associated Legendre function normalized for the surface of a sphere.

      N       M            X            F

       0       0           0.5        0.2820947917738781
       1       0           0.5          0.24430125595146
       1       1           0.5       -0.2992067103010745
       2       0           0.5         -0.07884789131313
       2       1           0.5       -0.3345232717786446
       2       2           0.5        0.2897056515173922
       3       0           0.5        -0.326529291016351
       3       1           0.5      -0.06997056236064664
       3       2           0.5        0.3832445536624809
       3       3           0.5       -0.2709948227475519
       4       0           0.5         -0.24462907724141
       4       1           0.5        0.2560660384200185
       4       2           0.5        0.1881693403754876
       4       3           0.5       -0.4064922341213279
       4       4           0.5        0.2489246395003027
       5       0           0.5        0.0840580442633982
       5       1           0.5        0.3293793022891428
       5       2           0.5       -0.1588847984307093
       5       3           0.5       -0.2808712959945307
       5       4           0.5        0.4127948151484925
       5       5           0.5       -0.2260970318780046

PMNS_POLYNOMIAL_VALUES_TEST:
  Normal end of execution.

PN_PAIR_PRODUCT_TEST
  Python version: 3.6.9
  PN_PAIR_PRODUCT computes a pair product table for Pn(n,x):

  Tij = integral ( -1 <= x <= +1 ) Pn(i,x) Pn(j,x) dx

  The Pn(n,x) polynomials are orthonormal,
  so T should be the identity matrix.

  Maximum degree P = 5

  Pair product table:

  Col:       0             1             2             3             4       
  Row
      0 :           1  -1.31839e-16   7.97973e-16  -7.07767e-16  -1.38778e-17  
      1 :-1.38778e-16             1  -7.49401e-16   7.63278e-16  -1.27676e-15  
      2 : 7.56339e-16  -7.35523e-16             1  -1.19349e-15   2.66454e-15  
      3 :-6.38378e-16   7.63278e-16  -1.19349e-15             1  -4.16334e-16  
      4 :           0    -1.249e-15   2.66454e-15  -4.16334e-16             1  
      5 :-8.04912e-16   2.01228e-15  -5.82867e-16   3.16414e-15  -9.71445e-16  

  Col:       5       
  Row
      0 :-7.77156e-16  
      1 : 1.95677e-15  
      2 :  -4.996e-16  
      3 : 3.16414e-15  
      4 :-9.99201e-16  
      5 :           1  

PN_PAIR_PRODUCT_TEST
  Normal end of execution.

PN_POLYNOMIAL_COEFFICIENTS_TEST
  Python version: 3.6.9
  PN_POLYNOMIAL_COEFFICIENTS: polynomial coefficients of Pn(n,x).

  P(0,x) = 

  0.707107

  P(1,x) = 

  1.22474 * x

  P(2,x) = 

  2.37171 * x^2
  -0.790569

  P(3,x) = 

  4.67707 * x^3
  -2.80624 * x

  P(4,x) = 

  9.28078 * x^4
  -7.95495 * x^2
  0.795495

  P(5,x) = 

  18.4685 * x^5
  -20.5206 * x^3
  4.39726 * x

  P(6,x) = 

  36.8085 * x^6
  -50.1935 * x^4
  16.7312 * x^2
  -0.796722

  P(7,x) = 

  73.4291 * x^7
  -118.616 * x^5
  53.9164 * x^3
  -5.99072 * x

  P(8,x) = 

  146.571 * x^8
  -273.599 * x^6
  157.846 * x^4
  -28.6992 * x^2
  0.7972

  P(9,x) = 

  292.689 * x^9
  -619.813 * x^7
  433.869 * x^5
  -111.248 * x^3
  7.58512 * x

  P(10,x) = 

  584.646 * x^10
  -1384.69 * x^8
  1140.33 * x^6
  -380.111 * x^4
  43.8589 * x^2
  -0.797435

PN_POLYNOMIAL_COEFFICIENTS_TEST
  Normal end of execution.

PN_POLYNOMIAL_VALUE_TEST:
  Python version: 3.6.9
  PN_POLYNOMIAL_VALUE evaluates the normalized Legendre polynomial Pn(n,x).

                        Tabulated                 Computed
     N        X          Pn(N,X)                   Pn(N,X)                     Error

     0          0.25        0.7071067811865475        0.7071067811865475         0
     1          0.25        0.3061862178478972        0.3061862178478972  -5.55112e-17
     2          0.25        -0.642337649721702        -0.642337649721702         0
     3          0.25       -0.6284815141846855       -0.6284815141846855         0
     4          0.25        0.3345637065282053        0.3345637065282053  -5.55112e-17
     5          0.25        0.7967179601799685        0.7967179601799685         0
     6          0.25       0.06189376866246124       0.06189376866246124         0
     7          0.25        -0.766588850921089        -0.766588850921089         0
     8          0.25       -0.4444760242953344       -0.4444760242953344         0
     9          0.25        0.5450094674858101        0.5450094674858101         0
    10          0.25        0.7167706229835538        0.7167706229835538         0
     3             0                         0                        -0         0
     3           0.1       -0.2759472322745781       -0.2759472322745781         0
     3           0.2       -0.5238320341483518       -0.5238320341483518         0
     3           0.3       -0.7155919752205163       -0.7155919752205163         0
     3           0.4        -0.823164625090267        -0.823164625090267         0
     3           0.5       -0.8184875533567997       -0.8184875533567997         0
     3           0.6       -0.6734983296193094       -0.6734983296193094         0
     3           0.7        -0.360134523476992        -0.360134523476992  5.55112e-17
     3           0.8        0.1496662954709581        0.1496662954709581  5.55112e-17
     3           0.9        0.8839665576253438        0.8839665576253438         0
     3             1         1.870828693386971         1.870828693386971  4.44089e-16

PN_POLYNOMIAL_VALUE_TEST
  Normal end of execution.

PN_POLYNOMIAL_VALUES_TEST:
  Python version: 3.6.9
  PN_POLYNOMIAL_VALUES stores values of the normalized Legendre polynomials.

      N            X            F

       0          0.25        0.7071067811865475
       1          0.25        0.3061862178478972
       2          0.25        -0.642337649721702
       3          0.25       -0.6284815141846855
       4          0.25        0.3345637065282053
       5          0.25        0.7967179601799685
       6          0.25       0.06189376866246124
       7          0.25        -0.766588850921089
       8          0.25       -0.4444760242953344
       9          0.25        0.5450094674858101
      10          0.25        0.7167706229835538
       3             0                         0
       3           0.1       -0.2759472322745781
       3           0.2       -0.5238320341483518
       3           0.3       -0.7155919752205163
       3           0.4        -0.823164625090267
       3           0.5       -0.8184875533567997
       3           0.6       -0.6734983296193094
       3           0.7        -0.360134523476992
       3           0.8        0.1496662954709581
       3           0.9        0.8839665576253438
       3             1         1.870828693386971

PN_POLYNOMIAL_VALUES_TEST:
  Normal end of execution.

R8_EPSILON_TEST
  Python version: 3.6.9
  R8_EPSILON produces the R8 roundoff unit.

  R = R8_EPSILON()         = 2.220446e-16
  ( 1 + R ) - 1            = 2.220446e-16
  ( 1 + (R/2) ) - 1        = 0.000000e+00

R8_EPSILON_TEST
  Normal end of execution.

R8_FACTORIAL_TEST
  Python version: 3.6.9
  R8_FACTORIAL evaluates the factorial function.

      N                     Exact                  Computed
     0                         1                         1
     1                         1                         1
     2                         2                         2
     3                         6                         6
     4                        24                        24
     5                       120                       120
     6                       720                       720
     7                      5040                      5040
     8                     40320                     40320
     9                    362880                    362880
    10                   3628800                   3628800
    11                  39916800                  39916800
    12                 479001600                 479001600
    13                6227020800                6227020800
    14               87178291200               87178291200
    15             1307674368000             1307674368000
    16            20922789888000            20922789888000
    17           355687428096000           355687428096000
    18          6402373705728000          6402373705728000
    19      1.21645100408832e+17      1.21645100408832e+17
    20      2.43290200817664e+18      2.43290200817664e+18
    25     1.551121004333099e+25     1.551121004333099e+25
    50     3.041409320171338e+64     3.041409320171338e+64
   100    9.332621544394415e+157     9.33262154439441e+157
   150    5.713383956445855e+262     5.71338395644585e+262

R8_FACTORIAL_TEST
  Normal end of execution.

R8_SIGN_TEST
  Python version: 3.6.9
  R8_SIGN returns the sign of an R8.

     R8     R8_SIGN(R8)

   -1.2500        -1
   -0.2500        -1
    0.0000         1
    0.5000         1
    9.0000         1

R8_SIGN_TEST
  Normal end of execution.

R8MAT_PRINT_TEST
  Python version: 3.6.9
  R8MAT_PRINT prints an R8MAT.

  Here is an R8MAT:

  Col:       0             1             2             3             4       
  Row
      0 :          11            12            13            14            15  
      1 :          21            22            23            24            25  
      2 :          31            32            33            34            35  
      3 :          41            42            43            44            45  

  Col:       5       
  Row
      0 :          16  
      1 :          26  
      2 :          36  
      3 :          46  

R8MAT_PRINT_TEST:
  Normal end of execution.

R8MAT_PRINT_SOME_TEST
  Python version: 3.6.9
  R8MAT_PRINT_SOME prints some of an R8MAT.

  Here is an R8MAT:

  Col:       3             4             5       
  Row
      0 :          14            15            16  
      1 :          24            25            26  
      2 :          34            35            36  

R8MAT_PRINT_SOME_TEST:
  Normal end of execution.

R8VEC_PRINT_TEST
  Python version: 3.6.9
  R8VEC_PRINT prints an R8VEC.

  Here is an R8VEC:

     0:       123.456
     1:         5e-06
     2:        -1e+06
     3:       3.14159

R8VEC_PRINT_TEST:
  Normal end of execution.

R8VEC2_PRINT_TEST
  Python version: 3.6.9
  R8VEC2_PRINT prints a pair of R8VEC's.

  Print a pair of R8VEC's:

       0:              0             0
       1:            0.2          0.04
       2:            0.4          0.16
       3:            0.6          0.36
       4:            0.8          0.64
       5:              1             1

R8VEC2_PRINT_TEST:
  Normal end of execution.

LEGENDRE_POLYNOMIAL_TEST:
  Normal end of execution.
Tue Jan 28 08:24:34 2020
