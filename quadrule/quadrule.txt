Fri Jan 31 19:13:43 2020

QUADRULE_TEST
  Python version: 3.6.9
  Test the QUADRULE library.

HYPER_2F1_VALUES_TEST:
  Python version: 3.6.9
  HYPER_2F1_VALUES stores values of the hypergeometric function 2F1

     A     B        C           X               F

    -2     3      6.700000      0.250000        0.7235612934899779
     0     1      6.700000      0.250000        0.9791110934527796
     0     1      6.700000      0.250000         1.021657814008856
     2     3      6.700000      0.250000         1.405156320011213
    -2     3      6.700000      0.550000        0.4696143163982161
     0     1      6.700000      0.550000        0.9529619497744632
     0     1      6.700000      0.550000         1.051281421394799
     2     3      6.700000      0.550000         2.399906290477786
    -2     3      6.700000      0.850000        0.2910609592841472
     0     1      6.700000      0.850000        0.9253696791037318
     0     1      6.700000      0.850000           1.0865504094807
     2     3      6.700000      0.850000         5.738156552618904
     3     6     -5.500000      0.250000         15090.66974870461
     1     6     -0.500000      0.250000        -104.3117006736435
     1     6      0.500000      0.250000         21.17505070776881
     3     6      4.500000      0.250000         4.194691581903192
     3     6     -5.500000      0.550000         10170777974.04881
     1     6     -0.500000      0.550000        -24708.63532248916
     1     6      0.500000      0.550000         1372.230454838499
     3     6      4.500000      0.550000         58.09272870639465
     3     6     -5.500000      0.850000     5.868208761512417e+18
     1     6     -0.500000      0.850000          -446350101.47296
     1     6      0.500000      0.850000         5383505.756129573
     3     6      4.500000      0.850000         20396.91377601966

HYPER_2F1_VALUES_TEST:
  Normal end of execution.

PSI_VALUES_TEST:
  Python version: 3.6.9
  PSI_VALUES stores values of the PSI function.

      X         PSI(X)

      0.100000      -10.4237549404110794
      0.200000       -5.2890398965921879
      0.300000       -3.5025242222001332
      0.400000       -2.5613845445851160
      0.500000       -1.9635100260214231
      0.600000       -1.5406192138931900
      0.700000       -1.2200235536979349
      0.800000       -0.9650085667061385
      0.900000       -0.7549269499470515
      1.000000       -0.5772156649015329
      1.100000       -0.4237549404110768
      1.200000       -0.2890398965921883
      1.300000       -0.1691908888667997
      1.400000       -0.0613845445851161
      1.500000        0.0364899739785765
      1.600000        0.1260474527734763
      1.700000        0.2085478748734940
      1.800000        0.2849914332938615
      1.900000        0.3561841611640597
      2.000000        0.4227843350984671

PSI_VALUES_TEST:
  Normal end of execution.

R8_EPSILON_TEST
  Python version: 3.6.9
  R8_EPSILON produces the R8 roundoff unit.

  R = R8_EPSILON()         = 2.220446e-16
  ( 1 + R ) - 1            = 2.220446e-16
  ( 1 + (R/2) ) - 1        = 0.000000e+00

R8_EPSILON_TEST
  Normal end of execution.

R8_FACTORIAL_TEST
  Python version: 3.6.9
  R8_FACTORIAL evaluates the factorial function.

      N                     Exact
                  Computed
     0                         1                         1
     1                         1                         1
     2                         2                         2
     3                         6                         6
     4                        24                        24
     5                       120                       120
     6                       720                       720
     7                      5040                      5040
     8                     40320                     40320
     9                    362880                    362880
    10                   3628800                   3628800
    11                  39916800                  39916800
    12                 479001600                 479001600
    13                6227020800                6227020800
    14               87178291200               87178291200
    15             1307674368000             1307674368000
    16            20922789888000            20922789888000
    17           355687428096000           355687428096000
    18          6402373705728000          6402373705728000
    19      1.21645100408832e+17      1.21645100408832e+17
    20      2.43290200817664e+18      2.43290200817664e+18
    25     1.551121004333099e+25     1.551121004333099e+25
    50     3.041409320171338e+64     3.041409320171338e+64
   100    9.332621544394415e+157     9.33262154439441e+157
   150    5.713383956445855e+262     5.71338395644585e+262

R8_FACTORIAL_TEST
  Normal end of execution.

R8_FACTORIAL2_TEST
  Python version: 3.6.9
  R8_FACTORIAL2 evaluates the double factorial function.

      N                     Exact
                  Computed
     0                         1                         1
     1                         1                         1
     2                         2                         2
     3                         3                         3
     4                         8                         8
     5                        15                        15
     6                        48                        48
     7                       105                       105
     8                       384                       384
     9                       945                       945
    10                      3840                      3840
    11                     10395                     10395
    12                     46080                     46080
    13                    135135                    135135
    14                    645120                    645120
    15                   2027025                   2027025

R8_FACTORIAL2_TEST
  Normal end of execution.

R8_GAMMA_TEST:
  Python version: 3.6.9
  R8_GAMMA evaluates the Gamma function.

      X            GAMMA(X)      R8_GAMMA(X)

          -0.5        -3.544907701811032        -3.544907701811032
         -0.01        -100.5871979644108        -100.5871979644108
          0.01          99.4325851191506          99.4325851191506
           0.1         9.513507698668732         9.513507698668731
           0.2         4.590843711998803         4.590843711998803
           0.4         2.218159543757688         2.218159543757688
           0.5         1.772453850905516         1.772453850905516
           0.6         1.489192248812817         1.489192248812817
           0.8         1.164229713725303         1.164229713725303
             1                         1                         1
           1.1        0.9513507698668732        0.9513507698668732
           1.2        0.9181687423997607        0.9181687423997607
           1.3        0.8974706963062772        0.8974706963062772
           1.4        0.8872638175030753        0.8872638175030754
           1.5        0.8862269254527581        0.8862269254527581
           1.6        0.8935153492876903        0.8935153492876903
           1.7        0.9086387328532904        0.9086387328532904
           1.8        0.9313837709802427        0.9313837709802427
           1.9        0.9617658319073874        0.9617658319073874
             2                         1                         1
             3                         2                         2
             4                         6                         6
            10                    362880                    362880
            20      1.21645100408832e+17     1.216451004088321e+17
            30     8.841761993739702e+30     8.841761993739751e+30

R8_GAMMA_TEST
  Normal end of execution.

R8_HUGE_TEST
  Python version: 3.6.9
  R8_HUGE returns a "huge" R8;

    R8_HUGE = 1.79769e+308

R8_HUGE_TEST
  Normal end of execution.

R8_HYPER_2F1_TEST
  Python version: 3.6.9
  R8_HYPER_2F1 evaluates the hypergeometric 2F1 function.

      A       B       C       X      
 2F1                       2F1                     DIFF
                                     
(tabulated)               (computed)

    -2.5     3.3     6.7    0.25                  0.723561                  0.723561  2.22045e-16
    -0.5     1.1     6.7    0.25                  0.979111                  0.979111  1.11022e-16
     0.5     1.1     6.7    0.25                   1.02166                   1.02166           0
     2.5     3.3     6.7    0.25                   1.40516                   1.40516  4.44089e-16
    -2.5     3.3     6.7    0.55                  0.469614                  0.469614  5.55112e-17
    -0.5     1.1     6.7    0.55                  0.952962                  0.952962  3.33067e-16
     0.5     1.1     6.7    0.55                   1.05128                   1.05128  8.88178e-16
     2.5     3.3     6.7    0.55                   2.39991                   2.39991  1.77636e-15
    -2.5     3.3     6.7    0.85                  0.291061                  0.291061  2.22045e-16
    -0.5     1.1     6.7    0.85                   0.92537                   0.92537           0
     0.5     1.1     6.7    0.85                   1.08655                   1.08655           0
     2.5     3.3     6.7    0.85                   5.73816                   5.73816  3.97016e-13
     3.3     6.7    -5.5    0.25                   15090.7                   15090.7  1.09139e-11
     1.1     6.7    -0.5    0.25                  -104.312                  -104.312  2.84217e-14
     1.1     6.7     0.5    0.25                   21.1751                   21.1751  1.06581e-14
     3.3     6.7     4.5    0.25                   4.19469                   4.19469  8.88178e-16
     3.3     6.7    -5.5    0.55               1.01708e+10               1.01708e+10  1.14441e-05
     1.1     6.7    -0.5    0.55                  -24708.6                  -24708.6  1.81899e-11
     1.1     6.7     0.5    0.55                   1372.23                   1372.23  2.27374e-12
     3.3     6.7     4.5    0.55                   58.0927                   58.0927  2.84217e-14
     3.3     6.7    -5.5    0.85               5.86821e+18               5.86821e+18       36864
     1.1     6.7    -0.5    0.85               -4.4635e+08               -4.4635e+08  4.76837e-07
     1.1     6.7     0.5    0.85               5.38351e+06               5.38351e+06  8.3819e-09
     3.3     6.7     4.5    0.85                   20396.9                   20396.9  1.45519e-11

R8_HYPER_2F1_TEST
  Normal end of execution.

R8_PSI_TEST:
  Python version: 3.6.9
  R8_PSI evaluates the PSI function.

      X            PSI(X)    R8_PSI(X)

           0.1        -10.42375494041108        -10.42375494041108
           0.2        -5.289039896592188        -5.289039896592188
           0.3        -3.502524222200133        -3.502524222200133
           0.4        -2.561384544585116        -2.561384544585116
           0.5        -1.963510026021423        -1.963510026021424
           0.6         -1.54061921389319        -1.540619213893191
           0.7        -1.220023553697935        -1.220023553697935
           0.8       -0.9650085667061385       -0.9650085667061382
           0.9       -0.7549269499470515       -0.7549269499470511
             1       -0.5772156649015329       -0.5772156649015329
           1.1       -0.4237549404110768       -0.4237549404110768
           1.2       -0.2890398965921883       -0.2890398965921884
           1.3       -0.1691908888667997       -0.1691908888667995
           1.4      -0.06138454458511615      -0.06138454458511624
           1.5       0.03648997397857652       0.03648997397857652
           1.6        0.1260474527734763        0.1260474527734763
           1.7         0.208547874873494         0.208547874873494
           1.8        0.2849914332938615        0.2849914332938615
           1.9        0.3561841611640597        0.3561841611640596
             2        0.4227843350984671        0.4227843350984672

R8_PSI_TEST
  Normal end of execution.

R8VEC_DIFF_NORM_LI_TEST
  Python version: 3.6.9
  R8VEC_DIFF_NORM_LI: L-infinity norm of the difference
  of two R8VEC's.

  Vector V1:

     0:      -5.63163
     1:       9.12635
     2:       6.59018
     3:       1.23391
     4:      -1.69386

  Vector V2:

     0:      -8.67763
     1:      -4.84844
     2:      -7.80086
     3:      -9.12342
     4:       2.67931

  L-Infinity norm of V1-V2: 14.391

R8VEC_DIFF_NORM_LI_TEST
  Normal end of execution.

R8VEC_INDICATOR1_TEST
  Python version: 3.6.9
  R8VEC_INDICATOR1 returns the 1-based indicator matrix.

  The 1-based indicator vector:

     0:             1
     1:             2
     2:             3
     3:             4
     4:             5
     5:             6
     6:             7
     7:             8
     8:             9
     9:            10

R8VEC_INDICATOR1_TEST
  Normal end of execution.

R8VEC_LINSPACE_TEST
  Python version: 3.6.9
  R8VEC_LINSPACE returns evenly spaced values between A and B.

  The linspace vector:

     0:            10
     1:          12.5
     2:            15
     3:          17.5
     4:            20

R8VEC_LINSPACE_TEST
  Normal end of execution.

R8VEC_PRINT_TEST
  Python version: 3.6.9
  R8VEC_PRINT prints an R8VEC.

  Here is an R8VEC:

     0:       123.456
     1:         5e-06
     2:        -1e+06
     3:       3.14159

R8VEC_PRINT_TEST:
  Normal end of execution.

R8VEC_REVERSE_TEST
  Python version: 3.6.9
  R8VEC_REVERSE reverses an R8VEC.

  Original array:

     0:             1
     1:             2
     2:             3
     3:             4
     4:             5

  Reversed array:

     0:             5
     1:             4
     2:             3
     3:             2
     4:             1

R8VEC_REVERSE_TEST:
  Normal end of execution.

R8VEC_UNIFORM_AB_TEST
  Python version: 3.6.9
  R8VEC_UNIFORM_AB computes a random R8VEC.

  -1 <= X <= 5
  Initial seed is 123456789

  Random R8VEC:

     0:       0.31051
     1:       4.73791
     2:       3.97706
     3:       2.37017
     4:       1.49184
     5:     -0.603288
     6:      0.545467
     7:     -0.340259
     8:     -0.737026
     9:       2.80379

R8VEC_UNIFORM_AB_TEST:
  Normal end of execution.

BASHFORTH_SET_TEST
  Python version: 3.6.9
  BASHFORTH_SET sets the abscissas and weights
  for an Adams-Bashforth quadrature rule.

    Order  W             X

         1
                       1            -0

         2
                     1.5            -0
                    -0.5            -1

         3
                 1.91667            -0
                -1.33333            -1
                0.416667            -2

         4
                 2.29167            -0
                -2.45833            -1
                 1.54167            -2
                  -0.375            -3

         5
                 2.64028            -0
                -3.85278            -1
                 3.63333            -2
                -1.76944            -3
                0.348611            -4

         6
                 2.97014            -0
                -5.50208            -1
                 6.93194            -2
                -5.06806            -3
                 1.99792            -4
               -0.329861            -5

         7
                 3.28573            -0
                -7.39563            -1
                 11.6658            -2
                -11.3799            -3
                  6.7318            -4
                -2.22341            -5
                0.315592            -6

         8
                 3.58996            -0
                -9.52521            -1
                 18.0545            -2
                -22.0278            -3
                 17.3797            -4
                -8.61213            -5
                 2.44516            -6
               -0.304225            -7

         9
                 3.88482            -0
                -11.8842            -1
                 26.3108            -2
                -38.5404            -3
                 38.0204            -4
                -25.1247            -5
                 10.7015            -6
                -2.66317            -7
                0.294868            -8

        10
                  4.1718            -0
                -14.4669            -1
                  36.642            -2
                -62.6463            -3
                 74.1793            -4
                -61.2836            -5
                 34.8074            -6
                -12.9943            -7
                 2.87765            -8
               -0.286975            -9

BASHFORTH_SET_TEST:
  Normal end of execution.

CHEBYSHEV_SET_TEST
  Python version: 3.6.9
  CHEBYSHEV_SET sets
  a Chebyshev quadrature rule over [-1,1]

  Index       X             W

   0                         0                         2

   0       -0.5773502691896258                         1
   1        0.5773502691896258                         1

   0       -0.7071067811865475        0.6666666666666666
   1                         0        0.6666666666666666
   2        0.7071067811865475        0.6666666666666666

   0       -0.7946544722917661                       0.5
   1       -0.1875924740850799                       0.5
   2        0.1875924740850799                       0.5
   3        0.7946544722917661                       0.5

   0       -0.8324974870009819                       0.4
   1       -0.3745414095535811                       0.4
   2                         0                       0.4
   3        0.3745414095535811                       0.4
   4        0.8324974870009819                       0.4

   0       -0.8662468181078206        0.3333333333333333
   1       -0.4225186537611115        0.3333333333333333
   2       -0.2666354015167047        0.3333333333333333
   3        0.2666354015167047        0.3333333333333333
   4        0.4225186537611115        0.3333333333333333
   5        0.8662468181078206        0.3333333333333333

   0        -0.883861700758049        0.2857142857142857
   1       -0.5296567752851569        0.2857142857142857
   2       -0.3239118105199076        0.2857142857142857
   3                         0        0.2857142857142857
   4        0.3239118105199076        0.2857142857142857
   5        0.5296567752851569        0.2857142857142857
   6         0.883861700758049        0.2857142857142857

   0       -0.9115893077284345        0.2222222222222222
   1        -0.601018655380238        0.2222222222222222
   2         -0.52876178305788        0.2222222222222222
   3       -0.1679061842148039        0.2222222222222222
   4                         0        0.2222222222222222
   5        0.1679061842148039        0.2222222222222222
   6          0.52876178305788        0.2222222222222222
   7         0.601018655380238        0.2222222222222222
   8        0.9115893077284345        0.2222222222222222

CHEBYSHEV_SET_TEST:
  Normal end of execution.

CHEBYSHEV1_COMPUTE_TEST
  Python version: 3.6.9
  CHEBYSHEV1_COMPUTE computes
  a Chebyshev Type 1 quadrature rule over [-1,1].

     Index       X                       W


   0     6.123233995736766e-17         3.141592653589793

   0       -0.7071067811865475         1.570796326794897
   1        0.7071067811865476         1.570796326794897

   0       -0.8660254037844387         1.047197551196598
   1     6.123233995736766e-17         1.047197551196598
   2        0.8660254037844387         1.047197551196598

   0       -0.9238795325112867        0.7853981633974483
   1       -0.3826834323650897        0.7853981633974483
   2        0.3826834323650898        0.7853981633974483
   3        0.9238795325112867        0.7853981633974483

   0       -0.9510565162951535        0.6283185307179586
   1        -0.587785252292473        0.6283185307179586
   2     6.123233995736766e-17        0.6283185307179586
   3        0.5877852522924731        0.6283185307179586
   4        0.9510565162951535        0.6283185307179586

   0       -0.9659258262890682        0.5235987755982988
   1       -0.7071067811865475        0.5235987755982988
   2       -0.2588190451025206        0.5235987755982988
   3        0.2588190451025207        0.5235987755982988
   4        0.7071067811865476        0.5235987755982988
   5        0.9659258262890683        0.5235987755982988

   0       -0.9749279121818237        0.4487989505128276
   1       -0.7818314824680295        0.4487989505128276
   2       -0.4338837391175581        0.4487989505128276
   3     6.123233995736766e-17        0.4487989505128276
   4        0.4338837391175582        0.4487989505128276
   5        0.7818314824680298        0.4487989505128276
   6        0.9749279121818236        0.4487989505128276

   0       -0.9807852804032304        0.3926990816987241
   1       -0.8314696123025453        0.3926990816987241
   2        -0.555570233019602        0.3926990816987241
   3       -0.1950903220161282        0.3926990816987241
   4        0.1950903220161283        0.3926990816987241
   5        0.5555702330196023        0.3926990816987241
   6        0.8314696123025452        0.3926990816987241
   7        0.9807852804032304        0.3926990816987241

   0        -0.984807753012208        0.3490658503988659
   1       -0.8660254037844385        0.3490658503988659
   2       -0.6427876096865394        0.3490658503988659
   3       -0.3420201433256685        0.3490658503988659
   4     6.123233995736766e-17        0.3490658503988659
   5        0.3420201433256688        0.3490658503988659
   6        0.6427876096865394        0.3490658503988659
   7        0.8660254037844387        0.3490658503988659
   8         0.984807753012208        0.3490658503988659

   0       -0.9876883405951377        0.3141592653589793
   1       -0.8910065241883678        0.3141592653589793
   2       -0.7071067811865475        0.3141592653589793
   3       -0.4539904997395467        0.3141592653589793
   4       -0.1564344650402306        0.3141592653589793
   5        0.1564344650402309        0.3141592653589793
   6        0.4539904997395468        0.3141592653589793
   7        0.7071067811865476        0.3141592653589793
   8        0.8910065241883679        0.3141592653589793
   9        0.9876883405951378        0.3141592653589793

CHEBYSHEV1_COMPUTE_TEST:
  Normal end of execution.

CHEBYSHEV1_INTEGRAL_TEST
  Python version: 3.6.9
  CHEBYSHEV1_INTEGRAL evaluates
  Integral ( -1 < x < +1 ) x^n / (1-x*x) dx

         N         Value

         0         3.141592653589793
         1                         0
         2         1.570796326794897
         3                         0
         4         1.178097245096172
         5                         0
         6        0.9817477042468102
         7                         0
         8        0.8590292412159591
         9                         0
        10        0.7731263170943631

CHEBYSHEV1_INTEGRAL_TEST
  Normal end of execution.

CHEBYSHEV1_SET_TEST
  Python version: 3.6.9
  CHEBYSHEV1_SET sets
  a Chebyshev Type 1 quadrature rule over [-1,1]

  Index       X             W


   0                         0         3.141592653589793

   0       -0.7071067811865475         1.570796326794897
   1        0.7071067811865476         1.570796326794897

   0       -0.8660254037844387         1.047197551196598
   1                         0         1.047197551196598
   2        0.8660254037844387         1.047197551196598

   0       -0.9238795325112867        0.7853981633974483
   1       -0.3826834323650897        0.7853981633974483
   2        0.3826834323650898        0.7853981633974483
   3        0.9238795325112867        0.7853981633974483

   0       -0.9510565162951535        0.6283185307179586
   1        -0.587785252292473        0.6283185307179586
   2                         0        0.6283185307179586
   3        0.5877852522924731        0.6283185307179586
   4        0.9510565162951535        0.6283185307179586

   0       -0.9659258262890682        0.5235987755982988
   1       -0.7071067811865475        0.5235987755982988
   2       -0.2588190451025206        0.5235987755982988
   3        0.2588190451025207        0.5235987755982988
   4        0.7071067811865476        0.5235987755982988
   5        0.9659258262890683        0.5235987755982988

   0       -0.9749279121818237        0.4487989505128276
   1       -0.7818314824680295        0.4487989505128276
   2       -0.4338837391175581        0.4487989505128276
   3                         0        0.4487989505128276
   4        0.4338837391175582        0.4487989505128276
   5        0.7818314824680298        0.4487989505128276
   6        0.9749279121818236        0.4487989505128276

   0       -0.9807852804032304        0.3926990816987241
   1       -0.8314696123025453        0.3926990816987241
   2        -0.555570233019602        0.3926990816987241
   3       -0.1950903220161282        0.3926990816987241
   4        0.1950903220161283        0.3926990816987241
   5        0.5555702330196023        0.3926990816987241
   6        0.8314696123025452        0.3926990816987241
   7        0.9807852804032304        0.3926990816987241

   0        -0.984807753012208        0.3490658503988659
   1       -0.8660254037844385        0.3490658503988659
   2       -0.6427876096865394        0.3490658503988659
   3       -0.3420201433256688        0.3490658503988659
   4                         0        0.3490658503988659
   5        0.3420201433256688        0.3490658503988659
   6        0.6427876096865394        0.3490658503988659
   7        0.8660254037844387        0.3490658503988659
   8         0.984807753012208        0.3490658503988659

   0       -0.9876883405951377        0.3141592653589793
   1       -0.8910065241883678        0.3141592653589793
   2       -0.7071067811865475        0.3141592653589793
   3       -0.4539904997395467        0.3141592653589793
   4       -0.1564344650402306        0.3141592653589793
   5        0.1564344650402309        0.3141592653589793
   6        0.4539904997395468        0.3141592653589793
   7        0.7071067811865476        0.3141592653589793
   8        0.8910065241883679        0.3141592653589793
   9        0.9876883405951378        0.3141592653589793

CHEBYSHEV1_SET_TEST:
  Normal end of execution.

CHEBYSHEV2_COMPUTE_TEST
  Python version: 3.6.9
  CHEBYSHEV2_COMPUTE computes
  a Chebyshev Type 2 quadrature rule over [-1,1].

     Index       X                       W

   0     6.123233995736766e-17         1.570796326794897

   0       -0.4999999999999998        0.7853981633974484
   1        0.5000000000000001        0.7853981633974481

   0       -0.7071067811865475        0.3926990816987243
   1     6.123233995736766e-17        0.7853981633974483
   2        0.7071067811865476         0.392699081698724

   0       -0.8090169943749473        0.2170787134227061
   1       -0.3090169943749473        0.5683194499747424
   2        0.3090169943749475        0.5683194499747423
   3        0.8090169943749475         0.217078713422706

   0       -0.8660254037844387        0.1308996938995747
   1       -0.4999999999999998        0.3926990816987242
   2     6.123233995736766e-17        0.5235987755982988
   3        0.5000000000000001         0.392699081698724
   4        0.8660254037844387        0.1308996938995747

   0        -0.900968867902419       0.08448869089158863
   1       -0.6234898018587335        0.2743330560697779
   2       -0.2225209339563143        0.4265764164360819
   3        0.2225209339563144        0.4265764164360819
   4        0.6234898018587336        0.2743330560697778
   5        0.9009688679024191       0.08448869089158857

   0       -0.9238795325112867       0.05750944903191316
   1       -0.7071067811865475        0.1963495408493621
   2       -0.3826834323650897         0.335189632666811
   3     6.123233995736766e-17        0.3926990816987241
   4        0.3826834323650898         0.335189632666811
   5        0.7071067811865476         0.196349540849362
   6        0.9238795325112867       0.05750944903191313

   0       -0.9396926207859083       0.04083294770910712
   1       -0.7660444431189779        0.1442256007956728
   2       -0.4999999999999998        0.2617993877991495
   3       -0.1736481776669303         0.338540227093519
   4        0.1736481776669304         0.338540227093519
   5        0.5000000000000001        0.2617993877991494
   6         0.766044443118978        0.1442256007956727
   7        0.9396926207859084       0.04083294770910708

   0       -0.9510565162951535       0.02999954037160818
   1       -0.8090169943749473         0.108539356711353
   2        -0.587785252292473        0.2056199086476263
   3       -0.3090169943749473        0.2841597249873712
   4     6.123233995736766e-17        0.3141592653589793
   5        0.3090169943749475        0.2841597249873711
   6        0.5877852522924731        0.2056199086476263
   7        0.8090169943749475         0.108539356711353
   8        0.9510565162951535       0.02999954037160816

   0       -0.9594929736144974       0.02266894250185884
   1       -0.8412535328311811       0.08347854093418908
   2        -0.654860733945285        0.1631221774548166
   3       -0.4154150130018863        0.2363135602034873
   4        -0.142314838273285        0.2798149423030966
   5        0.1423148382732851        0.2798149423030965
   6        0.4154150130018864        0.2363135602034873
   7        0.6548607339452851        0.1631221774548166
   8        0.8412535328311812       0.08347854093418902
   9        0.9594929736144974       0.02266894250185884

CHEBYSHEV2_COMPUTE_TEST:
  Normal end of execution.

CHEBYSHEV2_INTEGRAL_TEST
  Python version: 3.6.9
  CHEBYSHEV2_INTEGRAL evaluates
  Integral ( -1 < x < +1 ) x^n * (1-x*x) dx

         N         Value

         0         3.141592653589793
         1                         0
         2        0.3926990816987241
         3                         0
         4       0.03272492347489368
         5                         0
         6      0.001917475984857051
         7                         0
         8     8.590292412159592e-05
         9                         0
        10     3.107021271759111e-06

CHEBYSHEV2_INTEGRAL_TEST
  Normal end of execution.

CHEBYSHEV2_SET_TEST
  Python version: 3.6.9
  CHEBYSHEV2_SET sets
  a Chebyshev Type 2 quadrature rule over [-1,1]

  Index       X             W

   0                         0         1.570796326794897

   0                      -0.5        0.7853981633974484
   1                       0.5        0.7853981633974481

   0       -0.7071067811865475        0.3926990816987243
   1                         0        0.7853981633974483
   2        0.7071067811865476         0.392699081698724

   0       -0.8090169943749473        0.2170787134227061
   1       -0.3090169943749473        0.5683194499747424
   2        0.3090169943749475        0.5683194499747423
   3        0.8090169943749475         0.217078713422706

   0       -0.8660254037844387        0.1308996938995747
   1                      -0.5        0.3926990816987242
   2                         0        0.5235987755982988
   3                       0.5         0.392699081698724
   4        0.8660254037844387        0.1308996938995747

   0        -0.900968867902419       0.08448869089158863
   1       -0.6234898018587335        0.2743330560697779
   2       -0.2225209339563143        0.4265764164360819
   3        0.2225209339563144        0.4265764164360819
   4        0.6234898018587336        0.2743330560697778
   5        0.9009688679024191       0.08448869089158857

   0       -0.9238795325112867       0.05750944903191316
   1       -0.7071067811865475        0.1963495408493621
   2       -0.3826834323650897         0.335189632666811
   3                         0        0.3926990816987241
   4        0.3826834323650898         0.335189632666811
   5        0.7071067811865476         0.196349540849362
   6        0.9238795325112867       0.05750944903191313

   0       -0.9396926207859083       0.04083294770910712
   1       -0.7660444431189779        0.1442256007956728
   2                      -0.5        0.2617993877991495
   3       -0.1736481776669303         0.338540227093519
   4        0.1736481776669304         0.338540227093519
   5                       0.5        0.2617993877991494
   6         0.766044443118978        0.1442256007956727
   7        0.9396926207859084       0.04083294770910708

   0       -0.9510565162951535       0.02999954037160818
   1       -0.8090169943749473         0.108539356711353
   2        -0.587785252292473        0.2056199086476263
   3       -0.3090169943749473        0.2841597249873712
   4                         0        0.3141592653589793
   5        0.3090169943749475        0.2841597249873711
   6        0.5877852522924731        0.2056199086476263
   7        0.8090169943749475         0.108539356711353
   8        0.9510565162951535       0.02999954037160816

   0       -0.9594929736144974       0.02266894250185884
   1       -0.8412535328311811       0.08347854093418908
   2        -0.654860733945285        0.1631221774548166
   3       -0.4154150130018863        0.2363135602034873
   4        -0.142314838273285        0.2798149423030966
   5        0.1423148382732851        0.2798149423030965
   6        0.4154150130018864        0.2363135602034873
   7        0.6548607339452851        0.1631221774548166
   8        0.8412535328311812       0.08347854093418902
   9        0.9594929736144974       0.02266894250185884

CHEBYSHEV2_SET_TEST:
  Normal end of execution.

CHEBYSHEV3_COMPUTE_TEST
  Python version: 3.6.9
  CHEBYSHEV3_COMPUTE computes
  a Chebyshev Type 3 quadrature rule over [-1,1].

     Index       X                       W

   0                         0         3.141592653589793

   0                         1         1.570796326794897
   1                        -1         1.570796326794897

   0                         1        0.7853981633974483
   1     6.123233995736766e-17         1.570796326794897
   2                        -1        0.7853981633974483

   0                         1        0.5235987755982988
   1        0.5000000000000001         1.047197551196598
   2       -0.4999999999999998         1.047197551196598
   3                        -1        0.5235987755982988

   0                         1        0.3926990816987241
   1        0.7071067811865476        0.7853981633974483
   2     6.123233995736766e-17        0.7853981633974483
   3       -0.7071067811865475        0.7853981633974483
   4                        -1        0.3926990816987241

   0                         1        0.3141592653589793
   1        0.8090169943749475        0.6283185307179586
   2        0.3090169943749475        0.6283185307179586
   3       -0.3090169943749473        0.6283185307179586
   4       -0.8090169943749473        0.6283185307179586
   5                        -1        0.3141592653589793

   0                         1        0.2617993877991494
   1        0.8660254037844387        0.5235987755982988
   2        0.5000000000000001        0.5235987755982988
   3     6.123233995736766e-17        0.5235987755982988
   4       -0.4999999999999998        0.5235987755982988
   5       -0.8660254037844387        0.5235987755982988
   6                        -1        0.2617993877991494

   0                         1        0.2243994752564138
   1        0.9009688679024191        0.4487989505128276
   2        0.6234898018587336        0.4487989505128276
   3        0.2225209339563144        0.4487989505128276
   4       -0.2225209339563143        0.4487989505128276
   5       -0.6234898018587335        0.4487989505128276
   6        -0.900968867902419        0.4487989505128276
   7                        -1        0.2243994752564138

   0                         1        0.1963495408493621
   1        0.9238795325112867        0.3926990816987241
   2        0.7071067811865476        0.3926990816987241
   3        0.3826834323650898        0.3926990816987241
   4     6.123233995736766e-17        0.3926990816987241
   5       -0.3826834323650897        0.3926990816987241
   6       -0.7071067811865475        0.3926990816987241
   7       -0.9238795325112867        0.3926990816987241
   8                        -1        0.1963495408493621

   0                         1        0.1745329251994329
   1        0.9396926207859084        0.3490658503988659
   2         0.766044443118978        0.3490658503988659
   3        0.5000000000000001        0.3490658503988659
   4        0.1736481776669304        0.3490658503988659
   5       -0.1736481776669303        0.3490658503988659
   6       -0.4999999999999998        0.3490658503988659
   7       -0.7660444431189779        0.3490658503988659
   8       -0.9396926207859083        0.3490658503988659
   9                        -1        0.1745329251994329

CHEBYSHEV3_COMPUTE_TEST:
  Normal end of execution.

CHEBYSHEV3_INTEGRAL_TEST
  Python version: 3.6.9
  CHEBYSHEV3_INTEGRAL evaluates
  Integral ( -1 < x < +1 ) x^n / (1-x*x) dx

         N         Value

         0         3.141592653589793
         1                         0
         2         1.570796326794897
         3                         0
         4         1.178097245096172
         5                         0
         6        0.9817477042468102
         7                         0
         8        0.8590292412159591
         9                         0
        10        0.7731263170943631

CHEBYSHEV3_INTEGRAL_TEST
  Normal end of execution.

CHEBYSHEV3_SET_TEST
  Python version: 3.6.9
  CHEBYSHEV3_SET sets
  a Chebyshev Type 3 quadrature rule over [-1,1].

  Index       X             W

   0                         0         3.141592653589793

   0                        -1         1.570796326794897
   1                         1         1.570796326794897

   0                        -1        0.7853981633974483
   1                         0         1.570796326794897
   2                         1        0.7853981633974483

   0                        -1        0.5235987755982988
   1                      -0.5         1.047197551196598
   2                       0.5         1.047197551196598
   3                         1        0.5235987755982988

   0                        -1        0.3926990816987241
   1       -0.7071067811865475        0.7853981633974483
   2                         0        0.7853981633974483
   3        0.7071067811865476        0.7853981633974483
   4                         1        0.3926990816987241

   0                        -1        0.3141592653589793
   1       -0.8090169943749473        0.6283185307179586
   2       -0.3090169943749473        0.6283185307179586
   3        0.3090169943749475        0.6283185307179586
   4        0.8090169943749475        0.6283185307179586
   5                         1        0.3141592653589793

   0                        -1        0.2617993877991494
   1       -0.8660254037844387        0.5235987755982988
   2                      -0.5        0.5235987755982988
   3                         0        0.5235987755982988
   4        0.5000000000000001        0.5235987755982988
   5        0.8660254037844387        0.5235987755982988
   6                         1        0.2617993877991494

   0                        -1        0.2243994752564138
   1        -0.900968867902419        0.4487989505128276
   2       -0.6234898018587335        0.4487989505128276
   3       -0.2225209339563143        0.4487989505128276
   4        0.2225209339563144        0.4487989505128276
   5        0.6234898018587336        0.4487989505128276
   6        0.9009688679024191        0.4487989505128276
   7                         1        0.2243994752564138

   0                        -1        0.1963495408493621
   1       -0.9238795325112867        0.3926990816987241
   2       -0.7071067811865475        0.3926990816987241
   3       -0.3826834323650897        0.3926990816987241
   4                         0        0.3926990816987241
   5        0.3826834323650898        0.3926990816987241
   6        0.7071067811865476        0.3926990816987241
   7        0.9238795325112867        0.3926990816987241
   8                         1        0.1963495408493621

   0                        -1        0.1745329251994329
   1       -0.9396926207859083        0.3490658503988659
   2       -0.7660444431189779        0.3490658503988659
   3                      -0.5        0.3490658503988659
   4       -0.1736481776669303        0.3490658503988659
   5        0.1736481776669304        0.3490658503988659
   6        0.5000000000000001        0.3490658503988659
   7         0.766044443118978        0.3490658503988659
   8        0.9396926207859084        0.3490658503988659
   9                         1        0.1745329251994329

CHEBYSHEV3_SET_TEST:
  Normal end of execution.

CLENSHAW_CURTIS_COMPUTE_TEST
  Python version: 3.6.9
  CLENSHAW_CURTIS_COMPUTE computes
  a Clenshaw-Curtis quadrature rule over [-1,1].

     Index       X                       W

   0                         0                         2

   0                        -1                         1
   1                         1                         1

   0                        -1        0.3333333333333334
   1     6.123233995736766e-17         1.333333333333333
   2                         1        0.3333333333333334

   0                        -1        0.1111111111111111
   1       -0.4999999999999998        0.8888888888888892
   2        0.5000000000000001        0.8888888888888888
   3                         1        0.1111111111111111

   0                        -1       0.06666666666666668
   1       -0.7071067811865475        0.5333333333333334
   2     6.123233995736766e-17        0.7999999999999999
   3        0.7071067811865476        0.5333333333333333
   4                         1       0.06666666666666668

   0                        -1       0.04000000000000001
   1       -0.8090169943749473        0.3607430412000113
   2       -0.3090169943749473        0.5992569587999887
   3        0.3090169943749475        0.5992569587999889
   4        0.8090169943749475        0.3607430412000112
   5                         1       0.04000000000000001

   0                        -1       0.02857142857142858
   1       -0.8660254037844387        0.2539682539682539
   2       -0.4999999999999998        0.4571428571428573
   3     6.123233995736766e-17        0.5206349206349206
   4        0.5000000000000001        0.4571428571428571
   5        0.8660254037844387        0.2539682539682539
   6                         1       0.02857142857142858

   0                        -1       0.02040816326530613
   1        -0.900968867902419        0.1901410072182084
   2       -0.6234898018587335        0.3522424237181591
   3       -0.2225209339563143        0.4372084057983264
   4        0.2225209339563144        0.4372084057983264
   5        0.6234898018587336        0.3522424237181591
   6        0.9009688679024191        0.1901410072182084
   7                         1       0.02040816326530613

   0                        -1       0.01587301587301588
   1       -0.9238795325112867        0.1462186492160182
   2       -0.7071067811865475        0.2793650793650794
   3       -0.3826834323650897        0.3617178587204898
   4     6.123233995736766e-17        0.3936507936507936
   5        0.3826834323650898        0.3617178587204897
   6        0.7071067811865476        0.2793650793650794
   7        0.9238795325112867        0.1462186492160181
   8                         1       0.01587301587301588

   0                        -1       0.01234567901234569
   1       -0.9396926207859083        0.1165674565720372
   2       -0.7660444431189779        0.2252843233381044
   3       -0.4999999999999998        0.3019400352733687
   4       -0.1736481776669303        0.3438625058041442
   5        0.1736481776669304        0.3438625058041442
   6        0.5000000000000001        0.3019400352733685
   7         0.766044443118978        0.2252843233381044
   8        0.9396926207859084        0.1165674565720371
   9                         1       0.01234567901234569

CLENSHAW_CURTIS_COMPUTE_TEST:
  Normal end of execution.

CLENSHAW_CURTIS_SET_TEST
  Python version: 3.6.9
  CLENSHAW_CURTIS_SET sets up a Clenshaw Curtis
  quadrature rule over [-1,1].

     Index       X                       W

   0                         0                         2

   0                        -1                         1
   1                         1                         1

   0                        -1        0.3333333333333333
   1                         0         1.333333333333333
   2                         1        0.3333333333333333

   0                        -1        0.1111111111111111
   1                      -0.5        0.8888888888888888
   2                       0.5        0.8888888888888888
   3                         1        0.1111111111111111

   0                        -1       0.06666666666666667
   1       -0.7071067811865476        0.5333333333333333
   2                         0                       0.8
   3        0.7071067811865476        0.5333333333333333
   4                         1       0.06666666666666667

   0                        -1                      0.04
   1       -0.8090169943749475        0.3607430412000112
   2       -0.3090169943749475        0.5992569587999887
   3        0.3090169943749475        0.5992569587999887
   4        0.8090169943749373        0.3607430412000112
   5                         1                      0.04

   0                        -1       0.02857142857142857
   1       -0.8660254037844386         0.253968253968254
   2                      -0.5        0.4571428571428571
   3                         0        0.5206349206349207
   4                       0.5        0.4571428571428571
   5        0.8660254037844386         0.253968253968254
   6                         1       0.02857142857142857

   0                        -1       0.02040816326530612
   1       -0.9009688679024191        0.1901410072182083
   2       -0.6234898018587335        0.3522424237181591
   3       -0.2225209339563144        0.4372084057983264
   4        0.2225209339563144        0.4372084057983264
   5        0.6234898018587335        0.3522424237181591
   6        0.9009688679024191        0.1901410072182083
   7                         1       0.02040816326530612

   0                        -1       0.01587301587301587
   1       -0.9238795325112867        0.1462186492160182
   2       -0.7071067811865476        0.2793650793650794
   3       -0.3826834323650898        0.3617178587204898
   4                         0        0.3936507936507936
   5        0.3826834323650898        0.3617178587204898
   6        0.7071067811865476        0.2793650793650794
   7        0.9238795325112867        0.1462186492160182
   8                         1       0.01587301587301587

   0                        -1       0.01234567901234568
   1       -0.9396926207859084        0.1165674565720371
   2        -0.766044443118979        0.2252843233381044
   3                      -0.5        0.3019400352733686
   4       -0.1736481776669304        0.3438625058041442
   5        0.1736481776669304        0.3438625058041442
   6                       0.5        0.3019400352733686
   7         0.766044443118979        0.2252843233381044
   8        0.9396926207859084        0.1165674565720371
   9                         1       0.01234567901234568

CLENSHAW_CURTIS_SET_TEST:
  Normal end of execution.

FEJER1_COMPUTE_TEST
  Python version: 3.6.9
  FEJER1_COMPUTE computes the abscissas and weights
  of a Fejer type 1 quadrature rule.

    Order  W             X

         1
                       2   6.12323e-17

         2
                       1     -0.707107
                       1      0.707107

         3
                0.444444     -0.866025
                 1.11111   6.12323e-17
                0.444444      0.866025

         4
                0.264298      -0.92388
                0.735702     -0.382683
                0.735702      0.382683
                0.264298       0.92388

         5
                0.167781     -0.951057
                0.525552     -0.587785
                0.613333   6.12323e-17
                0.525552      0.587785
                0.167781      0.951057

         6
                0.118661     -0.965926
                0.377778     -0.707107
                0.503561     -0.258819
                0.503561      0.258819
                0.377778      0.707107
                0.118661      0.965926

         7
               0.0867162     -0.974928
                0.287831     -0.781831
                0.398242     -0.433884
                0.454422   6.12323e-17
                0.398242      0.433884
                0.287831      0.781831
               0.0867162      0.974928

         8
               0.0669829     -0.980785
                0.222988      -0.83147
                0.324153      -0.55557
                0.385877      -0.19509
                0.385877       0.19509
                0.324153       0.55557
                0.222988       0.83147
               0.0669829      0.980785

         9
               0.0527366     -0.984808
                0.179189     -0.866025
                0.264037     -0.642788
                0.330845      -0.34202
                0.346384   6.12323e-17
                0.330845       0.34202
                0.264037      0.642788
                0.179189      0.866025
               0.0527366      0.984808

        10
               0.0429391     -0.987688
                0.145875     -0.891007
                0.220317     -0.707107
                0.280879      -0.45399
                0.309989     -0.156434
                0.309989      0.156434
                0.280879       0.45399
                0.220317      0.707107
                0.145875      0.891007
               0.0429391      0.987688

FEJER1_COMPUTE_TEST:
  Normal end of execution.

FEJER1_SET_TEST
  Python version: 3.6.9
  FEJER1_SET sets the abscissas and weights
  of a Fejer type 1 quadrature rule.

    Order  W             X

         1
                       2             0

         2
                       1     -0.707107
                       1      0.707107

         3
                0.444444     -0.866025
                 1.11111             0
                0.444444      0.866025

         4
                0.264298      -0.92388
                0.735702     -0.382683
                0.735702      0.382683
                0.264298       0.92388

         5
                0.167781     -0.951057
                0.525552     -0.587785
                0.613333             0
                0.525552      0.587785
                0.167781      0.951057

         6
                0.118661     -0.965926
                0.377778     -0.707107
                0.503561     -0.258819
                0.503561      0.258819
                0.377778      0.707107
                0.118661      0.965926

         7
               0.0867162     -0.974928
                0.287831     -0.781831
                0.398242     -0.433884
                0.454422             0
                0.398242      0.433884
                0.287831      0.781831
               0.0867162      0.974928

         8
               0.0669829     -0.980785
                0.222988      -0.83147
                0.324153      -0.55557
                0.385877      -0.19509
                0.385877       0.19509
                0.324153       0.55557
                0.222988       0.83147
               0.0669829      0.980785

         9
               0.0527366     -0.984808
                0.179189     -0.866025
                0.264037     -0.642788
                0.330845      -0.34202
                0.346384             0
                0.330845       0.34202
                0.264037      0.642788
                0.179189      0.866025
               0.0527366      0.984808

        10
               0.0429391     -0.987688
                0.145875     -0.891007
                0.220317     -0.707107
                0.280879      -0.45399
                0.309989     -0.156434
                0.309989      0.156434
                0.280879       0.45399
                0.220317      0.707107
                0.145875      0.891007
               0.0429391      0.987688

FEJER1_SET_TEST:
  Normal end of execution.

FEJER2_COMPUTE_TEST
  Python version: 3.6.9
  FEJER2_COMPUTE computes the abscissas and weights
  of a Fejer type 2 quadrature rule.

    Order  W             X

         1
                       2             0

         2
                       1          -0.5
                       1           0.5

         3
                0.666667     -0.707107
                0.666667   6.12323e-17
                0.666667      0.707107

         4
                0.425464     -0.809017
                0.574536     -0.309017
                0.574536      0.309017
                0.425464      0.809017

         5
                0.311111     -0.866025
                     0.4          -0.5
                0.577778   6.12323e-17
                     0.4           0.5
                0.311111      0.866025

         6
                0.226915     -0.900969
                0.326794      -0.62349
                0.446291     -0.222521
                0.446291      0.222521
                0.326794       0.62349
                0.226915      0.900969

         7
                0.177965      -0.92388
                0.247619     -0.707107
                0.393464     -0.382683
                0.361905   6.12323e-17
                0.393464      0.382683
                0.247619      0.707107
                0.177965       0.92388

         8
                 0.13977     -0.939693
                 0.20637     -0.766044
                0.314286          -0.5
                0.339575     -0.173648
                0.339575      0.173648
                0.314286           0.5
                 0.20637      0.766044
                 0.13977      0.939693

         9
                0.114781     -0.951057
                0.165433     -0.809017
                 0.27379     -0.587785
                0.279011     -0.309017
                0.333968   6.12323e-17
                0.279011      0.309017
                 0.27379      0.587785
                0.165433      0.809017
                0.114781      0.951057

        10
               0.0944195     -0.959493
                0.141135     -0.841254
                0.226387     -0.654861
                0.253051     -0.415415
                0.285007     -0.142315
                0.285007      0.142315
                0.253051      0.415415
                0.226387      0.654861
                0.141135      0.841254
               0.0944195      0.959493

FEJER2_COMPUTE_TEST:
  Normal end of execution.

FEJER2_SET_TEST
  Python version: 3.6.9
  FEJER2_SET sets the abscissas and weights
  of a Fejer type 2 quadrature rule.

    Order  W             X

         1
                       2             0

         2
                       1          -0.5
                       1           0.5

         3
                0.666667     -0.707107
                0.666667             0
                0.666667      0.707107

         4
                0.425464     -0.809017
                0.574536     -0.309017
                0.574536      0.309017
                0.425464      0.809017

         5
                0.311111     -0.866025
                     0.4          -0.5
                0.577778             0
                     0.4           0.5
                0.311111      0.866025

         6
                0.226915     -0.900969
                0.326794      -0.62349
                0.446291     -0.222521
                0.446291      0.222521
                0.326794       0.62349
                0.226915      0.900969

         7
                0.177965      -0.92388
                0.247619     -0.707107
                0.393464     -0.382683
                0.361905             0
                0.393464      0.382683
                0.247619      0.707107
                0.177965       0.92388

         8
                 0.13977     -0.939693
                 0.20637     -0.766044
                0.314286          -0.5
                0.339575     -0.173648
                0.339575      0.173648
                0.314286           0.5
                 0.20637      0.766044
                 0.13977      0.939693

         9
                0.114781     -0.951057
                0.165433     -0.809017
                 0.27379     -0.587785
                0.279011     -0.309017
                0.333968             0
                0.279011      0.309017
                 0.27379      0.587785
                0.165433      0.809017
                0.114781      0.951057

        10
               0.0944195     -0.959493
                0.141135     -0.841254
                0.226387     -0.654861
                0.253051     -0.415415
                0.285007     -0.142315
                0.285007      0.142315
                0.253051      0.415415
                0.226387      0.654861
                0.141135      0.841254
               0.0944195      0.959493

FEJER2_SET_TEST:
  Normal end of execution.

GEGENBAUER_INTEGRAL_TEST
  Python version: 3.6.9
  GEGENBAUER_INTEGRAL evaluates
  Integral ( -1 < x < +1 ) x^n * (1-x*x)^alpha dx

         N         Value

         0         1.748038369528081
         1                         0
         2        0.4994395341508805
         3                         0
         4        0.2724215640822983
         5                         0
         6        0.1816143760548655
         7                         0
         8         0.133821119198322
         9                         0
        10        0.1047295715465127

GEGENBAUER_INTEGRAL_TEST
  Normal end of execution.

GEGENBAUER_SS_COMPUTE_TEST
  Python version: 3.6.9
  GEGENBAUER_SS_COMPUTE computes Gauss-Gegenbauer rules;

  Abscissas and weights for a generalized Gauss Gegenbauer rule
  with ALPHA = 0.5

   #                         W                         X


   0         1.570796326794897                         0

   0        0.7853981633974484                      -0.5
   1        0.7853981633974484                       0.5

   0        0.3926990816987239       -0.7071067811865475
   1        0.7853981633974484                         0
   2        0.3926990816987239        0.7071067811865475

   0         0.217078713422706       -0.8090169943749475
   1        0.5683194499747424       -0.3090169943749475
   2        0.5683194499747424        0.3090169943749474
   3         0.217078713422706        0.8090169943749475

   0         0.130899693899574       -0.8660254037844387
   1        0.3926990816987242                      -0.5
   2        0.5235987755982989                         0
   3        0.3926990816987242                       0.5
   4         0.130899693899575        0.8660254037844387

   0       0.08448869089158841       -0.9009688679024191
   1        0.2743330560697777       -0.6234898018587335
   2        0.4265764164360819       -0.2225209339563144
   3        0.4265764164360819        0.2225209339563144
   4        0.2743330560697777        0.6234898018587335
   5       0.08448869089158884         0.900968867902419

   0       0.05750944903191331       -0.9238795325112867
   1        0.1963495408493619       -0.7071067811865475
   2        0.3351896326668111       -0.3826834323650898
   3        0.3926990816987242                         0
   4        0.3351896326668108        0.3826834323650898
   5        0.1963495408493624        0.7071067811865476
   6       0.05750944903191331        0.9238795325112867

   0       0.04083294770910693       -0.9396926207859084
   1        0.1442256007956728        -0.766044443118978
   2        0.2617993877991495                      -0.5
   3        0.3385402270935191       -0.1736481776669303
   4        0.3385402270935191        0.1736481776669303
   5        0.2617993877991495                       0.5
   6        0.1442256007956728         0.766044443118978
   7       0.04083294770910754        0.9396926207859084

   0       0.02999954037160841       -0.9510565162951536
   1         0.108539356711353       -0.8090169943749475
   2        0.2056199086476264       -0.5877852522924731
   3        0.2841597249873712       -0.3090169943749475
   4        0.3141592653589794                         0
   5        0.2841597249873712        0.3090169943749475
   6        0.2056199086476264        0.5877852522924731
   7         0.108539356711353        0.8090169943749475
   8       0.02999954037160841        0.9510565162951536

   0       0.02266894250185901       -0.9594929736144974
   1       0.08347854093418892       -0.8412535328311812
   2        0.1631221774548165       -0.6548607339452851
   3        0.2363135602034873       -0.4154150130018864
   4        0.2798149423030965       -0.1423148382732851
   5        0.2798149423030966        0.1423148382732851
   6        0.2363135602034873        0.4154150130018864
   7        0.1631221774548165        0.6548607339452851
   8       0.08347854093418892        0.8412535328311812
   9       0.02266894250185901        0.9594929736144974

GEGENBAUER_SS_COMPUTE_TEST:
  Normal end of execution.

GEN_HERMITE_EK_COMPUTE_TEST
  Python version: 3.6.9
  GEN_HERMITE_EK_COMPUTE computes
  a generalized Hermite quadrature rule
  using the Elhay-Kautsky algorithm.

  Using ALPHA = 0.5

  Index       X             W

   0                         0         1.225416702465178

   0       -0.8660254037844385        0.6127083512325888
   1        0.8660254037844385        0.6127083512325888

   0        -1.322875655532295         0.262589293385395
   1                         0        0.7002381156943873
   2         1.322875655532295        0.2625892933853951

   0        -1.752961966367865       0.07477218653431648
   1       -0.6535475074298001        0.5379361646982723
   2        0.6535475074297997        0.5379361646982722
   3         1.752961966367866       0.07477218653431648

   0        -2.099598150879758       0.02069085274024055
   1        -1.044838554429487        0.3373854564216626
   2                         0        0.5092640841413727
   3         1.044838554429487        0.3373854564216618
   4         2.099598150879757       0.02069085274024059

   0        -2.431196006814872      0.004758432285876828
   1        -1.428264330850234        0.1432946705182552
   2       -0.5471261076464521        0.4646552484284566
   3        0.5471261076464519        0.4646552484284565
   4         1.428264330850234        0.1432946705182554
   5         2.431196006814872      0.004758432285876804

   0        -2.719880088556293      0.001106289401968463
   1        -1.747360778896521       0.05564733125066081
   2       -0.8938582730216026        0.3522490969234104
   3                         0        0.4074112673130981
   4        0.8938582730216028        0.3522490969234111
   5         1.747360778896521       0.05564733125066098
   6         2.719880088556293       0.00110628940196846

   0        -2.999078968343316     0.0002288084584739164
   1        -2.057439418477468       0.01787577463926721
   2        -1.241738340943189        0.1866121206001918
   3       -0.4801606747408059        0.4079916475346562
   4        0.4801606747408056        0.4079916475346565
   5         1.241738340943189        0.1866121206001918
   6         2.057439418477468       0.01787577463926723
   7         2.999078968343316     0.0002288084584739132

   0        -3.251152326134132     4.824428349517108e-05
   1        -2.331322119300714      0.005575754103643737
   2        -1.537416408684744       0.08875797489986054
   3       -0.7945417010067838        0.3467847917084952
   4                         0         0.343083172474188
   5         0.794541701006784        0.3467847917084949
   6         1.537416408684744       0.08875797489986068
   7         2.331322119300714      0.005575754103643735
   8         3.251152326134132     4.824428349517049e-05

   0        -3.496605880747676     9.347334083394586e-06
   1        -2.598397149544623       0.00153635644240256
   2        -1.827991812365274       0.03517634314374584
   3        -1.114905370566644        0.2117439807373517
   4       -0.4330259998733383        0.3642423235750059
   5        0.4330259998733384        0.3642423235750052
   6         1.114905370566644        0.2117439807373521
   7         1.827991812365275       0.03517634314374578
   8         2.598397149544622      0.001536356442402556
   9         3.496605880747678     9.347334083394711e-06

GEN_HERMITE_EK_COMPUTE_TEST:
  Normal end of execution.

GEN_HERMITE_INTEGRAL_TEST
  Python version: 3.6.9
  GEN_HERMITE_INTEGRAL evaluates
  Integral ( -oo < x < +oo ) exp(-x^2) x^n |x|^alpha dx

  Use ALPHA = 0.5

         N         Value

         0         1.225416702465178
         1                         0
         2        0.9190625268488832
         3                         0
         4         1.608359421985546
         5                         0
         6         4.422988410460251
         7                         0
         8         16.58620653922594
         9                         0
        10         78.78448106132322

GEN_HERMITE_INTEGRAL_TEST
  Normal end of execution.

GEN_LAGUERRE_EK_COMPUTE_TEST
  Python version: 3.6.9
  GEN_LAGUERRE_EK_COMPUTE computes
  a generalized Laguerre quadrature rule
  using the Elhay-Kautsky algorithm.

  Using ALPHA = 0.5

  Index       X             W

   0                       1.5        0.8862269254527581

   0        0.9188611699158102        0.7233630235462758
   1         4.081138830084189        0.1628639019064827

   0        0.6663259077023709        0.5671862778403113
   1         2.800775054150256         0.305371768844547
   2         7.032899038147373       0.01366887876790015

   0        0.5235260767382689        0.4530087465586076
   1         2.156648763269093        0.3816169601718002
   2         5.137387546176711       0.05079462757224079
   3         10.18243761381592      0.000806591150110032

   0        0.4313988071478517        0.3704505700074587
   1         1.759753698423697        0.4125843737694528
   2         4.104465362828316        0.0977798200531807
   3         7.746703779542557      0.005373415341171986
   4         13.45767835205758     3.874628149393569e-05

   0        0.3669498773083711        0.3094240968362605
   1         1.488534292310453         0.417752149707022
   2         3.434007968424071        0.1432858732209769
   3         6.349067925680377       0.01533249102263385
   4         10.54046985844834     0.0004306911960439421
   5         16.82097007782838     1.623469821074069e-06

   0        0.3193036339206303         0.263124514395892
   1         1.290758622959153         0.409141869414102
   2         2.958374458696649        0.1821177320927161
   3         5.409031597244431       0.03005332430127097
   4         8.804079578056783      0.001760894117540059
   5         13.46853574325147     2.852947122115979e-05
   6         20.24991636587088     6.166001541039125e-08

   0        0.2826336481165994         0.227139361952472
   1         1.139873801581615        0.3935945428036152
   2          2.60152484340603        0.2129089708672277
   3         4.724114537527792        0.0478774832031381
   4         7.605256299231612      0.004542517474762657
   5         11.41718207654583     0.0001624046001853259
   6         16.49941079765582     1.642377413806098e-06
   7          23.7300039959347     2.173943126630926e-09

   0        0.2535325549744195        0.1985712548680197
   1          1.02084427772039        0.3749207846631712
   2         2.323096077022467         0.236074821000825
   3         4.199350600657291       0.06709610500320433
   4         6.713974316615028      0.009008508896644349
   5         9.972009159539351     0.0005426607386359309
   6         14.15405367127805     1.270536687910845e-05
   7         19.61190281916595     8.484309239668572e-08
   8         27.25123652302705      7.22864716439652e-11

   0        0.2298729805186557        0.1754708150466604
   1        0.9244815469866583        0.3552233888020722
   2         2.099410462708799        0.2526835596756778
   3         3.782880873707291        0.0863561026953325
   4         6.019918027701461       0.01510977803486088
   5          8.88034759799671      0.001328215628363561
   6         12.47483240483621     5.418780021170328e-05
   7         16.99084729354255     8.737475869187144e-07
   8         22.79100289494894      4.01969988693978e-09
   9         30.80640591705273       2.2922215302047e-12

GEN_LAGUERRE_EK_COMPUTE_TEST:
  Normal end of execution.

GEN_LAGUERRE_INTEGRAL_TEST
  Python version: 3.6.9
  GEN_LAGUERRE_INTEGRAL evaluates
  Integral ( 0 < x < +oo ) exp(-x) x^n x^alpha dx

  Use ALPHA = 0.5

         N         Value

         0        0.8862269254527581
         1         1.329340388179137
         2         3.323350970447843
         3         11.63172839656745
         4         52.34277778455353
         5         287.8852778150444
         6         1871.254305797788
         7         14034.40729348341
         8          119292.461994609
         9         1133278.388948786
        10         11899423.08396225

GEN_LAGUERRE_INTEGRAL_TEST
  Normal end of execution.

HERMITE_EK_COMPUTE_TEST
  Python version: 3.6.9
  HERMITE_EK_COMPUTE computes a Hermite quadrature rule
  using the Elhay-Kautsky algorithm.

  Index       X             W

   0                         0         1.772453850905516

   0       -0.7071067811865475        0.8862269254527578
   1        0.7071067811865475        0.8862269254527578

   0        -1.224744871391589        0.2954089751509195
   1                         0         1.181635900603677
   2         1.224744871391589        0.2954089751509192

   0        -1.650680123885784        0.0813128354472452
   1       -0.5246476232752902        0.8049140900055129
   2        0.5246476232752905        0.8049140900055127
   3         1.650680123885784        0.0813128354472453

   0        -2.020182870456086       0.01995324205904592
   1       -0.9585724646138184        0.3936193231522413
   2                         0        0.9453087204829423
   3        0.9585724646138184        0.3936193231522407
   4         2.020182870456086       0.01995324205904592

   0        -2.350604973674492       0.00453000990550884
   1        -1.335849074013697        0.1570673203228568
   2       -0.4360774119276161        0.7246295952243927
   3        0.4360774119276162        0.7246295952243929
   4         1.335849074013697        0.1570673203228564
   5         2.350604973674492      0.004530009905508842

   0        -2.651961356835233     0.0009717812450995198
   1        -1.673551628767471       0.05451558281912718
   2       -0.8162878828589647         0.425607252610128
   3                         0         0.810264617556807
   4        0.8162878828589646        0.4256072526101278
   5         1.673551628767472       0.05451558281912701
   6         2.651961356835232     0.0009717812450995181

   0        -2.930637420257241      0.000199604072211368
   1        -1.981656756695844       0.01707798300741351
   2         -1.15719371244678        0.2078023258148917
   3       -0.3811869902073222        0.6611470125582416
   4        0.3811869902073224        0.6611470125582413
   5         1.157193712446781        0.2078023258148918
   6         1.981656756695843        0.0170779830074135
   7         2.930637420257244     0.0001996040722113682

   0        -3.190993201781527     3.960697726326435e-05
   1        -2.266580584531841      0.004943624275536949
   2        -1.468553289216668       0.08847452739437661
   3       -0.7235510187528373        0.4326515590025557
   4                         0        0.7202352156060514
   5        0.7235510187528374        0.4326515590025553
   6         1.468553289216667       0.08847452739437671
   7         2.266580584531842      0.004943624275536965
   8         3.190993201781528      3.96069772632642e-05

   0        -3.436159118837737     7.640432855232626e-06
   1        -2.532731674232791      0.001343645746781242
   2        -1.756683649299881       0.03387439445548108
   3        -1.036610829789514        0.2401386110823153
   4       -0.3429013272237044        0.6108626337353246
   5        0.3429013272237046         0.610862633735326
   6         1.036610829789513        0.2401386110823147
   7         1.756683649299881       0.03387439445548109
   8          2.53273167423279      0.001343645746781238
   9         3.436159118837737     7.640432855232587e-06

HERMITE_EK_COMPUTE_TEST:
  Normal end of execution.

HERMITE_INTEGRAL_TEST
  Python version: 3.6.9
  HERMITE_INTEGRAL evaluates
  Integral ( -oo < x < +oo ) exp(-x^2) x^m dx

         N         Value

         0         1.772453850905516
         1                         0
         2        0.8862269254527579
         3                         0
         4         1.329340388179137
         5                         0
         6         3.323350970447842
         7                         0
         8         11.63172839656745
         9                         0
        10         52.34277778455352

HERMITE_INTEGRAL_TEST
  Normal end of execution.

HERMITE_SET_TEST
  Python version: 3.6.9
  HERMITE_SET sets a Hermite quadrature rule over (-oo,+oo).

  Index       X             W


   0                         0         1.772453850905516

   0       -0.7071067811865476        0.8862269254527581
   1        0.7071067811865476        0.8862269254527581

   0        -1.224744871391589        0.2954089751509194
   1                         0         1.181635900603677
   2         1.224744871391589        0.2954089751509194

   0        -1.650680123885784       0.08131283544724517
   1       -0.5246476232752904        0.8049140900055128
   2        0.5246476232752904        0.8049140900055128
   3         1.650680123885784       0.08131283544724517

   0        -2.020182870456086       0.01995324205904591
   1       -0.9585724646138185        0.3936193231522412
   2                         0        0.9453087204829419
   3        0.9585724646138185        0.3936193231522412
   4         2.020182870456086       0.01995324205904591

   0        -2.350604973674492      0.004530009905508846
   1        -1.335849074013697        0.1570673203228566
   2       -0.4360774119276165        0.7246295952243925
   3        0.4360774119276165        0.7246295952243925
   4         1.335849074013697        0.1570673203228566
   5         2.350604973674492      0.004530009905508846

   0        -2.651961356835233     0.0009717812450995191
   1        -1.673551628767471       0.05451558281912703
   2       -0.8162878828589647        0.4256072526101278
   3                         0        0.8102646175568073
   4        0.8162878828589647        0.4256072526101278
   5         1.673551628767471       0.05451558281912703
   6         2.651961356835233     0.0009717812450995191

   0        -2.930637420257244     0.0001996040722113676
   1        -1.981656756695843       0.01707798300741347
   2         -1.15719371244678        0.2078023258148919
   3       -0.3811869902073221        0.6611470125582413
   4        0.3811869902073221        0.6611470125582413
   5          1.15719371244678        0.2078023258148919
   6         1.981656756695843       0.01707798300741347
   7         2.930637420257244     0.0001996040722113676

   0        -3.190993201781528     3.960697726326439e-05
   1        -2.266580584531843      0.004943624275536947
   2        -1.468553289216668       0.08847452739437657
   3       -0.7235510187528376        0.4326515590025558
   4                         0         0.720235215606051
   5        0.7235510187528376        0.4326515590025558
   6         1.468553289216668       0.08847452739437657
   7         2.266580584531843      0.004943624275536947
   8         3.190993201781528     3.960697726326439e-05

   0        -3.436159118837737     7.640432855232621e-06
   1         -2.53273167423279      0.001343645746781233
   2        -1.756683649299882       0.03387439445548106
   3        -1.036610829789514        0.2401386110823147
   4       -0.3429013272237046        0.6108626337353258
   5        0.3429013272237046        0.6108626337353258
   6         1.036610829789514        0.2401386110823147
   7         1.756683649299882       0.03387439445548106
   8          2.53273167423279      0.001343645746781233
   9         3.436159118837737     7.640432855232621e-06

HERMITE_SET_TEST:
  Normal end of execution.

HERMITE_GK16_SET_TEST
  Python version: 3.6.9
  HERMITE_GK16_SET sets up a nested rule
  for the Hermite integration problem.

  Index       X             W

   0                         0         1.772453850905516

   0        -1.224744871391589        0.2954089751509193
   1                         0         1.181635900603677
   2         1.224744871391589        0.2954089751509193

   0        -2.959210779063838      0.001233068065515345
   1        -1.224744871391589        0.2455792853503139
   2       -0.5240335474869576         0.232862517873861
   3                         0         0.813104108326135
   4        0.5240335474869576         0.232862517873861
   5         1.224744871391589        0.2455792853503139
   6         2.959210779063838      0.001233068065515345

   0        -2.959210779063838     0.0001670882630688235
   1        -2.023230191100516        0.0141731178739791
   2        -1.224744871391589        0.1681189289476777
   3       -0.5240335474869576        0.4786942854911412
   4                         0         0.450147009753782
   5        0.5240335474869576        0.4786942854911412
   6         1.224744871391589        0.1681189289476777
   7         2.023230191100516        0.0141731178739791
   8         2.959210779063838     0.0001670882630688235

   0        -4.499599398310388     3.746346994305176e-08
   1        -3.667774215946338    -1.454284338706939e-06
   2        -2.959210779063838     0.0001872381894927835
   3        -2.023230191100516       0.01246651913280592
   4        -1.835707975175187       0.00348407193468038
   5        -1.224744871391589        0.1571829837665224
   6       -0.8700408953529029       0.02515582570171293
   7       -0.5240335474869576        0.4511980360235854
   8                         0        0.4731073350496539
   9        0.5240335474869576        0.4511980360235854
  10        0.8700408953529029       0.02515582570171293
  11         1.224744871391589        0.1571829837665224
  12         1.835707975175187       0.00348407193468038
  13         2.023230191100516       0.01246651913280592
  14         2.959210779063838     0.0001872381894927835
  15         3.667774215946338    -1.454284338706939e-06
  16         4.499599398310388     3.746346994305176e-08

   0        -4.499599398310388     1.529571770532236e-09
   1        -3.667774215946338     1.080276720662476e-06
   2        -2.959210779063838     0.0001065658977285227
   3        -2.266513262056788      0.005113317439088385
   4        -2.023230191100516      -0.01123243848906923
   5        -1.835707975175187       0.03205524309944588
   6        -1.224744871391589        0.1136072989574827
   7       -0.8700408953529029        0.1083886195500302
   8       -0.5240335474869576        0.3692464336892085
   9                         0        0.5378816070051017
  10        0.5240335474869576        0.3692464336892085
  11        0.8700408953529029        0.1083886195500302
  12         1.224744871391589        0.1136072989574827
  13         1.835707975175187       0.03205524309944588
  14         2.023230191100516      -0.01123243848906923
  15         2.266513262056788      0.005113317439088385
  16         2.959210779063838     0.0001065658977285227
  17         3.667774215946338     1.080276720662476e-06
  18         4.499599398310388     1.529571770532236e-09

   0        -6.375939270982236     2.236564560704446e-15
   1        -5.643257857885745    -2.630469645854894e-13
   2        -5.036089944473094     9.067528823167982e-12
   3        -4.499599398310388     1.405525202472248e-09
   4        -3.667774215946338     1.088921969212812e-06
   5        -2.959210779063838     0.0001054166239474666
   6        -2.570558376584297     2.666515977893943e-05
   7        -2.266513262056788      0.004838520820550261
   8        -2.023230191100516     -0.009856627043461002
   9        -1.835707975175187       0.02940942758035079
  10        -1.579412134846767      0.003121021035268283
  11        -1.224744871391589        0.1093932507186088
  12       -0.8700408953529029        0.1159493098485312
  13       -0.5240335474869576        0.3539388902958054
  14       -0.1760641420820089       0.04985576189329316
  15                         0        0.4588883963675675
  16        0.1760641420820089       0.04985576189329316
  17        0.5240335474869576        0.3539388902958054
  18        0.8700408953529029        0.1159493098485312
  19         1.224744871391589        0.1093932507186088
  20         1.579412134846767      0.003121021035268283
  21         1.835707975175187       0.02940942758035079
  22         2.023230191100516     -0.009856627043461002
  23         2.266513262056788      0.004838520820550261
  24         2.570558376584297     2.666515977893943e-05
  25         2.959210779063838     0.0001054166239474666
  26         3.667774215946338     1.088921969212812e-06
  27         4.499599398310388     1.405525202472248e-09
  28         5.036089944473094     9.067528823167982e-12
  29         5.643257857885745    -2.630469645854894e-13
  30         6.375939270982236     2.236564560704446e-15

   0        -6.375939270982236     -1.76029328053725e-15
   1        -5.643257857885745     4.721927866641769e-13
   2        -5.036089944473094    -3.428157053034956e-11
   3        -4.499599398310388      2.75478251389359e-09
   4        -4.029220140504371    -2.390334338280351e-08
   5        -3.667774215946338     1.224522096715844e-06
   6        -2.959210779063838     9.871000919740917e-05
   7        -2.570558376584297     0.0001475320490186277
   8        -2.266513262056788      0.003758002660430479
   9        -2.023230191100516     -0.004911857612387755
  10        -1.835707975175187        0.0204350583591072
  11        -1.579412134846767       0.01303287269902796
  12        -1.224744871391589       0.09691344494458362
  13       -0.8700408953529029        0.1372652119156755
  14       -0.5240335474869576        0.3120865619469745
  15       -0.1760641420820089        0.1841169604772579
  16                         0        0.2465664493282962
  17        0.1760641420820089        0.1841169604772579
  18        0.5240335474869576        0.3120865619469745
  19        0.8700408953529029        0.1372652119156755
  20         1.224744871391589       0.09691344494458362
  21         1.579412134846767       0.01303287269902796
  22         1.835707975175187        0.0204350583591072
  23         2.023230191100516     -0.004911857612387755
  24         2.266513262056788      0.003758002660430479
  25         2.570558376584297     0.0001475320490186277
  26         2.959210779063838     9.871000919740917e-05
  27         3.667774215946338     1.224522096715844e-06
  28         4.029220140504371    -2.390334338280351e-08
  29         4.499599398310388      2.75478251389359e-09
  30         5.036089944473094    -3.428157053034956e-11
  31         5.643257857885745     4.721927866641769e-13
  32         6.375939270982236     -1.76029328053725e-15

   0        -6.375939270982236      1.86840148945106e-18
   1        -5.643257857885745     9.659946627856324e-15
   2        -5.036089944473094     5.489683694849946e-12
   3        -4.499599398310388      8.15537218169169e-10
   4        -4.029220140504371     3.792022239231953e-08
   5        -3.667774215946338     4.373781804092699e-07
   6        -3.349163953713195     4.846279973702046e-06
   7        -2.959210779063838     6.332862080561789e-05
   8        -2.570558376584297     0.0004878539930444377
   9        -2.266513262056788       0.00145155804251559
  10        -2.023230191100516      0.004096752772034405
  11        -1.835707975175187      0.005592882891146918
  12        -1.579412134846767        0.0277805089085351
  13        -1.224744871391589       0.08024551814739089
  14       -0.8700408953529029         0.163712215557358
  15       -0.5240335474869576        0.2624487148878428
  16       -0.1760641420820089        0.3398859558558522
  17                         0     0.0009126267536373792
  18        0.1760641420820089        0.3398859558558522
  19        0.5240335474869576        0.2624487148878428
  20        0.8700408953529029         0.163712215557358
  21         1.224744871391589       0.08024551814739089
  22         1.579412134846767        0.0277805089085351
  23         1.835707975175187      0.005592882891146918
  24         2.023230191100516      0.004096752772034405
  25         2.266513262056788       0.00145155804251559
  26         2.570558376584297     0.0004878539930444377
  27         2.959210779063838     6.332862080561789e-05
  28         3.349163953713195     4.846279973702046e-06
  29         3.667774215946338     4.373781804092699e-07
  30         4.029220140504371     3.792022239231953e-08
  31         4.499599398310388      8.15537218169169e-10
  32         5.036089944473094     5.489683694849946e-12
  33         5.643257857885745     9.659946627856324e-15
  34         6.375939270982236      1.86840148945106e-18

HERMITE_GK16_SET_TEST:
  Normal end of execution.

HERMITE_GK18_SET_TEST
  Python version: 3.6.9
  HERMITE_GK18_SET sets up a nested rule
  for the Hermite integration problem.

  Index       X             W

   0                         0         1.772453850905516

   0        -1.224744871391589        0.2954089751509193
   1                         0         1.181635900603677
   2         1.224744871391589        0.2954089751509193

   0        -2.959210779063838     0.0001670882630688235
   1        -2.023230191100516        0.0141731178739791
   2        -1.224744871391589        0.1681189289476777
   3       -0.5240335474869576        0.4786942854911412
   4                         0         0.450147009753782
   5        0.5240335474869576        0.4786942854911412
   6         1.224744871391589        0.1681189289476777
   7         2.023230191100516        0.0141731178739791
   8         2.959210779063838     0.0001670882630688235

   0        -4.499599398310388     1.529571770532236e-09
   1        -3.667774215946338     1.080276720662476e-06
   2        -2.959210779063838     0.0001065658977285227
   3        -2.266513262056788      0.005113317439088385
   4        -2.023230191100516      -0.01123243848906923
   5        -1.835707975175187       0.03205524309944588
   6        -1.224744871391589        0.1136072989574827
   7       -0.8700408953529029        0.1083886195500302
   8       -0.5240335474869576        0.3692464336892085
   9                         0        0.5378816070051017
  10        0.5240335474869576        0.3692464336892085
  11        0.8700408953529029        0.1083886195500302
  12         1.224744871391589        0.1136072989574827
  13         1.835707975175187       0.03205524309944588
  14         2.023230191100516      -0.01123243848906923
  15         2.266513262056788      0.005113317439088385
  16         2.959210779063838     0.0001065658977285227
  17         3.667774215946338     1.080276720662476e-06
  18         4.499599398310388     1.529571770532236e-09

   0        -6.853200069757519      1.90303509401305e-21
   1        -6.124527854622158      1.87781893143729e-17
   2         -5.52186520986835     1.822427515491294e-14
   3        -4.986551454150765     4.566176367618686e-12
   4        -4.499599398310388      4.22525843963111e-10
   5        -4.057956316089741     1.659544880938982e-08
   6        -3.667774215946338     2.959075202307441e-07
   7         -3.31558461759329     3.309758709792034e-06
   8        -2.959210779063838     3.226518598373974e-05
   9        -2.597288631188366     0.0002349403664659752
  10        -2.266513262056788     0.0009858275829964839
  11        -2.023230191100516      0.001768022258182954
  12        -1.835707975175187      0.004333498812272349
  13        -1.561553427651873       0.01551310987485935
  14        -1.224744871391589       0.04421164421898455
  15        -0.870040895352903       0.09372082806552459
  16        -0.524033547486958        0.1430993028968334
  17        -0.214618180588171        0.1476557104026862
  18                         0       0.09688245529284255
  19         0.214618180588171        0.1476557104026862
  20         0.524033547486958        0.1430993028968334
  21         0.870040895352903       0.09372082806552459
  22         1.224744871391589       0.04421164421898455
  23         1.561553427651873       0.01551310987485935
  24         1.835707975175187      0.004333498812272349
  25         2.023230191100516      0.001768022258182954
  26         2.266513262056788     0.0009858275829964839
  27         2.597288631188366     0.0002349403664659752
  28         2.959210779063838     3.226518598373974e-05
  29          3.31558461759329     3.309758709792034e-06
  30         3.667774215946338     2.959075202307441e-07
  31         4.057956316089741     1.659544880938982e-08
  32         4.499599398310388      4.22525843963111e-10
  33         4.986551454150765     4.566176367618686e-12
  34          5.52186520986835     1.822427515491294e-14
  35         6.124527854622158      1.87781893143729e-17
  36         6.853200069757519      1.90303509401305e-21

HERMITE_GK18_SET_TEST:
  Normal end of execution.

HERMITE_GK22_SET_TEST
  Python version: 3.6.9
  HERMITE_GK22_SET sets up a nested rule
  for the Hermite integration problem.

  Index       X             W

   0                         0         1.772453850905516

   0        -1.224744871391589        0.2954089751509193
   1                         0         1.181635900603677
   2         1.224744871391589        0.2954089751509193

   0        -2.959210779063838     0.0001670882630688235
   1        -2.023230191100516        0.0141731178739791
   2        -1.224744871391589        0.1681189289476777
   3       -0.5240335474869576        0.4786942854911412
   4                         0         0.450147009753782
   5        0.5240335474869576        0.4786942854911412
   6         1.224744871391589        0.1681189289476777
   7         2.023230191100516        0.0141731178739791
   8         2.959210779063838     0.0001670882630688235

   0        -4.499599398310388     1.529571770532236e-09
   1        -3.667774215946338     1.080276720662476e-06
   2        -2.959210779063838     0.0001065658977285227
   3        -2.266513262056788      0.005113317439088385
   4        -2.023230191100516      -0.01123243848906923
   5        -1.835707975175187       0.03205524309944588
   6        -1.224744871391589        0.1136072989574827
   7       -0.8700408953529029        0.1083886195500302
   8       -0.5240335474869576        0.3692464336892085
   9                         0        0.5378816070051017
  10        0.5240335474869576        0.3692464336892085
  11        0.8700408953529029        0.1083886195500302
  12         1.224744871391589        0.1136072989574827
  13         1.835707975175187       0.03205524309944588
  14         2.023230191100516      -0.01123243848906923
  15         2.266513262056788      0.005113317439088385
  16         2.959210779063838     0.0001065658977285227
  17         3.667774215946338     1.080276720662476e-06
  18         4.499599398310388     1.529571770532236e-09

   0        -7.251792998192644     6.641958938127579e-24
   1         -6.54708325839754     8.604271725122073e-20
   2          -5.9614610434045     1.140700785308509e-16
   3        -5.437443360177798      4.08820161202506e-14
   4         -4.95357434291298     5.818033931703204e-12
   5        -4.499599398310388     4.007841416048347e-10
   6        -4.070919267883068     1.491582104178314e-08
   7        -3.667774215946338     3.153722658522649e-07
   8        -3.296114596212218     3.811827917491775e-06
   9        -2.959210779063838     2.889767802744787e-05
  10        -2.630415236459871     0.0001890109098050979
  11        -2.266513262056788      0.001406974240652468
  12        -2.043834754429505      -0.01445284222069882
  13        -2.023230191100516       0.01788525430336997
  14        -1.835707975175187     0.0007054711101229627
  15        -1.585873011819188       0.01654455267058608
  16        -1.224744871391589       0.04510901033585913
  17       -0.8700408953529029       0.09283382285101119
  18       -0.5240335474869576        0.1459662938959264
  19        -0.195324784415805        0.1656397404005296
  20                         0       0.05627934260432189
  21         0.195324784415805        0.1656397404005296
  22        0.5240335474869576        0.1459662938959264
  23        0.8700408953529029       0.09283382285101119
  24         1.224744871391589       0.04510901033585913
  25         1.585873011819188       0.01654455267058608
  26         1.835707975175187     0.0007054711101229627
  27         2.023230191100516       0.01788525430336997
  28         2.043834754429505      -0.01445284222069882
  29         2.266513262056788      0.001406974240652468
  30         2.630415236459871     0.0001890109098050979
  31         2.959210779063838     2.889767802744787e-05
  32         3.296114596212218     3.811827917491775e-06
  33         3.667774215946338     3.153722658522649e-07
  34         4.070919267883068     1.491582104178314e-08
  35         4.499599398310388     4.007841416048347e-10
  36          4.95357434291298     5.818033931703204e-12
  37         5.437443360177798      4.08820161202506e-14
  38           5.9614610434045     1.140700785308509e-16
  39          6.54708325839754     8.604271725122073e-20
  40         7.251792998192644     6.641958938127579e-24

HERMITE_GK22_SET_TEST:
  Normal end of execution.

HERMITE_GK24_SET_TEST
  Python version: 3.6.9
  HERMITE_GK24_SET sets up a nested rule
  for the Hermite integration problem.

  Index       X             W

   0                         0         1.772453850905516

   0        -1.224744871391589        0.2954089751509193
   1                         0         1.181635900603677
   2         1.224744871391589        0.2954089751509193

   0        -2.959210779063838     0.0001670882630688235
   1        -2.023230191100516        0.0141731178739791
   2        -1.224744871391589        0.1681189289476777
   3       -0.5240335474869576        0.4786942854911412
   4                         0         0.450147009753782
   5        0.5240335474869576        0.4786942854911412
   6         1.224744871391589        0.1681189289476777
   7         2.023230191100516        0.0141731178739791
   8         2.959210779063838     0.0001670882630688235

   0        -4.499599398310388     1.529571770532236e-09
   1        -3.667774215946338     1.080276720662476e-06
   2        -2.959210779063838     0.0001065658977285227
   3        -2.266513262056788      0.005113317439088385
   4        -2.023230191100516      -0.01123243848906923
   5        -1.835707975175187       0.03205524309944588
   6        -1.224744871391589        0.1136072989574827
   7       -0.8700408953529029        0.1083886195500302
   8       -0.5240335474869576        0.3692464336892085
   9                         0        0.5378816070051017
  10        0.5240335474869576        0.3692464336892085
  11        0.8700408953529029        0.1083886195500302
  12         1.224744871391589        0.1136072989574827
  13         1.835707975175187       0.03205524309944588
  14         2.023230191100516      -0.01123243848906923
  15         2.266513262056788      0.005113317439088385
  16         2.959210779063838     0.0001065658977285227
  17         3.667774215946338     1.080276720662476e-06
  18         4.499599398310388     1.529571770532236e-09

   0        -10.16757499488187     5.461919474783181e-38
   1        -7.231746029072501     8.754490987132388e-24
   2        -6.535398426382995     9.926199715601491e-20
   3        -5.954781975039809     1.226196149478644e-16
   4        -5.434053000365068      4.21921851448196e-14
   5        -4.952329763008589     5.869158852517349e-12
   6        -4.499599398310388     4.000305754257769e-10
   7        -4.071335874253583     1.486536435717965e-08
   8        -3.667774215946338     3.160183632212892e-07
   9        -3.295265921534226     3.838807619473985e-06
  10        -2.959210779063838     2.868023180647778e-05
  11        -2.633356763661946     0.0001847894656883574
  12        -2.266513262056788      0.001509093332116388
  13        -2.089340389294661     -0.003879955862387716
  14        -2.023230191100516       0.00673547589010133
  15        -1.835707975175187      0.001399662522915681
  16        -1.583643465293944       0.01636168734938324
  17        -1.224744871391589        0.0450612329041865
  18       -0.8700408953529029       0.09287115844425754
  19       -0.5240335474869576        0.1458632926321473
  20        -0.196029453662011        0.1648809136874367
  21                         0       0.05795959861011811
  22         0.196029453662011        0.1648809136874367
  23        0.5240335474869576        0.1458632926321473
  24        0.8700408953529029       0.09287115844425754
  25         1.224744871391589        0.0450612329041865
  26         1.583643465293944       0.01636168734938324
  27         1.835707975175187      0.001399662522915681
  28         2.023230191100516       0.00673547589010133
  29         2.089340389294661     -0.003879955862387716
  30         2.266513262056788      0.001509093332116388
  31         2.633356763661946     0.0001847894656883574
  32         2.959210779063838     2.868023180647778e-05
  33         3.295265921534226     3.838807619473985e-06
  34         3.667774215946338     3.160183632212892e-07
  35         4.071335874253583     1.486536435717965e-08
  36         4.499599398310388     4.000305754257769e-10
  37         4.952329763008589     5.869158852517349e-12
  38         5.434053000365068      4.21921851448196e-14
  39         5.954781975039809     1.226196149478644e-16
  40         6.535398426382995     9.926199715601491e-20
  41         7.231746029072501     8.754490987132388e-24
  42         10.16757499488187     5.461919474783181e-38

HERMITE_GK24_SET_TEST:
  Normal end of execution.

HERMITE_1_SET_TEST
  Python version: 3.6.9
  HERMITE_1_SET sets a unit density Hermite quadrature rule.
  The interval is (-oo,+oo).
  The density is 1.0.

  Index       X             W


   0                         0         1.772453850905516

   0       -0.7071067811865476         1.461141182661139
   1        0.7071067811865476         1.461141182661139

   0        -1.224744871391589         1.323931175213644
   1                         0         1.181635900603677
   2         1.224744871391589         1.323931175213644

   0        -1.650680123885784         1.240225817695815
   1       -0.5246476232752904         1.059964482894969
   2        0.5246476232752904         1.059964482894969
   3         1.650680123885784         1.240225817695815

   0        -2.020182870456086         1.181488625535987
   1       -0.9585724646138185        0.9865809967514283
   2                         0        0.9453087204829419
   3        0.9585724646138185        0.9865809967514283
   4         2.020182870456086         1.181488625535987

   0        -2.350604973674492         1.136908332674525
   1        -1.335849074013697        0.9355805576311808
   2       -0.4360774119276165        0.8764013344362306
   3        0.4360774119276165        0.8764013344362306
   4         1.335849074013697        0.9355805576311808
   5         2.350604973674492         1.136908332674525

   0        -2.651961356835233         1.101330729610322
   1        -1.673551628767471        0.8971846002251841
   2       -0.8162878828589647        0.8286873032836393
   3                         0        0.8102646175568073
   4        0.8162878828589647        0.8286873032836393
   5         1.673551628767471        0.8971846002251841
   6         2.651961356835233         1.101330729610322

   0        -2.930637420257244          1.07193014424798
   1        -1.981656756695843        0.8667526065633814
   2         -1.15719371244678        0.7928900483864013
   3       -0.3811869902073221        0.7645441286517292
   4        0.3811869902073221        0.7645441286517292
   5          1.15719371244678        0.7928900483864013
   6         1.981656756695843        0.8667526065633814
   7         2.930637420257244          1.07193014424798

   0        -3.190993201781528         1.047003580976684
   1        -2.266580584531843        0.8417527014786704
   2        -1.468553289216668        0.7646081250945502
   3       -0.7235510187528376        0.7303024527450922
   4                         0         0.720235215606051
   5        0.7235510187528376        0.7303024527450922
   6         1.468553289216668        0.7646081250945502
   7         2.266580584531843        0.8417527014786704
   8         3.190993201781528         1.047003580976684

   0        -3.436159118837737         1.025451691365735
   1         -2.53273167423279        0.8206661264048164
   2        -1.756683649299882        0.7414419319435651
   3        -1.036610829789514        0.7032963231049061
   4       -0.3429013272237046        0.6870818539512734
   5        0.3429013272237046        0.6870818539512734
   6         1.036610829789514        0.7032963231049061
   7         1.756683649299882        0.7414419319435651
   8          2.53273167423279        0.8206661264048164
   9         3.436159118837737         1.025451691365735

HERMITE_1_SET_TEST:
  Normal end of execution.

HERMITE_PROBABILIST_SET_TEST
  Python version: 3.6.9
  HERMITE_PROBABILIST_SET sets a Hermite quadrature rule.
  The integration interval is ( -oo, +oo ).
  The weight is exp ( - x * x / 2 ) / sqrt ( 2 * pi ).

  Index       X             W


   0                         0                         1

   0                        -1                       0.5
   1                         1                       0.5

   0        -1.732050807568877        0.1666666666666667
   1                         0        0.6666666666666666
   2         1.732050807568877        0.1666666666666667

   0        -2.334414218338977       0.04587585476806849
   1       -0.7419637843027258        0.4541241452319315
   2        0.7419637843027258        0.4541241452319315
   3         2.334414218338977       0.04587585476806849

   0        -2.856970013872806       0.01125741132772069
   1        -1.355626179974266        0.2220759220056127
   2                         0        0.5333333333333333
   3         1.355626179974266        0.2220759220056127
   4         2.856970013872806       0.01125741132772069

   0        -3.324257433552119      0.002555784402056247
   1        -1.889175877753711       0.08861574604191452
   2       -0.6167065901925941        0.4088284695560293
   3        0.6167065901925941        0.4088284695560293
   4         1.889175877753711       0.08861574604191452
   5         3.324257433552119      0.002555784402056247

   0        -3.750439717725742     0.0005482688559722178
   1        -2.366759410734541        0.0307571239675865
   2        -1.154405394739968        0.2401231786050127
   3                         0        0.4571428571428571
   4         1.154405394739968        0.2401231786050127
   5         2.366759410734541        0.0307571239675865
   6         3.750439717725742     0.0005482688559722178

   0        -4.144547186125894     0.0001126145383753678
   1        -2.802485861287542      0.009635220120788266
   2        -1.636519042435108         0.117239907661759
   3       -0.5390798113513751        0.3730122576790774
   4        0.5390798113513751        0.3730122576790774
   5         1.636519042435108         0.117239907661759
   6         2.802485861287542      0.009635220120788266
   7         4.144547186125894     0.0001126145383753678

   0        -4.512745863399783     2.234584400774658e-05
   1         -3.20542900285647      0.002789141321231769
   2         -2.07684797867783       0.04991640676521787
   3        -1.023255663789133        0.2440975028949394
   4                         0        0.4063492063492063
   5         1.023255663789133        0.2440975028949394
   6          2.07684797867783       0.04991640676521787
   7          3.20542900285647      0.002789141321231769
   8         4.512745863399783     2.234584400774658e-05

   0        -4.859462828332312     4.310652630718287e-06
   1        -3.581823483551927     0.0007580709343122177
   2        -2.484325841638955       0.01911158050077029
   3        -1.465989094391158        0.1354837029802677
   4       -0.4849357075154976        0.3446423349320191
   5        0.4849357075154976        0.3446423349320191
   6         1.465989094391158        0.1354837029802677
   7         2.484325841638955       0.01911158050077029
   8         3.581823483551927     0.0007580709343122177
   9         4.859462828332312     4.310652630718287e-06

HERMITE_PROBABILIST_SET_TEST:
  Normal end of execution.

IMTQLX_TEST
  Python version: 3.6.9
  IMTQLX takes a symmetric tridiagonal matrix A
  and computes its eigenvalues LAM.
  It also accepts a vector Z and computes Q'*Z,
  where Q is the matrix that diagonalizes A.

  Computed eigenvalues:

     0:      0.267949
     1:             1
     2:             2
     3:             3
     4:       3.73205

  Exact eigenvalues:

     0:      0.267949
     1:             1
     2:             2
     3:             3
     4:       3.73205

  Vector Z:

     0:             1
     1:             1
     2:             1
     3:             1
     4:             1

  Vector Q*Z:

     0:       -2.1547
     1:   -1.8855e-16
     2:       0.57735
     3:   1.66533e-16
     4:     -0.154701

IMTQLX_TEST:
  Normal end of execution.

JACOBI_EK_COMPUTE_TEST
  Python version: 3.6.9
  JACOBI_EK_COMPUTE computes
  a generalized Jacobi quadrature rule
  using the Elhay-Kautsky algorithm.

  Using ALPHA = 1.5

  Index       X             W

   0                     -0.25         1.570796326794896

   0       -0.6076252185107651         0.933824464862914
   1        0.2742918851774317        0.6369718619319824

   0        -0.760157340487268        0.5261284436611056
   1       -0.1528288638647804        0.8030739600082096
   2        0.5379862043520485        0.2415939231255808

   0       -0.8385964119177012        0.3144794551130207
   1       -0.4056256275378191         0.678743654928424
   2        0.1614690409023142        0.4757517664489192
   3         0.682752998553206        0.1018214503045317

   0       -0.8840882653201492        0.2001252566372697
   1       -0.5629059317762043        0.5199632186774659
   2       -0.1100274225210447        0.5356898968305487
   3        0.3708136309492863        0.2672477173275187
   4        0.7695413220014449       0.04777023732209325

   0       -0.9127717928725458        0.1343056820427146
   1       -0.6661693810819842        0.3902780567984853
   2       -0.3028312803228947         0.499078675899895
   3        0.1144215303885477        0.3697846812371453
   4        0.5134534103439395        0.1528283716957896
   5        0.8253260849735088       0.02452085912086582

   0       -0.9320024628657495       0.09414510038510714
   1       -0.7371931739434825        0.2943041944091259
   2       -0.4418817729485141        0.4309263997770963
   3       -0.0859506602240641        0.4009490239804647
   4        0.2825323324996323        0.2463697069136382
   5        0.6138099722388769       0.09055772921029319
   6        0.8631857652433008       0.01354417211917143

   0       -0.9455158043974037       0.06839190925948291
   1       -0.7879673764819102        0.2248513392666883
   2       -0.5444273641737976        0.3606436566319117
   3       -0.2412867334092742        0.3883180543539711
   4       0.08860534544266944        0.3008492695347081
   5        0.4095019972429188          0.16405734578548
   6        0.6866356906720186        0.0557415005793357
   7        0.8900098006603341      0.007943251383318863

   0       -0.9553706327691448       0.05117382374316969
   1       -0.8254480244332432        0.1744634097524552
   2       -0.6217762959622662        0.2984741580861981
   3       -0.3624524217425484        0.3552731274654827
   4      -0.07051816095979085        0.3200587357332041
   5        0.2280875011498078         0.220229706982839
   6        0.5068337773772098        0.1106616329196992
   7        0.7409581449066003       0.03556668124983503
   8        0.9096861124333756      0.004895050862014656

   0        -0.962776688670377       0.03925058540055813
   1       -0.8538674269792412        0.1374810592741681
   2       -0.6813494824055374        0.2466379844126227
   3       -0.4580176529455094        0.3155655291519008
   4       -0.2004353100508689        0.3157558361063397
   5       0.07229409169326702        0.2531373506672515
   6        0.3399439927530339        0.1603930057544804
   7        0.5826653601184614       0.07598607784811179
   8        0.7824610233136923       0.02344462385831613
   9        0.9245366386276249      0.003144274321147394

JACOBI_EK_COMPUTE_TEST:
  Normal end of execution.

JACOBI_INTEGRAL_TEST
  Python version: 3.6.9
  JACOBI_INTEGRAL evaluates
  Integral ( -1 < x < +1 ) x^n (1-x)^alpha (1+x)^beta dx

  Use ALPHA = 1.5
      BETA =  0.5

         N         Value

         0         1.570796326794896
         1       -0.3926990816987241
         2         0.392699081698724
         3       -0.1963495408493619
         4        0.1963495408493619
         5       -0.1227184630308513
         6        0.1227184630308513
         7      -0.08590292412159588
         8       0.08590292412159588
         9      -0.06442719309119695
        10       0.06442719309119677

JACOBI_INTEGRAL_TEST
  Normal end of execution.

KRONROD_SET_TEST
  Python version: 3.6.9
  KRONROD_SET sets up a Kronrod quadrature rule,
  This is used following a lower order Legendre rule.

  Legendre/Kronrod quadrature pair #0
                W                         X

         0       -0.9491079123427585        0.1294849661688697
         1       -0.7415311855993945        0.2797053914892766
         2       -0.4058451513773972        0.3818300505051189
         3                         0        0.4179591836734694
         4        0.4058451513773972        0.3818300505051189
         5        0.7415311855993945        0.2797053914892766
         6        0.9491079123427585        0.1294849661688697

         0       -0.9914553711208126       0.02293532201052922
         1       -0.9491079123427585       0.06309209262997854
         2       -0.8648644233597691        0.1047900103222502
         3       -0.7415311855993943        0.1406532597155259
         4       -0.5860872354676911        0.1690047266392679
         5       -0.4058451513773972        0.1903505780647854
         6        -0.207784955078985        0.2044329400752989
         7                         0        0.2094821410847278
         8         0.207784955078985        0.2044329400752989
         9        0.4058451513773972        0.1903505780647854
        10        0.5860872354676911        0.1690047266392679
        11        0.7415311855993943        0.1406532597155259
        12        0.8648644233597691        0.1047900103222502
        13        0.9491079123427585       0.06309209262997854
        14        0.9914553711208126       0.02293532201052922

  Legendre/Kronrod quadrature pair #1
                W                         X

         0       -0.9739065285171717       0.06667134430868814
         1       -0.8650633666889845        0.1494513491505806
         2       -0.6794095682990244         0.219086362515982
         3       -0.4333953941292472        0.2692667193099963
         4       -0.1488743389816312        0.2955242247147529
         5        0.1488743389816312        0.2955242247147529
         6        0.4333953941292472        0.2692667193099963
         7        0.6794095682990244         0.219086362515982
         8        0.8650633666889845        0.1494513491505806
         9        0.9739065285171717       0.06667134430868814

         0       -0.9956571630258081       0.01169463886737187
         1       -0.9739065285171717       0.03255816230796473
         2       -0.9301574913557082         0.054755896574352
         3       -0.8650633666889845       0.07503967481091996
         4       -0.7808177265864169       0.09312545458369761
         5       -0.6794095682990244        0.1093871588022976
         6       -0.5627571346686047        0.1234919762620659
         7       -0.4333953941292472        0.1347092173114733
         8       -0.2943928627014602        0.1427759385770601
         9       -0.1488743389816312        0.1477391049013385
        10                         0        0.1494455540029169
        11        0.1488743389816312        0.1477391049013385
        12        0.2943928627014602        0.1427759385770601
        13        0.4333953941292472        0.1347092173114733
        14        0.5627571346686047        0.1234919762620659
        15        0.6794095682990244        0.1093871588022976
        16        0.7808177265864169       0.09312545458369761
        17        0.8650633666889845       0.07503967481091996
        18        0.9301574913557082         0.054755896574352
        19        0.9739065285171717       0.03255816230796473
        20        0.9956571630258081       0.01169463886737187

  Legendre/Kronrod quadrature pair #2
                W                         X

         0       -0.9879925180204854       0.03075324199611727
         1        -0.937273392400706       0.07036604748810812
         2       -0.8482065834104272        0.1071592204671719
         3       -0.7244177313601701        0.1395706779261543
         4       -0.5709721726085388        0.1662692058169939
         5       -0.3941513470775634        0.1861610000155622
         6       -0.2011940939974345        0.1984314853271116
         7                         0        0.2025782419255613
         8        0.2011940939974345        0.1984314853271116
         9        0.3941513470775634        0.1861610000155622
        10        0.5709721726085388        0.1662692058169939
        11        0.7244177313601701        0.1395706779261543
        12        0.8482065834104272        0.1071592204671719
        13         0.937273392400706       0.07036604748810812
        14        0.9879925180204854       0.03075324199611727

         0       -0.9980022986933971      0.005377479872923349
         1       -0.9879925180204854       0.01500794732931612
         2       -0.9677390756791391       0.02546084732671532
         3        -0.937273392400706       0.03534636079137585
         4       -0.8972645323440819       0.04458975132476488
         5       -0.8482065834104272       0.05348152469092809
         6       -0.7904185014424659       0.06200956780067064
         7         -0.72441773136017       0.06985412131872826
         8        -0.650996741297417       0.07684968075772038
         9       -0.5709721726085388       0.08308050282313302
        10       -0.4850818636402397       0.08856444305621176
        11       -0.3941513470775634       0.09312659817082532
        12       -0.2991800071531688       0.09664272698362368
        13       -0.2011940939974345       0.09917359872179196
        14       -0.1011420669187175        0.1007698455238756
        15                         0        0.1013300070147915
        16        0.1011420669187175        0.1007698455238756
        17        0.2011940939974345       0.09917359872179196
        18        0.2991800071531688       0.09664272698362368
        19        0.3941513470775634       0.09312659817082532
        20        0.4850818636402397       0.08856444305621176
        21        0.5709721726085388       0.08308050282313302
        22         0.650996741297417       0.07684968075772038
        23          0.72441773136017       0.06985412131872826
        24        0.7904185014424659       0.06200956780067064
        25        0.8482065834104272       0.05348152469092809
        26        0.8972645323440819       0.04458975132476488
        27         0.937273392400706       0.03534636079137585
        28        0.9677390756791391       0.02546084732671532
        29        0.9879925180204854       0.01500794732931612
        30        0.9980022986933971      0.005377479872923349

  Legendre/Kronrod quadrature pair #3
                W                         X

         0       -0.9931285991850949       0.01761400713915212
         1       -0.9639719272779138       0.04060142980038694
         2       -0.9122344282513259       0.06267204833410907
         3       -0.8391169718222188       0.08327674157670475
         4       -0.7463319064601508        0.1019301198172404
         5        -0.636053680726515        0.1181945319615184
         6       -0.5108670019508271        0.1316886384491766
         7       -0.3737060887154195         0.142096109318382
         8       -0.2277858511416451        0.1491729864726037
         9      -0.07652652113349734        0.1527533871307258
        10       0.07652652113349734        0.1527533871307258
        11        0.2277858511416451        0.1491729864726037
        12        0.3737060887154195         0.142096109318382
        13        0.5108670019508271        0.1316886384491766
        14         0.636053680726515        0.1181945319615184
        15        0.7463319064601508        0.1019301198172404
        16        0.8391169718222188       0.08327674157670475
        17        0.9122344282513259       0.06267204833410907
        18        0.9639719272779138       0.04060142980038694
        19        0.9931285991850949       0.01761400713915212

         0       -0.9988590315882777      0.003073583718520532
         1       -0.9931285991850949      0.008600269855642943
         2       -0.9815078774502503       0.01462616925697125
         3       -0.9639719272779138       0.02038837346126652
         4       -0.9408226338317548       0.02588213360495116
         5       -0.9122344282513259        0.0312873067770328
         6        -0.878276811252282        0.0366001697582008
         7       -0.8391169718222188       0.04166887332797369
         8       -0.7950414288375512       0.04643482186749767
         9       -0.7463319064601508       0.05094457392372869
        10       -0.6932376563347514       0.05519510534828599
        11        -0.636053680726515       0.05911140088063957
        12       -0.5751404468197103       0.06265323755478117
        13       -0.5108670019508271       0.06583459713361842
        14       -0.4435931752387251       0.06864867292852161
        15       -0.3737060887154196       0.07105442355344407
        16        -0.301627868114913       0.07303069033278667
        17       -0.2277858511416451        0.0745828754004992
        18       -0.1526054652409227       0.07570449768455667
        19      -0.07652652113349732       0.07637786767208074
        20                         0       0.07660071191799966
        21       0.07652652113349732       0.07637786767208074
        22        0.1526054652409227       0.07570449768455667
        23        0.2277858511416451        0.0745828754004992
        24         0.301627868114913       0.07303069033278667
        25        0.3737060887154196       0.07105442355344407
        26        0.4435931752387251       0.06864867292852161
        27        0.5108670019508271       0.06583459713361842
        28        0.5751404468197103       0.06265323755478117
        29         0.636053680726515       0.05911140088063957
        30        0.6932376563347514       0.05519510534828599
        31        0.7463319064601508       0.05094457392372869
        32        0.7950414288375512       0.04643482186749767
        33        0.8391169718222188       0.04166887332797369
        34         0.878276811252282        0.0366001697582008
        35        0.9122344282513259        0.0312873067770328
        36        0.9408226338317548       0.02588213360495116
        37        0.9639719272779138       0.02038837346126652
        38        0.9815078774502503       0.01462616925697125
        39        0.9931285991850949      0.008600269855642943
        40        0.9988590315882777      0.003073583718520532

KRONROD_SET_TEST:
  Normal end of execution.

LAGUERRE_EK_COMPUTE_TEST
  Python version: 3.6.9
  LAGUERRE_EK_COMPUTE computes
  a Laguerre quadrature rule
  using the Elhay-Kautsky algorithm.

  Index       X             W

   0                         1                         1

   0        0.5857864376269051         0.853553390593274
   1         3.414213562373094        0.1464466094067262

   0        0.4157745567834791        0.7110930099291731
   1         2.294280360279042        0.2785177335692407
   2         6.289945082937479       0.01038925650158614

   0        0.3225476896193926        0.6031541043416337
   1         1.745761101158347        0.3574186924377996
   2         4.536620296921128        0.0388879085150054
   3         9.395070912301131      0.000539294705561328

   0         0.263560319718141        0.5217556105828089
   1         1.413403059106517        0.3986668110831761
   2         3.596425771040722       0.07594244968170767
   3         7.085810005858837      0.003611758679922046
   4         12.64080084427578     2.336997238577622e-05

   0        0.2228466041792608        0.4589646739499636
   1         1.188932101672624        0.4170008307721204
   2         2.992736326059315        0.1133733820740448
   3         5.775143569104511       0.01039919745314906
   4         9.837467418382589     0.0002610172028149321
   5          15.9828739806017     8.985479064296216e-07

   0        0.1930436765603624        0.4093189517012744
   1         1.026664895339192        0.4218312778617198
   2         2.567876744950746        0.1471263486575055
   3         4.900353084526484       0.02063351446871697
   4         8.182153444562855      0.001074010143280748
   5         12.73418029179781     1.586546434856422e-05
   6         19.39572786226255     3.170315478995567e-08

   0        0.1702796323051015        0.3691885893416387
   1        0.9037017767993818        0.4187867808143421
   2         2.251086629866132        0.1757949866371719
   3         4.266700170287656       0.03334349226121559
   4         7.045905402393467      0.002794536235225666
   5           10.758516010181     9.076508773358223e-05
   6           15.740678641278     8.485746716272525e-07
   7         22.86313173688927     1.048001174871508e-09

   0        0.1523222277318082        0.3361264217979625
   1        0.8072200227422558        0.4112139804239848
   2         2.005135155619348        0.1992875253708853
   3         3.783473973331234       0.04746056276565157
   4         6.204956777876612      0.005599626610794585
   5         9.372985251687572     0.0003052497670932117
   6         13.46623691109209     6.592123026075368e-06
   7          18.8335977889917     4.110769330349561e-08
   8         26.37407189092738     3.290874030350725e-11

   0        0.1377934705404928        0.3084411157650208
   1         0.729454549503172        0.4011199291552736
   2         1.808342901740319        0.2180682876118088
   3         3.401433697854901       0.06208745609867754
   4         5.552496140063805      0.009501516975181085
   5         8.330152746764496     0.0007530083885875395
   6         11.84378583790006     2.825923349599567e-05
   7          16.2792578313781      4.24931398496269e-07
   8         21.99658581198076     1.839564823979623e-09
   9         29.92069701227389     9.911827219609021e-13

LAGUERRE_EK_COMPUTE_TEST:
  Normal end of execution.

LAGUERRE_INTEGRAL_TEST
  Python version: 3.6.9
  LAGUERRE_INTEGRAL evaluates
  Integral ( 0 < x < oo ) x^n * exp(-x) dx

         N         Value

         0                         1
         1                         1
         2                         2
         3                         6
         4                        24
         5                       120
         6                       720
         7                      5040
         8                     40320
         9                    362880
        10                   3628800

LAGUERRE_INTEGRAL_TEST
  Normal end of execution.

LAGUERRE_SET_TEST
  Python version: 3.6.9
  LAGUERRE_SET sets a Laguerre rule.

         I            X                  W

         0                         1                         1

         0         0.585786437626905        0.8535533905932737
         1         3.414213562373095        0.1464466094067262

         0        0.4157745567834791         0.711093009929173
         1         2.294280360279042        0.2785177335692409
         2         6.289945082937479       0.01038925650158613

         0        0.3225476896193923        0.6031541043416336
         1         1.745761101158346        0.3574186924377997
         2         4.536620296921128       0.03888790851500538
         3         9.395070912301133     0.0005392947055613274

         0        0.2635603197181409        0.5217556105828086
         1         1.413403059106517        0.3986668110831759
         2         3.596425771040722        0.0759424496817076
         3         7.085810005858837      0.003611758679922048
         4         12.64080084427578     2.336997238577623e-05

         0        0.2228466041792607        0.4589646739499636
         1         1.188932101672623         0.417000830772121
         2         2.992736326059314         0.113373382074045
         3          5.77514356910451       0.01039919745314907
         4         9.837467418382589     0.0002610172028149321
         5          15.9828739806017     8.985479064296212e-07

         0        0.1930436765603624        0.4093189517012739
         1         1.026664895339192        0.4218312778617198
         2         2.567876744950746        0.1471263486575053
         3         4.900353084526484       0.02063351446871694
         4         8.182153444562861      0.001074010143280746
         5         12.73418029179781      1.58654643485642e-05
         6         19.39572786226254      3.17031547899558e-08

         0         0.170279632305101        0.3691885893416375
         1        0.9037017767993799         0.418786780814343
         2         2.251086629866131        0.1757949866371718
         3         4.266700170287659       0.03334349226121565
         4         7.045905402393466      0.002794536235225673
         5           10.758516010181     9.076508773358213e-05
         6           15.740678641278     8.485746716272531e-07
         7         22.86313173688927      1.04800117487151e-09

         0        0.1523222277318083        0.3361264217979625
         1        0.8072200227422558        0.4112139804239844
         2         2.005135155619347        0.1992875253708856
         3         3.783473973331233        0.0474605627656516
         4         6.204956777876613      0.005599626610794583
         5         9.372985251687576     0.0003052497670932106
         6         13.46623691109209     6.592123026075352e-06
         7          18.8335977889917     4.110769330349548e-08
         8         26.37407189092738     3.290874030350708e-11

         0        0.1377934705404924        0.3084411157650201
         1        0.7294545495031705        0.4011199291552736
         2         1.808342901740316        0.2180682876118094
         3           3.4014336978549       0.06208745609867775
         4         5.552496140063804      0.009501516975181101
         5         8.330152746764497     0.0007530083885875388
         6         11.84378583790007     2.825923349599566e-05
         7          16.2792578313781     4.249313984962686e-07
         8         21.99658581198076     1.839564823979631e-09
         9         29.92069701227389     9.911827219609008e-13

LAGUERRE_SET_TEST:
  Normal end of execution.

LAGUERRE_1_SET_TEST
  Python version: 3.6.9
  LAGUERRE_1_SET sets a Laguerre rule.
  The density function is rho(x)=1.

         I            X                  W

         0                         1         2.718281828459045

         0         0.585786437626905         1.533326033119417
         1         3.414213562373095         4.450957335054593

         0        0.4157745567834791         1.077692859270921
         1         2.294280360279042         2.762142961901588
         2         6.289945082937479         5.601094625434427

         0        0.3225476896193923        0.8327391238378892
         1         1.745761101158346         2.048102438454297
         2         4.536620296921128         3.631146305821517
         3         9.395070912301133          6.48714508440766

         0        0.2635603197181409        0.6790940422077504
         1         1.413403059106517         1.638487873602747
         2         3.596425771040722         2.769443242370837
         3         7.085810005858837         4.315656900920894
         4         12.64080084427578         7.219186354354445

         0        0.2228466041792607        0.5735355074227382
         1         1.188932101672623         1.369252590712305
         2         2.992736326059314         2.260684593382672
         3          5.77514356910451         3.350524582355455
         4         9.837467418382589         4.886826800210821
         5          15.9828739806017         7.849015945595828

         0        0.1930436765603624        0.4964775975399723
         1         1.026664895339192         1.177643060861198
         2         2.567876744950746         1.918249781659806
         3         4.900353084526484         2.771848636232111
         4         8.182153444562861         3.841249122488515
         5         12.73418029179781         5.380678207921533
         6         19.39572786226254          8.40543248682831

         0         0.170279632305101        0.4377234104929114
         1        0.9037017767993799         1.033869347665598
         2         2.251086629866131         1.669709765658776
         3         4.266700170287659         2.376924701758599
         4         7.045905402393466         3.208540913347926
         5           10.758516010181         4.268575510825134
         6           15.740678641278         5.818083368671918
         7         22.86313173688927         8.906226215292222

         0        0.1523222277318083        0.3914311243156399
         1        0.8072200227422558        0.9218050285289631
         2         2.005135155619347         1.480127909942915
         3         3.783473973331233         2.086770807549261
         4         6.204956777876613         2.772921389711971
         5         9.372985251687576         3.591626068092266
         6         13.46623691109209         4.648766002140204
         7          18.8335977889917         6.212275419747135
         8         26.37407189092738         9.363218237705798

         0        0.1377934705404924        0.3540097386069963
         1        0.7294545495031705        0.8319023010435806
         2         1.808342901740316         1.330288561749328
         3           3.4014336978549         1.863063903111131
         4         5.552496140063804         2.450255558083011
         5         8.330152746764497         3.122764155135185
         6         11.84378583790007         3.934152695561524
         7          16.2792578313781          4.99241487219303
         8         21.99658581198076         6.572202485130799
         9         29.92069701227389         9.784695840374624

LAGUERRE_1_SET_TEST:
  Normal end of execution.

LEGENDRE_DR_COMPUTE_TEST
  Python version: 3.6.9
  LEGENDRE_DR_COMPUTE computes a Legendre quadrature rule
  using the Davis-Rabinowitz algorithm.

  Index       X             W

   0                         0                         2

   0       -0.5773502691896258        0.9999999999999994
   1        0.5773502691896258        0.9999999999999994

   0       -0.7745966692414833        0.5555555555555558
   1                         0        0.8888888888888888
   2        0.7745966692414833        0.5555555555555558

   0       -0.8611363115940526        0.3478548451374539
   1       -0.3399810435848563        0.6521451548625462
   2        0.3399810435848563        0.6521451548625462
   3        0.8611363115940526        0.3478548451374539

   0        -0.906179845938664        0.2369268850561891
   1       -0.5384693101056831        0.4786286704993666
   2                         0        0.5688888888888889
   3        0.5384693101056831        0.4786286704993666
   4         0.906179845938664        0.2369268850561891

   0       -0.9324695142031521        0.1713244923791702
   1       -0.6612093864662645        0.3607615730481386
   2       -0.2386191860831969         0.467913934572691
   3        0.2386191860831969         0.467913934572691
   4        0.6612093864662645        0.3607615730481386
   5        0.9324695142031521        0.1713244923791702

   0       -0.9491079123427585        0.1294849661688699
   1       -0.7415311855993945        0.2797053914892767
   2       -0.4058451513773972        0.3818300505051191
   3                         0        0.4179591836734693
   4        0.4058451513773972        0.3818300505051191
   5        0.7415311855993945        0.2797053914892767
   6        0.9491079123427585        0.1294849661688699

   0       -0.9602898564975362        0.1012285362903764
   1       -0.7966664774136267        0.2223810344533745
   2        -0.525532409916329        0.3137066458778873
   3       -0.1834346424956498        0.3626837833783618
   4        0.1834346424956498        0.3626837833783618
   5         0.525532409916329        0.3137066458778873
   6        0.7966664774136267        0.2223810344533745
   7        0.9602898564975362        0.1012285362903764

   0       -0.9681602395076261       0.08127438836157443
   1       -0.8360311073266358        0.1806481606948574
   2       -0.6133714327005904        0.2606106964029354
   3       -0.3242534234038089        0.3123470770400029
   4                         0        0.3302393550012598
   5        0.3242534234038089        0.3123470770400029
   6        0.6133714327005904        0.2606106964029354
   7        0.8360311073266358        0.1806481606948574
   8        0.9681602395076261       0.08127438836157443

   0       -0.9739065285171717       0.06667134430868805
   1       -0.8650633666889845        0.1494513491505806
   2       -0.6794095682990244        0.2190863625159821
   3       -0.4333953941292472        0.2692667193099965
   4       -0.1488743389816312         0.295524224714753
   5        0.1488743389816312         0.295524224714753
   6        0.4333953941292472        0.2692667193099965
   7        0.6794095682990244        0.2190863625159821
   8        0.8650633666889845        0.1494513491505806
   9        0.9739065285171717       0.06667134430868805

LEGENDRE_DR_COMPUTE_TEST:
  Normal end of execution.

LEGENDRE_EK_COMPUTE_TEST
  Python version: 3.6.9
  LEGENDRE_EK_COMPUTE computes
  a Legendre quadrature rule
  using the Elhay-Kautsky algorithm.

  Index       X             W

   0                         0                         2

   0       -0.5773502691896256                         1
   1        0.5773502691896256                         1

   0       -0.7745966692414832        0.5555555555555559
   1    -6.466579952145703e-17        0.8888888888888886
   2        0.7745966692414834        0.5555555555555554

   0       -0.8611363115940526        0.3478548451374537
   1       -0.3399810435848563        0.6521451548625463
   2        0.3399810435848564        0.6521451548625459
   3        0.8611363115940522         0.347854845137454

   0       -0.9061798459386641        0.2369268850561892
   1        -0.538469310105683        0.4786286704993667
   2    -3.478412152580952e-17        0.5688888888888882
   3        0.5384693101056829         0.478628670499367
   4        0.9061798459386642        0.2369268850561892

   0       -0.9324695142031522        0.1713244923791701
   1       -0.6612093864662647        0.3607615730481389
   2       -0.2386191860831971        0.4679139345726916
   3        0.2386191860831969        0.4679139345726918
   4        0.6612093864662648        0.3607615730481388
   5        0.9324695142031524        0.1713244923791705

   0       -0.9491079123427583        0.1294849661688696
   1       -0.7415311855993943        0.2797053914892763
   2       -0.4058451513773971         0.381830050505119
   3     4.452841060583418e-17        0.4179591836734696
   4        0.4058451513773971        0.3818300505051177
   5        0.7415311855993941        0.2797053914892761
   6        0.9491079123427584        0.1294849661688694

   0       -0.9602898564975358         0.101228536290376
   1       -0.7966664774136267        0.2223810344533742
   2       -0.5255324099163291        0.3137066458778873
   3       -0.1834346424956499        0.3626837833783611
   4        0.1834346424956497        0.3626837833783627
   5        0.5255324099163293        0.3137066458778878
   6        0.7966664774136266        0.2223810344533745
   7        0.9602898564975362        0.1012285362903759

   0       -0.9681602395076263       0.08127438836157426
   1        -0.836031107326636        0.1806481606948577
   2       -0.6133714327005901        0.2606106964029359
   3       -0.3242534234038091        0.3123470770400025
   4     1.604668093316319e-16        0.3302393550012599
   5         0.324253423403809        0.3123470770400033
   6        0.6133714327005904        0.2606106964029349
   7         0.836031107326636         0.180648160694857
   8        0.9681602395076262       0.08127438836157452

   0        -0.973906528517172       0.06667134430868817
   1       -0.8650633666889845        0.1494513491505806
   2       -0.6794095682990243        0.2190863625159822
   3       -0.4333953941292472        0.2692667193099962
   4       -0.1488743389816309        0.2955242247147525
   5         0.148874338981631        0.2955242247147538
   6        0.4333953941292469        0.2692667193099955
   7        0.6794095682990243        0.2190863625159825
   8        0.8650633666889844          0.14945134915058
   9         0.973906528517172       0.06667134430868776

LEGENDRE_EK_COMPUTE_TEST:
  Normal end of execution.

LEGENDRE_INTEGRAL_TEST
  Python version: 3.6.9
  LEGENDRE_INTEGRAL evaluates
  Integral ( -1 < x < +1 ) x^n dx

         N         Value

         0                         2
         1                         0
         2        0.6666666666666666
         3                         0
         4                       0.4
         5                         0
         6        0.2857142857142857
         7                         0
         8        0.2222222222222222
         9                         0
        10        0.1818181818181818

LEGENDRE_INTEGRAL_TEST
  Normal end of execution.

LEGENDRE_SET_TEST
  Python version: 3.6.9
  LEGENDRE_SET sets a Legendre quadrature rule.

         I            X                  W

         0                         0                         2

         0       -0.5773502691896257                         1
         1        0.5773502691896257                         1

         0       -0.7745966692414834        0.5555555555555556
         1                         0        0.8888888888888888
         2        0.7745966692414834        0.5555555555555556

         0       -0.8611363115940526        0.3478548451374538
         1       -0.3399810435848563        0.6521451548625461
         2        0.3399810435848563        0.6521451548625461
         3        0.8611363115940526        0.3478548451374538

         0        -0.906179845938664        0.2369268850561891
         1       -0.5384693101056831        0.4786286704993665
         2                         0        0.5688888888888889
         3        0.5384693101056831        0.4786286704993665
         4         0.906179845938664        0.2369268850561891

         0       -0.9324695142031521        0.1713244923791704
         1       -0.6612093864662645        0.3607615730481386
         2       -0.2386191860831969         0.467913934572691
         3        0.2386191860831969         0.467913934572691
         4        0.6612093864662645        0.3607615730481386
         5        0.9324695142031521        0.1713244923791704

         0       -0.9491079123427585        0.1294849661688697
         1       -0.7415311855993945        0.2797053914892766
         2       -0.4058451513773972        0.3818300505051189
         3                         0        0.4179591836734694
         4        0.4058451513773972        0.3818300505051189
         5        0.7415311855993945        0.2797053914892766
         6        0.9491079123427585        0.1294849661688697

         0       -0.9602898564975363        0.1012285362903763
         1       -0.7966664774136267        0.2223810344533745
         2        -0.525532409916329        0.3137066458778873
         3       -0.1834346424956498         0.362683783378362
         4        0.1834346424956498         0.362683783378362
         5         0.525532409916329        0.3137066458778873
         6        0.7966664774136267        0.2223810344533745
         7        0.9602898564975363        0.1012285362903763

         0       -0.9681602395076261       0.08127438836157441
         1       -0.8360311073266358        0.1806481606948574
         2       -0.6133714327005904        0.2606106964029354
         3       -0.3242534234038089        0.3123470770400029
         4                         0        0.3302393550012598
         5        0.3242534234038089        0.3123470770400029
         6        0.6133714327005904        0.2606106964029354
         7        0.8360311073266358        0.1806481606948574
         8        0.9681602395076261       0.08127438836157441

         0       -0.9739065285171717       0.06667134430868814
         1       -0.8650633666889845        0.1494513491505806
         2       -0.6794095682990244         0.219086362515982
         3       -0.4333953941292472        0.2692667193099963
         4       -0.1488743389816312        0.2955242247147529
         5        0.1488743389816312        0.2955242247147529
         6        0.4333953941292472        0.2692667193099963
         7        0.6794095682990244         0.219086362515982
         8        0.8650633666889845        0.1494513491505806
         9        0.9739065285171717       0.06667134430868814

LEGENDRE_SET_TEST:
  Normal end of execution.

LOBATTO_COMPUTE_TEST
  Python version: 3.6.9
  LOBATTO_COMPUTE computes a Lobatto rule

         I      X             W

         0            -1      0.166667
         1     -0.447214      0.833333
         2      0.447214      0.833333
         3             1      0.166667

         0            -1      0.047619
         1     -0.830224      0.276826
         2     -0.468849      0.431745
         3             0      0.487619
         4      0.468849      0.431745
         5      0.830224      0.276826
         6             1      0.047619

         0            -1     0.0222222
         1     -0.919534      0.133306
         2     -0.738774      0.224889
         3     -0.477925      0.292043
         4     -0.165279       0.32754
         5      0.165279       0.32754
         6      0.477925      0.292043
         7      0.738774      0.224889
         8      0.919534      0.133306
         9             1     0.0222222

LOBATTO_COMPUTE_TEST:
  Normal end of execution.

LOBATTO_SET_TEST
  Python version: 3.6.9
  LOBATTO_SET sets a Lobatto rule

         I      X             W

         0            -1      0.166667
         1     -0.447214      0.833333
         2      0.447214      0.833333
         3             1      0.166667

         0            -1      0.047619
         1     -0.830224      0.276826
         2     -0.468849      0.431745
         3             0      0.487619
         4      0.468849      0.431745
         5      0.830224      0.276826
         6             1      0.047619

         0            -1     0.0222222
         1     -0.919534      0.133306
         2     -0.738774      0.224889
         3     -0.477925      0.292043
         4     -0.165279       0.32754
         5      0.165279       0.32754
         6      0.477925      0.292043
         7      0.738774      0.224889
         8      0.919534      0.133306
         9             1     0.0222222

LOBATTO_SET_TEST:
  Normal end of execution.

MOULTON_SET_TEST
  Python version: 3.6.9
  MOULTON_SET sets the abscissas and weights
  for an Adams-Moulton quadrature rule.

    Order  W             X


         1
                       1             1

         2
                     0.5             1
                     0.5             0

         3
                0.416667             1
                0.666667             0
              -0.0833333            -1

         4
                   0.375             1
                0.791667             0
               -0.208333            -1
               0.0416667            -2

         5
                0.348611             1
                0.897222             0
               -0.366667            -1
                0.147222            -2
              -0.0263889            -3

         6
                0.329861             1
                0.990972             0
               -0.554167            -1
                0.334722            -2
               -0.120139            -3
                 0.01875            -4

         7
                0.315592             1
                 1.07659             0
               -0.768204            -1
                0.620106            -2
               -0.334177            -3
                0.104365            -4
              -0.0142692            -5

         8
                0.304225             1
                 1.15616             0
                -1.00692            -1
                 1.01796            -2
               -0.732035            -3
                 0.34308            -4
              -0.0938409            -5
               0.0113674            -6

         9
                0.294868             1
                 1.23101             0
                 -1.2689            -1
                 1.54193            -2
                -1.38699            -3
                0.867046            -4
               -0.355824            -5
               0.0862197            -6
             -0.00935654            -7

        10
                0.286975             1
                 1.30204             0
                -1.55303            -1
                 2.20491            -2
                -2.38145            -3
                 1.86151            -4
                 -1.0188            -5
                0.370352            -6
              -0.0803895            -7
              0.00789255            -8

MOULTON_SET_TEST:
  Normal end of execution.

NC_COMPUTE_WEIGHTS_TEST
  Python version: 3.6.9
  NC_COMPUTE_WEIGHTS computes weights for
  a Newton-Cotes quadrature rule

  Index       X             W

   0                       0.5                         1

   0                         0                       0.5
   1                         1                       0.5

   0                         0        0.1666666666666666
   1                       0.5        0.6666666666666667
   2                         1        0.1666666666666666

   0                         0                     0.125
   1        0.3333333333333333                     0.375
   2        0.6666666666666666                     0.375
   3                         1        0.1250000000000003

   0                         0       0.07777777777777839
   1                      0.25        0.3555555555555561
   2                       0.5        0.1333333333333329
   3                      0.75        0.3555555555555583
   4                         1       0.07777777777777795

   0                         0       0.06597222222221788
   1                       0.2        0.2604166666666643
   2                       0.4        0.1736111111111285
   3                       0.6        0.1736111111110983
   4                       0.8        0.2604166666666687
   5                         1        0.0659722222222211

   0                         0       0.04880952380951875
   1        0.1666666666666667        0.2571428571428811
   2        0.3333333333333333       0.03214285714284415
   3                       0.5        0.3238095238095013
   4        0.6666666666666666       0.03214285714278731
   5        0.8333333333333334        0.2571428571428838
   6                         1       0.04880952380952142

   0                         0       0.04346064814816586
   1        0.1428571428571428        0.2070023148149858
   2        0.2857142857142857       0.07656250000019327
   3        0.4285714285714285        0.1729745370369784
   4        0.5714285714285714        0.1729745370371489
   5        0.7142857142857143       0.07656250000005294
   6        0.8571428571428571        0.2070023148148872
   7                         1        0.0434606481481824

   0                         0       0.03488536155206035
   1                     0.125        0.2076895943561112
   2                      0.25      -0.03273368606834737
   3                     0.375        0.3702292769000053
   4                       0.5       -0.1601410934754171
   5                     0.625         0.370229276900929
   6                      0.75      -0.03273368606535598
   7                     0.875         0.207689594355787
   8                         1        0.0348853615519884

   0                         0       0.03188616071413897
   1        0.1111111111111111        0.1756808035706854
   2        0.2222222222222222       0.01205357144226582
   3        0.3333333333333333        0.2158928571161596
   4        0.4444444444444444       0.06448660712112542
   5        0.5555555555555556       0.06448660717715882
   6        0.6666666666666666         0.215892857159794
   7        0.7777777777777778       0.01205357143547303
   8        0.8888888888888888        0.1756808035724458
   9                         1       0.03188616071432337

NC_COMPUTE_WEIGHTS_TEST
  Normal end of execution.

NCC_COMPUTE_TEST
  Python version: 3.6.9
  NCC_COMPUTE computes a Newton-Cotes Closed quadrature rule

  Index       X             W

   0                         0                         2

   0                        -1                         1
   1                         1                         1

   0                        -1        0.3333333333333333
   1                         0         1.333333333333333
   2                         1        0.3333333333333333

   0                        -1        0.2500000000000004
   1       -0.3333333333333333        0.7499999999999996
   2        0.3333333333333333                      0.75
   3                         1                      0.25

   0                        -1        0.1555555555555557
   1                      -0.5         0.711111111111111
   2                         0        0.2666666666666666
   3                       0.5         0.711111111111111
   4                         1        0.1555555555555556

   0                        -1        0.1319444444444441
   1                      -0.6        0.5208333333333339
   2                      -0.2        0.3472222222222229
   3                       0.2         0.347222222222221
   4                       0.6        0.5208333333333326
   5                         1        0.1319444444444444

   0                        -1       0.09761904761904808
   1       -0.6666666666666666        0.5142857142857133
   2       -0.3333333333333333       0.06428571428570932
   3                         0        0.6476190476190524
   4        0.3333333333333333       0.06428571428571317
   5        0.6666666666666666         0.514285714285714
   6                         1       0.09761904761904755

   0                        -1       0.08692129629629897
   1       -0.7142857142857143        0.4140046296296206
   2       -0.4285714285714285        0.1531249999999869
   3       -0.1428571428571428        0.3459490740740891
   4        0.1428571428571428        0.3459490740740738
   5        0.4285714285714285        0.1531250000000043
   6        0.7142857142857143        0.4140046296296293
   7                         1       0.08692129629629636

   0                        -1       0.06977072310405794
   1                     -0.75        0.4153791887125269
   2                      -0.5       -0.0654673721340393
   3                     -0.25        0.7404585537919086
   4                         0       -0.3202821869488677
   5                      0.25         0.740458553791866
   6                       0.5       -0.0654673721340393
   7                      0.75        0.4153791887125232
   8                         1       0.06977072310405667

   0                        -1       0.06377232142857905
   1       -0.7777777777777778        0.3513616071428758
   2       -0.5555555555555556       0.02410714285722957
   3       -0.3333333333333333        0.4317857142858179
   4       -0.1111111111111111        0.1289732142857689
   5        0.1111111111111111        0.1289732142858637
   6        0.3333333333333333        0.4317857142856988
   7        0.5555555555555556       0.02410714285714771
   8        0.7777777777777778        0.3513616071428603
   9                         1       0.06377232142857162

NCC_COMPUTE_TEST
  Normal end of execution.

NCC_SET_TEST
  Python version: 3.6.9
  NCC_SET sets up a Newton-Cotes Closed quadrature rule

  Index       X             W

   0             0             2

   0            -1             1
   1             1             1

   0            -1      0.333333
   1             0       1.33333
   2             1      0.333333

   0            -1          0.25
   1     -0.333333          0.75
   2      0.333333          0.75
   3             1          0.25

   0            -1      0.155556
   1          -0.5      0.711111
   2             0      0.266667
   3           0.5      0.711111
   4             1      0.155556

   0            -1      0.131944
   1          -0.6      0.520833
   2          -0.2      0.347222
   3           0.2      0.347222
   4           0.6      0.520833
   5             1      0.131944

   0            -1      0.097619
   1     -0.666667      0.514286
   2     -0.333333     0.0642857
   3             0      0.647619
   4      0.333333     0.0642857
   5      0.666667      0.514286
   6             1      0.097619

   0            -1     0.0869213
   1     -0.714286      0.414005
   2     -0.428571      0.153125
   3     -0.142857      0.345949
   4      0.142857      0.345949
   5      0.428571      0.153125
   6      0.714286      0.414005
   7             1     0.0869213

   0            -1     0.0697707
   1         -0.75      0.415379
   2          -0.5    -0.0654674
   3         -0.25      0.740459
   4             0     -0.320282
   5          0.25      0.740459
   6           0.5    -0.0654674
   7          0.75      0.415379
   8             1     0.0697707

   0            -1     0.0637723
   1     -0.777778      0.351362
   2     -0.555556     0.0241071
   3     -0.333333      0.431786
   4     -0.111111      0.128973
   5      0.111111      0.128973
   6      0.333333      0.431786
   7      0.555556     0.0241071
   8      0.777778      0.351362
   9             1     0.0637723

NCC_SET_TEST:
  Normal end of execution.

NCO_COMPUTE_TEST
  Python version: 3.6.9
  NCO_COMPUTE computes a Newton-Cotes Open quadrature rule

  Index       X             W

   0                         0                         2

   0                        -1                         1
   1                         1                         1

   0                        -1        0.3333333333333333
   1                         0         1.333333333333333
   2                         1        0.3333333333333333

   0                        -1        0.2500000000000004
   1       -0.3333333333333333        0.7499999999999996
   2        0.3333333333333333                      0.75
   3                         1                      0.25

   0                        -1        0.1555555555555557
   1                      -0.5         0.711111111111111
   2                         0        0.2666666666666666
   3                       0.5         0.711111111111111
   4                         1        0.1555555555555556

   0                        -1        0.1319444444444441
   1                      -0.6        0.5208333333333339
   2                      -0.2        0.3472222222222229
   3                       0.2         0.347222222222221
   4                       0.6        0.5208333333333326
   5                         1        0.1319444444444444

   0                        -1       0.09761904761904808
   1       -0.6666666666666666        0.5142857142857133
   2       -0.3333333333333333       0.06428571428570932
   3                         0        0.6476190476190524
   4        0.3333333333333333       0.06428571428571317
   5        0.6666666666666666         0.514285714285714
   6                         1       0.09761904761904755

   0                        -1       0.08692129629629897
   1       -0.7142857142857143        0.4140046296296206
   2       -0.4285714285714285        0.1531249999999869
   3       -0.1428571428571428        0.3459490740740891
   4        0.1428571428571428        0.3459490740740738
   5        0.4285714285714285        0.1531250000000043
   6        0.7142857142857143        0.4140046296296293
   7                         1       0.08692129629629636

   0                        -1       0.06977072310405794
   1                     -0.75        0.4153791887125269
   2                      -0.5       -0.0654673721340393
   3                     -0.25        0.7404585537919086
   4                         0       -0.3202821869488677
   5                      0.25         0.740458553791866
   6                       0.5       -0.0654673721340393
   7                      0.75        0.4153791887125232
   8                         1       0.06977072310405667

   0                        -1       0.06377232142857905
   1       -0.7777777777777778        0.3513616071428758
   2       -0.5555555555555556       0.02410714285722957
   3       -0.3333333333333333        0.4317857142858179
   4       -0.1111111111111111        0.1289732142857689
   5        0.1111111111111111        0.1289732142858637
   6        0.3333333333333333        0.4317857142856988
   7        0.5555555555555556       0.02410714285714771
   8        0.7777777777777778        0.3513616071428603
   9                         1       0.06377232142857162

NCO_COMPUTE_TEST
  Normal end of execution.

NCO_SET_TEST
  Python version: 3.6.9
  NCO_SET sets up a Newton-Cotes Open quadrature rule

  Index       X             W

   0             0             2

   0     -0.333333             1
   1      0.333333             1

   0          -0.5       1.33333
   1             0     -0.666667
   2           0.5       1.33333

   0          -0.6      0.916667
   1          -0.2     0.0833333
   2           0.2     0.0833333
   3           0.6      0.916667

   0     -0.666667           1.1
   1     -0.333333          -1.4
   2             0           2.6
   3      0.333333          -1.4
   4      0.666667           1.1

   0     -0.714286      0.848611
   1     -0.428571     -0.629167
   2     -0.142857      0.780556
   3      0.142857      0.780556
   4      0.428571     -0.629167
   5      0.714286      0.848611

   0         -0.75      0.973545
   1          -0.5      -2.01905
   2         -0.25       4.64762
   3             0      -5.20423
   4          0.25       4.64762
   5           0.5      -2.01905
   6          0.75      0.973545

   0     -0.777778      0.797768
   1     -0.555556      -1.25134
   2     -0.333333       2.21741
   3     -0.111111     -0.763839
   4      0.111111     -0.763839
   5      0.333333       2.21741
   6      0.555556      -1.25134
   7      0.777778      0.797768

   0          -0.8      0.891755
   1          -0.6      -2.57716
   2          -0.4       7.35009
   3          -0.2      -12.1407
   4             0       14.9519
   5           0.2      -12.1407
   6           0.4       7.35009
   7           0.6      -2.57716
   8           0.8      0.891755

   0     -0.818182      0.758509
   1     -0.636364      -1.81966
   2     -0.454545        4.3193
   3     -0.272727      -4.70834
   4    -0.0909091       2.45019
   5     0.0909091       2.45019
   6      0.272727      -4.70834
   7      0.454545        4.3193
   8      0.636364      -1.81966
   9      0.818182      0.758509

NCO_SET_TEST:
  Normal end of execution.

NCOH_COMPUTE_TEST
  Python version: 3.6.9
  NCOH_COMPUTE computes a Newton-Cotes Open Half quadrature rule

  Index       X             W

   0                         0                         2

   0                      -0.5                         1
   1                       0.5                         1

   0       -0.6666666666666666                      0.75
   1                         0                       0.5
   2        0.6666666666666666                      0.75

   0                     -0.75        0.5416666666666666
   1                     -0.25        0.4583333333333335
   2                      0.25        0.4583333333333335
   3                      0.75        0.5416666666666666

   0                      -0.8        0.4774305555555558
   1                      -0.4        0.1736111111111107
   2                         0         0.697916666666667
   3                       0.4        0.1736111111111112
   4                       0.8        0.4774305555555554

   0       -0.8333333333333334                 0.3859375
   1                      -0.5        0.2171874999999994
   2       -0.1666666666666667        0.3968749999999941
   3        0.1666666666666667        0.3968750000000001
   4                       0.5        0.2171875000000004
   5        0.8333333333333334        0.3859374999999999

   0       -0.8571428571428571        0.3580005787037045
   1       -0.5714285714285714        0.0127604166666625
   2       -0.2857142857142857        0.8102864583333247
   3                         0       -0.3620949074074109
   4        0.2857142857142857        0.8102864583333318
   5        0.5714285714285714       0.01276041666666561
   6        0.8571428571428571        0.3580005787037041

   0                    -0.875        0.3055007853835972
   1                    -0.625       0.07371135085978964
   2                    -0.375        0.4875279017857209
   3                    -0.125        0.1332599619708654
   4                     0.125        0.1332599619709007
   5                     0.375         0.487527901785696
   6                     0.625       0.07371135085978775
   7                     0.875        0.3055007853835978

   0       -0.8888888888888888        0.2902556501116099
   1       -0.6666666666666666      -0.09096261160714961
   2       -0.4444444444444444         1.012537667410742
   3       -0.2222222222222222         -1.12557756696433
   4                         0          1.82749372209814
   5        0.2222222222222222        -1.125577566964292
   6        0.4444444444444444         1.012537667410705
   7        0.6666666666666666      -0.09096261160714395
   8        0.8888888888888888        0.2902556501116076

   0                      -0.9        0.2557278856819025
   1                      -0.7      -0.02652149772308931
   2                      -0.5        0.6604044811645895
   3                      -0.3       -0.3376966473075349
   4                      -0.1        0.4480857781842378
   5                       0.1        0.4480857781845167
   6                       0.3       -0.3376966473076202
   7                       0.5        0.6604044811646075
   8                       0.7      -0.02652149772306411
   9                       0.9        0.2557278856819051

NCOH_COMPUTE_TEST
  Normal end of execution.

NCOH_SET_TEST
  Python version: 3.6.9
  NCOH_SET sets up a Newton-Cotes Open half quadrature rule

  Index       X             W

   0                         0                         2

   0                      -0.5                         1
   1                       0.5                         1

   0       -0.6666666666666666                      0.75
   1                         0                       0.5
   2        0.6666666666666666                      0.75

   0                     -0.75        0.5416666666666666
   1                     -0.25        0.4583333333333333
   2                      0.25        0.4583333333333333
   3                      0.75        0.5416666666666666

   0                      -0.8        0.4774305555555556
   1                      -0.4        0.1736111111111111
   2                         0        0.6979166666666666
   3                       0.4        0.1736111111111111
   4                       0.8        0.4774305555555556

   0       -0.8333333333333334                 0.3859375
   1                      -0.5                 0.2171875
   2       -0.1666666666666667                  0.396875
   3        0.1666666666666667                  0.396875
   4                       0.5                 0.2171875
   5        0.8333333333333334                 0.3859375

   0       -0.8571428571428571        0.3580005787037037
   1       -0.5714285714285714       0.01276041666666667
   2       -0.2857142857142857        0.8102864583333333
   3                         0       -0.3620949074074074
   4        0.2857142857142857        0.8102864583333333
   5        0.5714285714285714       0.01276041666666667
   6        0.8571428571428571        0.3580005787037037

   0                    -0.875        0.3055007853835979
   1                    -0.625       0.07371135085978836
   2                    -0.375        0.4875279017857143
   3                    -0.125        0.1332599619708995
   4                     0.125        0.1332599619708995
   5                     0.375        0.4875279017857143
   6                     0.625       0.07371135085978836
   7                     0.875        0.3055007853835979

   0       -0.8888888888888888        0.2902556501116071
   1       -0.6666666666666666      -0.09096261160714286
   2       -0.4444444444444444         1.012537667410714
   3       -0.2222222222222222        -1.125577566964286
   4                         0         1.827493722098214
   5        0.2222222222222222        -1.125577566964286
   6        0.4444444444444444         1.012537667410714
   7        0.6666666666666666      -0.09096261160714286
   8        0.8888888888888888        0.2902556501116071

   0                      -0.9        0.2557278856819059
   1                      -0.7       -0.0265214977230765
   2                      -0.5        0.6604044811645723
   3                      -0.3       -0.3376966473076499
   4                      -0.1        0.4480857781842482
   5                       0.1        0.4480857781842482
   6                       0.3       -0.3376966473076499
   7                       0.5        0.6604044811645723
   8                       0.7       -0.0265214977230765
   9                       0.9        0.2557278856819059

NCOH_SET_TEST:
  Normal end of execution.

PATTERSON_SET_TEST
  Python version: 3.6.9
  PATTERSON_SET sets a Patterson quadrature rule.

  Index       X             W

   0                         0                         2

   0       -0.7745966692414834        0.5555555555555556
   1                         0        0.8888888888888888
   2        0.7745966692414834        0.5555555555555556

   0       -0.9604912687080203        0.1046562260264673
   1       -0.7745966692414834        0.2684880898683334
   2       -0.4342437493468025        0.4013974147759622
   3                         0        0.4509165386584741
   4        0.4342437493468025        0.4013974147759622
   5        0.7745966692414834        0.2684880898683334
   6        0.9604912687080203        0.1046562260264673

   0        -0.993831963212755       0.01700171962994026
   1       -0.9604912687080203       0.05160328299707974
   2        -0.888459232872257       0.09292719531512454
   3       -0.7745966692414834        0.1344152552437842
   4       -0.6211029467372264        0.1715119091363914
   5       -0.4342437493468025         0.200628529376989
   6       -0.2233866864289669        0.2191568584015875
   7                         0        0.2255104997982067
   8        0.2233866864289669        0.2191568584015875
   9        0.4342437493468025         0.200628529376989
  10        0.6211029467372264        0.1715119091363914
  11        0.7745966692414834        0.1344152552437842
  12         0.888459232872257       0.09292719531512454
  13        0.9604912687080203       0.05160328299707974
  14         0.993831963212755       0.01700171962994026

PATTERSON_SET_TEST:
  Normal end of execution.

RADAU_SET_TEST
  Python version: 3.6.9
  RADAU_SET sets a Radau rule.

         I            X                  W

         0                        -1                     0.125
         1       -0.5753189235216941        0.6576886399601195
         2        0.1810662711185306        0.7763869376863438
         3        0.8228240809745921        0.4409244223535367

         0                        -1       0.04081632653061224
         1       -0.8538913426394822        0.2392274892253124
         2        -0.538467724060109        0.3809498736442312
         3       -0.1173430375431003        0.4471098290145665
         4        0.3260306194376914        0.4247037790059556
         5        0.7038428006630314        0.3182042314673015
         6        0.9413671456804302        0.1489884711120206

         0                        -1                      0.02
         1       -0.9274843742335811        0.1202966705574816
         2       -0.7638420424200026        0.2042701318790007
         3       -0.5256460303700792        0.2681948378411787
         4        -0.236234469390588        0.3058592877244226
         5       0.07605919783797813        0.3135824572269384
         6        0.3806648401447243        0.2906101648329183
         7        0.6477666876740095        0.2391934317143797
         8        0.8512252205816079        0.1643760127369215
         9         0.971175180702247       0.07361700548675849

RADAU_SET_TEST:
  Normal end of execution.

TIMESTAMP_TEST:
  Python version: 3.6.9
  TIMESTAMP prints a timestamp of the current date and time.

Fri Jan 31 19:13:43 2020

TIMESTAMP_TEST:
  Normal end of execution.

QUADRULE_TEST:
  Normal end of execution.
Fri Jan 31 19:13:43 2020
