Sun Feb  2 08:30:45 2020

R8COL_TEST
  Python version:
  Test the R8COL library.

I4_LOG_10_TEST
  I4_LOG_10: whole part of log base 10,

  X, I4_LOG_10

     0             0
     1             0
     2             0
     3             0
     9             0
    10             1
    11             1
    99             1
   101             2
    -1             0
    -2             0
    -3             0
    -9             0

I4_LOG_10_TEST
  Normal end of execution.

R8COL_FLIP_TEST:
  R8COL_FLIP flips the columns of an R8COL.

  Matrix A:

  Col:       0             1             2             3       
  Row
      0 :    0.218418     0.0661187     0.0617272    0.00183837  
      1 :    0.956318      0.257578      0.449539      0.897504  
      2 :    0.829509      0.109957      0.401306      0.350752  
      3 :    0.561695      0.043829      0.754673     0.0945448  
      4 :    0.415307      0.633966      0.797287     0.0136169  

  Matrix after column flipping:

  Col:       0             1             2             3       
  Row
      0 :    0.415307      0.633966      0.797287     0.0136169  
      1 :    0.561695      0.043829      0.754673     0.0945448  
      2 :    0.829509      0.109957      0.401306      0.350752  
      3 :    0.956318      0.257578      0.449539      0.897504  
      4 :    0.218418     0.0661187     0.0617272    0.00183837  

R8COL_FLIP_TEST:
  Normal end of execution.

R8COL_INDICATOR_TEST
  R8COL_INDICATOR creates an "indicator" R8COL.

  The indicator matrix:

  Col:       0             1             2             3       
  Row
      0 :          11            12            13            14  
      1 :          21            22            23            24  
      2 :          31            32            33            34  
      3 :          41            42            43            44  
      4 :          51            52            53            54  

R8COL_INDICATOR_TEST
  Normal end of execution.

R8COL_MAX_TEST
  For an R8COL, an array of column vectors
  R8COL_MAX computes maximums

  The array:

  Col:       0             1             2             3       
  Row
      0 :           1             2             3             4  
      1 :           5             6             7             8  
      2 :           9            10            11            12  

  Column maximums:

     0:             9
     1:            10
     2:            11
     3:            12

R8COL_MAX_TEST
  Normal end of execution.

R8COL_MEAN_TEST
  For an R8COL, an array of column vectors
  R8COL_MEAN computes means

  The array:

  Col:       0             1             2             3       
  Row
      0 :           1             2             3             4  
      1 :           5             6             7             8  
      2 :           9            10            11            12  

  Column means:

     0:             5
     1:             6
     2:             7
     3:             8

R8COL_MEAN_TEST
  Normal end of execution.

R8COL_MIN_TEST
  For an R8COL, an array of column vectors
  R8COL_MIN computes minimums

  The array:

  Col:       0             1             2             3       
  Row
      0 :           1             2             3             4  
      1 :           5             6             7             8  
      2 :           9            10            11            12  

  Column minimums:

     0:             1
     1:             2
     2:             3
     3:             4

R8COL_MIN_TEST
  Normal end of execution.

R8COL_NORMALIZE_LI_TEST:
  R8COL_NORMALIZE_LI normalizes an array A, dividing each
  column by its maximum element.

  Matrix A:

  Col:       0             1             2             3       
  Row
      0 :    -2.81582      -4.33881      -4.38273      -4.98162  
      1 :     4.56318      -2.42422      -0.50461       3.97504  
      2 :     3.29509      -3.90043     -0.986937      -1.49248  
      3 :    0.616954      -4.56171       2.54673      -4.05455  
      4 :   -0.846929       1.33966       2.97287      -4.86383  

  Matrix after column LI normalization:

  Col:       0             1             2             3       
  Row
      0 :   -0.617074      0.951137             1             1  
      1 :           1      0.531428      0.115136     -0.797942  
      2 :    0.722105      0.855037      0.225188      0.299597  
      3 :    0.135203             1     -0.581084      0.813903  
      4 :   -0.185601     -0.293674     -0.678315      0.976356  

R8COL_NORMALIZE_LI_TEST:
  Normale end of execution.

R8COL_PRINT_TEST
  R8COL_PRINT prints an R8COL.

  Here is an R8COL:

  Col:       0             1             2             3             4       
  Row
      0 :          11            12            13            14            15  
      1 :          21            22            23            24            25  
      2 :          31            32            33            34            35  
      3 :          41            42            43            44            45  

  Col:       5       
  Row
      0 :          16  
      1 :          26  
      2 :          36  
      3 :          46  

R8COL_PRINT_TEST:
  Normal end of execution.

R8COL_PRINT_SOME_TEST
  R8COL_PRINT_SOME prints some of an R8COL.

  Here is an R8COL:

  Col:       3             4             5       
  Row
      0 :          14            15            16  
      1 :          24            25            26  
      2 :          34            35            36  

R8COL_PRINT_SOME_TEST:
  Normal end of execution.

R8COL_SUM_TEST
  For an R8COL, an array of column vectors
  R8COL_SUM computes sums

  The array:

  Col:       0             1             2             3       
  Row
      0 :           1             2             3             4  
      1 :           5             6             7             8  
      2 :           9            10            11            12  

  The column sums:

     0:            15
     1:            18
     2:            21
     3:            24

R8COL_SUM_TEST
  Normal end of execution.

R8COL_SWAP_TEST
  Python version: 3.6.9
  R8COL_SWAP swaps two columns of an R8COL.

  The array:

  Col:       0             1             2             3       
  Row
      0 :          11            12            13            14  
      1 :          21            22            23            24  
      2 :          31            32            33            34  

  Swap columns 0 and 2

  The updated matrix:

  Col:       0             1             2             3       
  Row
      0 :          13            12            11            14  
      1 :          23            22            21            24  
      2 :          33            32            31            34  

R8COL_SWAP_TEST
  Normal end of execution.

R8COL_TO_R8VEC_TEST
  R8COL_TO_R8VEC converts an R8COL matrix to an R8VEC vector.

  R8COL matrix:

  Col:       0             1             2       
  Row
      0 :          11            12            13  
      1 :          21            22            23  
      2 :          31            32            33  
      3 :          41            42            43  

  Corresponding R8VEC vector:

     0:            11
     1:            21
     2:            31
     3:            41
     4:            12
     5:            22
     6:            32
     7:            42
     8:            13
     9:            23
    10:            33
    11:            43

R8COL_TO_R8VEC_TEST:
  Normal end of execution.

R8COL_TRANSPOSE_PRINT_TEST
  R8COL_TRANSPOSE_PRINT prints an R8COL.

  Here is an R8COL, transposed:

  Row:       0             1             2             3       
  Col
      0 :          11            21            31            41  
      1 :          12            22            32            42  
      2 :          13            23            33            43  

R8COL_TRANSPOSE_PRINT_TEST:
  Normal end of execution.

R8COL_TRANSPOSE_PRINT_SOME_TEST
  R8COL_TRANSPOSE_PRINT_SOME prints some of an R8COL, transposed.

  R8COL, rows 0:2, cols 3:5:

  Row:       0             1             2       
  Col
      3 :          14            24            34  
      4 :          15            25            35  
      5 :          16            26            36  

R8COL_TRANSPOSE_PRINT_SOME_TEST:
  Normal end of execution.

R8COL_UNIFORM_01_TEST
  R8COL_UNIFORM_01 computes a random R8COL.
  Initial seed is 123456789

  Random R8COL:

  Col:       0             1             2             3       
  Row
      0 :    0.218418     0.0661187     0.0617272    0.00183837  
      1 :    0.956318      0.257578      0.449539      0.897504  
      2 :    0.829509      0.109957      0.401306      0.350752  
      3 :    0.561695      0.043829      0.754673     0.0945448  
      4 :    0.415307      0.633966      0.797287     0.0136169  

R8COL_UNIFORM_01_TEST:
  Normal end of execution.

R8COL_UNIFORM_AB_TEST
  R8COL_UNIFORM_AB computes a random R8COL.

  -1 <= X <= 5
  Initial seed is 123456789

  Random R8COL:

  Col:       0             1             2             3       
  Row
      0 :     0.31051     -0.603288     -0.629637      -0.98897  
      1 :     4.73791      0.545467       1.69723       4.38502  
      2 :     3.97706     -0.340259       1.40784       1.10451  
      3 :     2.37017     -0.737026       3.52804     -0.432731  
      4 :     1.49184       2.80379       3.78372     -0.918299  

R8COL_UNIFORM_AB_TEST:
  Normal end of execution.

R8COL_UNIFORM_ABVEC_TEST
  Python version: 3.6.9
  R8COL_UNIFORM_ABVEC computes a random scaled R8COL.

   Col         Min         Max

     0          -1           1
     1           0           1
     2          50          55
     3         100       100.1
     4          17          20

  Initial seed is 123456789

  Random R8COL:

  Col:       0             1             2             3       
  Row
      0 :   -0.563163      0.912635      0.659018      0.123391  
      1 :    0.415307     0.0661187      0.257578      0.109957  
      2 :     50.2191       53.1698       50.3086       52.2477  
      3 :      100.04       100.075        100.08           100  
      4 :     19.6925       18.0523       17.2836       17.0409  

R8COL_UNIFORM_ABVEC_TEST:
  Normal end of execution.

R8COL_VARIANCE_TEST
  For an R8COL, an array of column vectors
  R8COL_VARIANCE computes variances

  The array:

  Col:       0             1             2             3       
  Row
      0 :           1             2             3             4  
      1 :           5             6             7             8  
      2 :           9            10            11            12  

  Column variances:

     0:            16
     1:            16
     2:            16
     3:            16

R8COL_VARIANCE_TEST
  Normal end of execution.

R8VEC_PRINT_TEST
  R8VEC_PRINT prints an R8VEC.

  Here is an R8VEC:

     0:       123.456
     1:         5e-06
     2:        -1e+06
     3:       3.14159

R8VEC_PRINT_TEST:
  Normal end of execution.

R8COL_TEST:
  Normal end of execution.
Sun Feb  2 08:30:46 2020
