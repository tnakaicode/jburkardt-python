Mon Feb  3 07:59:23 2020

SIMPLEX_GM_RULE_TEST
  MATLAB version.
  Test the SIMPLEX_GM_RULE library.

COMP_NEXT_TEST
  Python version: 3.6.9
  COMP_NEXT generates compositions.

  Seeking all compositions of N = 6
  using 3 parts.

   6   0   0  
   5   1   0  
   4   2   0  
   3   3   0  
   2   4   0  
   1   5   0  
   0   6   0  
   5   0   1  
   4   1   1  
   3   2   1  
   2   3   1  
   1   4   1  
   0   5   1  
   4   0   2  
   3   1   2  
   2   2   2  
   1   3   2  
   0   4   2  
   3   0   3  
   2   1   3  
   1   2   3  
   0   3   3  
   2   0   4  
   1   1   4  
   0   2   4  
   1   0   5  
   0   1   5  
   0   0   6  

COMP_NEXT_TEST
  Normal end of execution.

GM_GENERAL_RULE_SET_TEST01
  GM_GENERAL_RULE_SET determines the weights and abscissas
  of a Grundmann-Moeller quadrature rule for
  the M dimensional general simplex,
  using a rule of in index RULE,
  which will have degree of exactness 2*RULE+1.

  Here we use M = 3
  RULE = 2
  DEGREE = 5

  Simplex vertices:

             1             0             0
             2             0             0
             1             2             0
             1             0             3

     POINT        W             X             Y             Z

         0      0.304762      1.125000      0.250000      0.375000
         1      0.304762      1.375000      0.250000      0.375000
         2      0.304762      1.625000      0.250000      0.375000
         3      0.304762      1.125000      0.750000      0.375000
         4      0.304762      1.375000      0.750000      0.375000
         5      0.304762      1.125000      1.250000      0.375000
         6      0.304762      1.125000      0.250000      1.125000
         7      0.304762      1.375000      0.250000      1.125000
         8      0.304762      1.125000      0.750000      1.125000
         9      0.304762      1.125000      0.250000      1.875000
        10     -0.578571      1.166667      0.333333      0.500000
        11     -0.578571      1.500000      0.333333      0.500000
        12     -0.578571      1.166667      1.000000      0.500000
        13     -0.578571      1.166667      0.333333      1.500000
        14      0.266667      1.250000      0.500000      0.750000

GM_GENERAL_RULE_SET_TEST05
  GM_GENERAL_RULE_SET determines the weights and abscissas
  of a Grundmann-Moeller quadrature rule for
  the M dimensional general simplex,
  using a rule of index RULE,
  which will have degree of exactness 2*RULE+1.
  In this test, look at all the monomials up to
  some maximum degree, choose a few low order rules
  and determine the quadrature error for each.

  Simplex vertices:

             1             0             0
             2             0             0
             1             2             0
             1             0             3

  Simplex volume = 1

         N        1               X               Y               Z               X^2              XY             XZ              Y^2             YZ               Z^2

         1               1            1.25             0.5            0.75          1.5625           0.625          0.9375            0.25           0.375          0.5625
         5               1            1.25             0.5            0.75             1.6             0.6             0.9             0.4             0.3             0.9
        15               1            1.25             0.5            0.75             1.6             0.6             0.9             0.4             0.3             0.9
        35               1            1.25             0.5            0.75             1.6             0.6             0.9             0.4             0.3             0.9
        70               1            1.25             0.5            0.75             1.6             0.6             0.9             0.4             0.3             0.9
       126               1            1.25             0.5            0.75             1.6             0.6             0.9             0.4             0.3             0.9

GM_RULE_SIZE_TEST
  GM_RULE_SIZE returns N, the number of points
  associated with a Grundmann-Moeller quadrature rule
  for the unit simplex of dimension M
  with rule index RULE
  and degree of exactness DEGREE = 2*RULE+1.

         M      RULE    DEGREE N

         2         0         1         1
         2         1         3         4
         2         2         5        10
         2         3         7        20
         2         4         9        35
         2         5        11        56

         3         0         1         1
         3         1         3         5
         3         2         5        15
         3         3         7        35
         3         4         9        70
         3         5        11       126

         5         0         1         1
         5         1         3         7
         5         2         5        28
         5         3         7        84
         5         4         9       210
         5         5        11       462

        10         0         1         1
        10         1         3        12
        10         2         5        78
        10         3         7       364
        10         4         9      1365
        10         5        11      4368

GM_UNIT_RULE_SET_TEST01
  GM_UNIT_RULE_SET determines the weights and abscissas
  of a Grundmann-Moeller quadrature rule for
  the M dimensional unit simplex,
  using a rule of in index RULE,
  which will have degree of exactness 2*RULE+1.

  Here we use M = 3
  RULE = 2
  DEGREE = 5

     POINT        W             X             Y             Z

         0      0.050794      0.125000      0.125000      0.125000
         1      0.050794      0.375000      0.125000      0.125000
         2      0.050794      0.625000      0.125000      0.125000
         3      0.050794      0.125000      0.375000      0.125000
         4      0.050794      0.375000      0.375000      0.125000
         5      0.050794      0.125000      0.625000      0.125000
         6      0.050794      0.125000      0.125000      0.375000
         7      0.050794      0.375000      0.125000      0.375000
         8      0.050794      0.125000      0.375000      0.375000
         9      0.050794      0.125000      0.125000      0.625000
        10     -0.096429      0.166667      0.166667      0.166667
        11     -0.096429      0.500000      0.166667      0.166667
        12     -0.096429      0.166667      0.500000      0.166667
        13     -0.096429      0.166667      0.166667      0.500000
        14      0.044444      0.250000      0.250000      0.250000

GM_UNIT_RULE_SET_TEST02
  GM_UNIT_RULE_SET determines the weights and abscissas
  of a Grundmann-Moeller quadrature rule for
  the M dimensional unit simplex,
  using a rule of in index RULE,
  which will have degree of exactness 2*RULE+1.

  In this test, we compute various rules, and simply
  report the number of points, and the sum of weights.

   M            RULE    N  WEIGHT SUM

         2         0         1        0.5000000000000000
         2         1         4        0.4999999999999999
         2         2        10        0.5000000000000000
         2         3        20        0.5000000000000003
         2         4        35        0.4999999999999996
         2         5        56        0.5000000000000016

         3         0         1        0.1666666666666667
         3         1         5        0.1666666666666667
         3         2        15        0.1666666666666667
         3         3        35        0.1666666666666671
         3         4        70        0.1666666666666659
         3         5       126        0.1666666666666679

         5         0         1        0.0083333333333333
         5         1         7        0.0083333333333333
         5         2        28        0.0083333333333333
         5         3        84        0.0083333333333333
         5         4       210        0.0083333333333333
         5         5       462        0.0083333333333331

        10         0         1        0.0000002755731922
        10         1        12        0.0000002755731922
        10         2        78        0.0000002755731922
        10         3       364        0.0000002755731922
        10         4      1365        0.0000002755731922
        10         5      4368        0.0000002755731922

GM_UNIT_RULE_SET_TEST03
  GM_UNIT_RULE_SET determines the weights and abscissas
  of a Grundmann-Moeller quadrature rule for
  the M dimensional unit simplex,
  using a rule of index RULE,
  which will have degree of exactness 2*RULE+1.

  In this test, we write a rule to a file.


  Here we use M = 3
  RULE = 2
  DEGREE = 5

  Wrote rule 2 to "gm2_3d_w.txt" and "gm2_3d_x.txt".

GM_UNIT_RULE_SET_TEST04
  GM_UNIT_RULE_SET determines the weights and abscissas
  of a Grundmann-Moeller quadrature rule for
  the M dimensional unit simplex,
  using a rule of index RULE,
  which will have degree of exactness 2*RULE+1.

  In this test, look at all the monomials up to
  some maximum degree, choose a few low order rules
  and determine the quadrature error for each.

  Here we use M = 5

      Rule     Order     Quad_Error


  F(X) = X1^0 * X2^0 * X3^0 * X4^0 * X5^0

         0         1    0.000000e+00
         1         7    2.220446e-16
         2        28    2.220446e-16
         3        84    2.220446e-16

  F(X) = X1^1 * X2^0 * X3^0 * X4^0 * X5^0

         0         1    1.110223e-16
         1         7    3.330669e-16
         2        28    2.220446e-16
         3        84    4.440892e-16

  F(X) = X1^0 * X2^1 * X3^0 * X4^0 * X5^0

         0         1    1.110223e-16
         1         7    3.330669e-16
         2        28    4.440892e-16
         3        84    3.330669e-16

  F(X) = X1^0 * X2^0 * X3^1 * X4^0 * X5^0

         0         1    1.110223e-16
         1         7    3.330669e-16
         2        28    2.220446e-16
         3        84    4.440892e-16

  F(X) = X1^0 * X2^0 * X3^0 * X4^1 * X5^0

         0         1    1.110223e-16
         1         7    3.330669e-16
         2        28    2.220446e-16
         3        84    0.000000e+00

  F(X) = X1^0 * X2^0 * X3^0 * X4^0 * X5^1

         0         1    1.110223e-16
         1         7    0.000000e+00
         2        28    1.332268e-15
         3        84    2.220446e-16

  F(X) = X1^2 * X2^0 * X3^0 * X4^0 * X5^0

         0         1    4.166667e-01
         1         7    4.440892e-16
         2        28    2.220446e-15
         3        84    0.000000e+00

  F(X) = X1^1 * X2^1 * X3^0 * X4^0 * X5^0

         0         1    1.666667e-01
         1         7    0.000000e+00
         2        28    1.332268e-15
         3        84    4.440892e-16

  F(X) = X1^0 * X2^2 * X3^0 * X4^0 * X5^0

         0         1    4.166667e-01
         1         7    2.220446e-16
         2        28    2.220446e-15
         3        84    0.000000e+00

  F(X) = X1^1 * X2^0 * X3^1 * X4^0 * X5^0

         0         1    1.666667e-01
         1         7    0.000000e+00
         2        28    1.332268e-15
         3        84    4.440892e-16

  F(X) = X1^0 * X2^1 * X3^1 * X4^0 * X5^0

         0         1    1.666667e-01
         1         7    0.000000e+00
         2        28    1.554312e-15
         3        84    1.110223e-16

  F(X) = X1^0 * X2^0 * X3^2 * X4^0 * X5^0

         0         1    4.166667e-01
         1         7    2.220446e-16
         2        28    2.664535e-15
         3        84    8.881784e-16

  F(X) = X1^1 * X2^0 * X3^0 * X4^1 * X5^0

         0         1    1.666667e-01
         1         7    0.000000e+00
         2        28    1.332268e-15
         3        84    6.661338e-16

  F(X) = X1^0 * X2^1 * X3^0 * X4^1 * X5^0

         0         1    1.666667e-01
         1         7    0.000000e+00
         2        28    1.554312e-15
         3        84    6.661338e-16

  F(X) = X1^0 * X2^0 * X3^1 * X4^1 * X5^0

         0         1    1.666667e-01
         1         7    0.000000e+00
         2        28    1.998401e-15
         3        84    1.110223e-16

  F(X) = X1^0 * X2^0 * X3^0 * X4^2 * X5^0

         0         1    4.166667e-01
         1         7    1.110223e-16
         2        28    2.442491e-15
         3        84    1.110223e-15

  F(X) = X1^1 * X2^0 * X3^0 * X4^0 * X5^1

         0         1    1.666667e-01
         1         7    0.000000e+00
         2        28    6.661338e-16
         3        84    1.110223e-16

  F(X) = X1^0 * X2^1 * X3^0 * X4^0 * X5^1

         0         1    1.666667e-01
         1         7    0.000000e+00
         2        28    1.554312e-15
         3        84    6.661338e-16

  F(X) = X1^0 * X2^0 * X3^1 * X4^0 * X5^1

         0         1    1.666667e-01
         1         7    0.000000e+00
         2        28    1.776357e-15
         3        84    6.661338e-16

  F(X) = X1^0 * X2^0 * X3^0 * X4^1 * X5^1

         0         1    1.666667e-01
         1         7    0.000000e+00
         2        28    1.998401e-15
         3        84    4.440892e-16

  F(X) = X1^0 * X2^0 * X3^0 * X4^0 * X5^2

         0         1    4.166667e-01
         1         7    1.110223e-16
         2        28    1.332268e-15
         3        84    0.000000e+00

  F(X) = X1^3 * X2^0 * X3^0 * X4^0 * X5^0

         0         1    7.407407e-01
         1         7    2.220446e-16
         2        28    0.000000e+00
         3        84    1.776357e-15

  F(X) = X1^2 * X2^1 * X3^0 * X4^0 * X5^0

         0         1    2.222222e-01
         1         7    2.220446e-16
         2        28    2.220446e-16
         3        84    4.440892e-16

  F(X) = X1^1 * X2^2 * X3^0 * X4^0 * X5^0

         0         1    2.222222e-01
         1         7    0.000000e+00
         2        28    4.440892e-16
         3        84    0.000000e+00

  F(X) = X1^0 * X2^3 * X3^0 * X4^0 * X5^0

         0         1    7.407407e-01
         1         7    2.220446e-16
         2        28    2.220446e-16
         3        84    1.554312e-15

  F(X) = X1^2 * X2^0 * X3^1 * X4^0 * X5^0

         0         1    2.222222e-01
         1         7    2.220446e-16
         2        28    2.220446e-16
         3        84    1.554312e-15

  F(X) = X1^1 * X2^1 * X3^1 * X4^0 * X5^0

         0         1    5.555556e-01
         1         7    2.220446e-16
         2        28    1.554312e-15
         3        84    5.551115e-16

  F(X) = X1^0 * X2^2 * X3^1 * X4^0 * X5^0

         0         1    2.222222e-01
         1         7    0.000000e+00
         2        28    2.220446e-16
         3        84    5.551115e-16

  F(X) = X1^1 * X2^0 * X3^2 * X4^0 * X5^0

         0         1    2.222222e-01
         1         7    0.000000e+00
         2        28    4.440892e-16
         3        84    4.440892e-16

  F(X) = X1^0 * X2^1 * X3^2 * X4^0 * X5^0

         0         1    2.222222e-01
         1         7    0.000000e+00
         2        28    0.000000e+00
         3        84    2.220446e-16

  F(X) = X1^0 * X2^0 * X3^3 * X4^0 * X5^0

         0         1    7.407407e-01
         1         7    0.000000e+00
         2        28    3.330669e-16
         3        84    1.110223e-15

  F(X) = X1^2 * X2^0 * X3^0 * X4^1 * X5^0

         0         1    2.222222e-01
         1         7    2.220446e-16
         2        28    4.440892e-16
         3        84    4.440892e-16

  F(X) = X1^1 * X2^1 * X3^0 * X4^1 * X5^0

         0         1    5.555556e-01
         1         7    2.220446e-16
         2        28    1.332268e-15
         3        84    7.771561e-16

  F(X) = X1^0 * X2^2 * X3^0 * X4^1 * X5^0

         0         1    2.222222e-01
         1         7    0.000000e+00
         2        28    4.440892e-16
         3        84    5.551115e-16

  F(X) = X1^1 * X2^0 * X3^1 * X4^1 * X5^0

         0         1    5.555556e-01
         1         7    2.220446e-16
         2        28    1.554312e-15
         3        84    1.110223e-15

  F(X) = X1^0 * X2^1 * X3^1 * X4^1 * X5^0

         0         1    5.555556e-01
         1         7    2.220446e-16
         2        28    1.554312e-15
         3        84    5.551115e-16

  F(X) = X1^0 * X2^0 * X3^2 * X4^1 * X5^0

         0         1    2.222222e-01
         1         7    0.000000e+00
         2        28    8.881784e-16
         3        84    0.000000e+00

  F(X) = X1^1 * X2^0 * X3^0 * X4^2 * X5^0

         0         1    2.222222e-01
         1         7    0.000000e+00
         2        28    6.661338e-16
         3        84    6.661338e-16

  F(X) = X1^0 * X2^1 * X3^0 * X4^2 * X5^0

         0         1    2.222222e-01
         1         7    0.000000e+00
         2        28    1.332268e-15
         3        84    2.220446e-16

  F(X) = X1^0 * X2^0 * X3^1 * X4^2 * X5^0

         0         1    2.222222e-01
         1         7    0.000000e+00
         2        28    6.661338e-16
         3        84    1.110223e-16

  F(X) = X1^0 * X2^0 * X3^0 * X4^3 * X5^0

         0         1    7.407407e-01
         1         7    0.000000e+00
         2        28    5.551115e-16
         3        84    1.998401e-15

  F(X) = X1^2 * X2^0 * X3^0 * X4^0 * X5^1

         0         1    2.222222e-01
         1         7    2.220446e-16
         2        28    4.440892e-16
         3        84    0.000000e+00

  F(X) = X1^1 * X2^1 * X3^0 * X4^0 * X5^1

         0         1    5.555556e-01
         1         7    2.220446e-16
         2        28    1.332268e-15
         3        84    5.551115e-16

  F(X) = X1^0 * X2^2 * X3^0 * X4^0 * X5^1

         0         1    2.222222e-01
         1         7    0.000000e+00
         2        28    4.440892e-16
         3        84    2.220446e-16

  F(X) = X1^1 * X2^0 * X3^1 * X4^0 * X5^1

         0         1    5.555556e-01
         1         7    2.220446e-16
         2        28    1.554312e-15
         3        84    7.771561e-16

  F(X) = X1^0 * X2^1 * X3^1 * X4^0 * X5^1

         0         1    5.555556e-01
         1         7    2.220446e-16
         2        28    1.554312e-15
         3        84    1.110223e-15

  F(X) = X1^0 * X2^0 * X3^2 * X4^0 * X5^1

         0         1    2.222222e-01
         1         7    0.000000e+00
         2        28    4.440892e-16
         3        84    2.220446e-16

  F(X) = X1^1 * X2^0 * X3^0 * X4^1 * X5^1

         0         1    5.555556e-01
         1         7    2.220446e-16
         2        28    1.998401e-15
         3        84    5.551115e-16

  F(X) = X1^0 * X2^1 * X3^0 * X4^1 * X5^1

         0         1    5.555556e-01
         1         7    2.220446e-16
         2        28    1.998401e-15
         3        84    1.110223e-15

  F(X) = X1^0 * X2^0 * X3^1 * X4^1 * X5^1

         0         1    5.555556e-01
         1         7    2.220446e-16
         2        28    1.998401e-15
         3        84    7.771561e-16

  F(X) = X1^0 * X2^0 * X3^0 * X4^2 * X5^1

         0         1    2.222222e-01
         1         7    2.220446e-16
         2        28    4.440892e-16
         3        84    2.220446e-16

  F(X) = X1^1 * X2^0 * X3^0 * X4^0 * X5^2

         0         1    2.222222e-01
         1         7    2.220446e-16
         2        28    8.881784e-16
         3        84    2.220446e-16

  F(X) = X1^0 * X2^1 * X3^0 * X4^0 * X5^2

         0         1    2.222222e-01
         1         7    2.220446e-16
         2        28    1.332268e-15
         3        84    6.661338e-16

  F(X) = X1^0 * X2^0 * X3^1 * X4^0 * X5^2

         0         1    2.222222e-01
         1         7    2.220446e-16
         2        28    8.881784e-16
         3        84    0.000000e+00

  F(X) = X1^0 * X2^0 * X3^0 * X4^1 * X5^2

         0         1    2.222222e-01
         1         7    2.220446e-16
         2        28    1.110223e-15
         3        84    1.332268e-15

  F(X) = X1^0 * X2^0 * X3^0 * X4^0 * X5^3

         0         1    7.407407e-01
         1         7    0.000000e+00
         2        28    3.330669e-16
         3        84    1.332268e-15

  F(X) = X1^4 * X2^0 * X3^0 * X4^0 * X5^0

         0         1    9.027778e-01
         1         7    1.171875e-01
         2        28    4.440892e-16
         3        84    8.881784e-16

  F(X) = X1^3 * X2^1 * X3^0 * X4^0 * X5^0

         0         1    6.111111e-01
         1         7    9.375000e-02
         2        28    2.220446e-16
         3        84    1.332268e-15

  F(X) = X1^2 * X2^2 * X3^0 * X4^0 * X5^0

         0         1    4.166667e-01
         1         7    2.031250e-01
         2        28    8.881784e-16
         3        84    1.110223e-16

  F(X) = X1^1 * X2^3 * X3^0 * X4^0 * X5^0

         0         1    6.111111e-01
         1         7    9.375000e-02
         2        28    2.220446e-16
         3        84    1.110223e-15

  F(X) = X1^0 * X2^4 * X3^0 * X4^0 * X5^0

         0         1    9.027778e-01
         1         7    1.171875e-01
         2        28    6.661338e-16
         3        84    1.110223e-15

  F(X) = X1^3 * X2^0 * X3^1 * X4^0 * X5^0

         0         1    6.111111e-01
         1         7    9.375000e-02
         2        28    0.000000e+00
         3        84    1.110223e-15

  F(X) = X1^2 * X2^1 * X3^1 * X4^0 * X5^0

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    4.440892e-16
         3        84    1.221245e-15

  F(X) = X1^1 * X2^2 * X3^1 * X4^0 * X5^0

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    6.661338e-16
         3        84    4.440892e-16

  F(X) = X1^0 * X2^3 * X3^1 * X4^0 * X5^0

         0         1    6.111111e-01
         1         7    9.375000e-02
         2        28    2.220446e-16
         3        84    1.110223e-15

  F(X) = X1^2 * X2^0 * X3^2 * X4^0 * X5^0

         0         1    4.166667e-01
         1         7    2.031250e-01
         2        28    8.881784e-16
         3        84    1.110223e-16

  F(X) = X1^1 * X2^1 * X3^2 * X4^0 * X5^0

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    4.440892e-16
         3        84    6.661338e-16

  F(X) = X1^0 * X2^2 * X3^2 * X4^0 * X5^0

         0         1    4.166667e-01
         1         7    2.031250e-01
         2        28    6.661338e-16
         3        84    4.440892e-16

  F(X) = X1^1 * X2^0 * X3^3 * X4^0 * X5^0

         0         1    6.111111e-01
         1         7    9.375000e-02
         2        28    7.771561e-16
         3        84    1.554312e-15

  F(X) = X1^0 * X2^1 * X3^3 * X4^0 * X5^0

         0         1    6.111111e-01
         1         7    9.375000e-02
         2        28    4.440892e-16
         3        84    1.332268e-15

  F(X) = X1^0 * X2^0 * X3^4 * X4^0 * X5^0

         0         1    9.027778e-01
         1         7    1.171875e-01
         2        28    8.881784e-16
         3        84    1.110223e-15

  F(X) = X1^3 * X2^0 * X3^0 * X4^1 * X5^0

         0         1    6.111111e-01
         1         7    9.375000e-02
         2        28    0.000000e+00
         3        84    8.881784e-16

  F(X) = X1^2 * X2^1 * X3^0 * X4^1 * X5^0

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    4.440892e-16
         3        84    8.881784e-16

  F(X) = X1^1 * X2^2 * X3^0 * X4^1 * X5^0

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    6.661338e-16
         3        84    4.440892e-16

  F(X) = X1^0 * X2^3 * X3^0 * X4^1 * X5^0

         0         1    6.111111e-01
         1         7    9.375000e-02
         2        28    2.220446e-16
         3        84    6.661338e-16

  F(X) = X1^2 * X2^0 * X3^1 * X4^1 * X5^0

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    6.661338e-16
         3        84    7.771561e-16

  F(X) = X1^1 * X2^1 * X3^1 * X4^1 * X5^0

         0         1    1.333333e+00
         1         7    6.250000e-02
         2        28    0.000000e+00
         3        84    1.887379e-15

  F(X) = X1^0 * X2^2 * X3^1 * X4^1 * X5^0

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    6.661338e-16
         3        84    4.440892e-16

  F(X) = X1^1 * X2^0 * X3^2 * X4^1 * X5^0

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    8.881784e-16
         3        84    8.881784e-16

  F(X) = X1^0 * X2^1 * X3^2 * X4^1 * X5^0

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    2.220446e-16
         3        84    6.661338e-16

  F(X) = X1^0 * X2^0 * X3^3 * X4^1 * X5^0

         0         1    6.111111e-01
         1         7    9.375000e-02
         2        28    4.440892e-16
         3        84    1.110223e-15

  F(X) = X1^2 * X2^0 * X3^0 * X4^2 * X5^0

         0         1    4.166667e-01
         1         7    2.031250e-01
         2        28    8.881784e-16
         3        84    4.440892e-16

  F(X) = X1^1 * X2^1 * X3^0 * X4^2 * X5^0

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    6.661338e-16
         3        84    3.330669e-16

  F(X) = X1^0 * X2^2 * X3^0 * X4^2 * X5^0

         0         1    4.166667e-01
         1         7    2.031250e-01
         2        28    0.000000e+00
         3        84    4.440892e-16

  F(X) = X1^1 * X2^0 * X3^1 * X4^2 * X5^0

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    8.881784e-16
         3        84    0.000000e+00

  F(X) = X1^0 * X2^1 * X3^1 * X4^2 * X5^0

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    2.220446e-16
         3        84    0.000000e+00

  F(X) = X1^0 * X2^0 * X3^2 * X4^2 * X5^0

         0         1    4.166667e-01
         1         7    2.031250e-01
         2        28    2.220446e-16
         3        84    4.440892e-16

  F(X) = X1^1 * X2^0 * X3^0 * X4^3 * X5^0

         0         1    6.111111e-01
         1         7    9.375000e-02
         2        28    6.661338e-16
         3        84    1.332268e-15

  F(X) = X1^0 * X2^1 * X3^0 * X4^3 * X5^0

         0         1    6.111111e-01
         1         7    9.375000e-02
         2        28    6.661338e-16
         3        84    1.332268e-15

  F(X) = X1^0 * X2^0 * X3^1 * X4^3 * X5^0

         0         1    6.111111e-01
         1         7    9.375000e-02
         2        28    6.661338e-16
         3        84    1.332268e-15

  F(X) = X1^0 * X2^0 * X3^0 * X4^4 * X5^0

         0         1    9.027778e-01
         1         7    1.171875e-01
         2        28    1.110223e-15
         3        84    1.332268e-15

  F(X) = X1^3 * X2^0 * X3^0 * X4^0 * X5^1

         0         1    6.111111e-01
         1         7    9.375000e-02
         2        28    8.881784e-16
         3        84    4.440892e-16

  F(X) = X1^2 * X2^1 * X3^0 * X4^0 * X5^1

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    1.110223e-15
         3        84    1.110223e-15

  F(X) = X1^1 * X2^2 * X3^0 * X4^0 * X5^1

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    6.661338e-16
         3        84    3.330669e-16

  F(X) = X1^0 * X2^3 * X3^0 * X4^0 * X5^1

         0         1    6.111111e-01
         1         7    9.375000e-02
         2        28    2.220446e-16
         3        84    1.110223e-15

  F(X) = X1^2 * X2^0 * X3^1 * X4^0 * X5^1

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    1.332268e-15
         3        84    4.440892e-16

  F(X) = X1^1 * X2^1 * X3^1 * X4^0 * X5^1

         0         1    1.333333e+00
         1         7    6.250000e-02
         2        28    1.332268e-15
         3        84    1.221245e-15

  F(X) = X1^0 * X2^2 * X3^1 * X4^0 * X5^1

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    1.332268e-15
         3        84    6.661338e-16

  F(X) = X1^1 * X2^0 * X3^2 * X4^0 * X5^1

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    8.881784e-16
         3        84    7.771561e-16

  F(X) = X1^0 * X2^1 * X3^2 * X4^0 * X5^1

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    1.554312e-15
         3        84    7.771561e-16

  F(X) = X1^0 * X2^0 * X3^3 * X4^0 * X5^1

         0         1    6.111111e-01
         1         7    9.375000e-02
         2        28    4.440892e-16
         3        84    1.110223e-15

  F(X) = X1^2 * X2^0 * X3^0 * X4^1 * X5^1

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    1.332268e-15
         3        84    3.330669e-16

  F(X) = X1^1 * X2^1 * X3^0 * X4^1 * X5^1

         0         1    1.333333e+00
         1         7    6.250000e-02
         2        28    1.332268e-15
         3        84    1.887379e-15

  F(X) = X1^0 * X2^2 * X3^0 * X4^1 * X5^1

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    1.332268e-15
         3        84    6.661338e-16

  F(X) = X1^1 * X2^0 * X3^1 * X4^1 * X5^1

         0         1    1.333333e+00
         1         7    6.250000e-02
         2        28    1.554312e-15
         3        84    1.221245e-15

  F(X) = X1^0 * X2^1 * X3^1 * X4^1 * X5^1

         0         1    1.333333e+00
         1         7    6.250000e-02
         2        28    1.554312e-15
         3        84    1.887379e-15

  F(X) = X1^0 * X2^0 * X3^2 * X4^1 * X5^1

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    1.332268e-15
         3        84    6.661338e-16

  F(X) = X1^1 * X2^0 * X3^0 * X4^2 * X5^1

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    1.110223e-15
         3        84    6.661338e-16

  F(X) = X1^0 * X2^1 * X3^0 * X4^2 * X5^1

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    1.776357e-15
         3        84    8.881784e-16

  F(X) = X1^0 * X2^0 * X3^1 * X4^2 * X5^1

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    1.110223e-15
         3        84    3.330669e-16

  F(X) = X1^0 * X2^0 * X3^0 * X4^3 * X5^1

         0         1    6.111111e-01
         1         7    9.375000e-02
         2        28    2.220446e-16
         3        84    1.332268e-15

  F(X) = X1^2 * X2^0 * X3^0 * X4^0 * X5^2

         0         1    4.166667e-01
         1         7    2.031250e-01
         2        28    8.881784e-16
         3        84    0.000000e+00

  F(X) = X1^1 * X2^1 * X3^0 * X4^0 * X5^2

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    1.998401e-15
         3        84    3.330669e-16

  F(X) = X1^0 * X2^2 * X3^0 * X4^0 * X5^2

         0         1    4.166667e-01
         1         7    2.031250e-01
         2        28    6.661338e-16
         3        84    4.440892e-16

  F(X) = X1^1 * X2^0 * X3^1 * X4^0 * X5^2

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    2.220446e-15
         3        84    4.440892e-16

  F(X) = X1^0 * X2^1 * X3^1 * X4^0 * X5^2

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    1.776357e-15
         3        84    3.330669e-16

  F(X) = X1^0 * X2^0 * X3^2 * X4^0 * X5^2

         0         1    4.166667e-01
         1         7    2.031250e-01
         2        28    2.220446e-16
         3        84    1.110223e-16

  F(X) = X1^1 * X2^0 * X3^0 * X4^1 * X5^2

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    2.220446e-15
         3        84    0.000000e+00

  F(X) = X1^0 * X2^1 * X3^0 * X4^1 * X5^2

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    1.776357e-15
         3        84    0.000000e+00

  F(X) = X1^0 * X2^0 * X3^1 * X4^1 * X5^2

         0         1    1.666667e-01
         1         7    3.125000e-02
         2        28    2.220446e-15
         3        84    0.000000e+00

  F(X) = X1^0 * X2^0 * X3^0 * X4^2 * X5^2

         0         1    4.166667e-01
         1         7    2.031250e-01
         2        28    0.000000e+00
         3        84    1.110223e-16

  F(X) = X1^1 * X2^0 * X3^0 * X4^0 * X5^3

         0         1    6.111111e-01
         1         7    9.375000e-02
         2        28    4.440892e-16
         3        84    1.554312e-15

  F(X) = X1^0 * X2^1 * X3^0 * X4^0 * X5^3

         0         1    6.111111e-01
         1         7    9.375000e-02
         2        28    4.440892e-16
         3        84    1.554312e-15

  F(X) = X1^0 * X2^0 * X3^1 * X4^0 * X5^3

         0         1    6.111111e-01
         1         7    9.375000e-02
         2        28    4.440892e-16
         3        84    1.776357e-15

  F(X) = X1^0 * X2^0 * X3^0 * X4^1 * X5^3

         0         1    6.111111e-01
         1         7    9.375000e-02
         2        28    4.440892e-16
         3        84    1.110223e-15

  F(X) = X1^0 * X2^0 * X3^0 * X4^0 * X5^4

         0         1    9.027778e-01
         1         7    1.171875e-01
         2        28    1.332268e-15
         3        84    2.220446e-16

GM_UNIT_RULE_SET_TEST05
  GM_UNIT_RULE_SET determines the weights and abscissas
  of a Grundmann-Moeller quadrature rule for
  the M dimensional unit simplex,
  using a rule of index RULE,
  which will have degree of exactness 2*RULE+1.
  In this test, look at all the monomials up to
  some maximum degree, choose a few low order rules
  and determine the quadrature error for each.

  Simplex volume = 0.166667

         N        1               X               Y               Z               X^2              XY             XZ              Y^2             YZ               Z^2

         1        0.166667       0.0416667       0.0416667       0.0416667       0.0104167       0.0104167       0.0104167       0.0104167       0.0104167       0.0104167
         5        0.166667       0.0416667       0.0416667       0.0416667       0.0166667      0.00833333      0.00833333       0.0166667      0.00833333       0.0166667
        15        0.166667       0.0416667       0.0416667       0.0416667       0.0166667      0.00833333      0.00833333       0.0166667      0.00833333       0.0166667
        35        0.166667       0.0416667       0.0416667       0.0416667       0.0166667      0.00833333      0.00833333       0.0166667      0.00833333       0.0166667
        70        0.166667       0.0416667       0.0416667       0.0416667       0.0166667      0.00833333      0.00833333       0.0166667      0.00833333       0.0166667
       126        0.166667       0.0416667       0.0416667       0.0416667       0.0166667      0.00833333      0.00833333       0.0166667      0.00833333       0.0166667

I4_CHOOSE_TEST
  Python version: 3.6.9
  I4_CHOOSE evaluates C(N,K).

       N       K     CNK

       0       0       1

       1       0       1
       1       1       1

       2       0       1
       2       1       2
       2       2       1

       3       0       1
       3       1       3
       3       2       3
       3       3       1

       4       0       1
       4       1       4
       4       2       6
       4       3       4
       4       4       1

I4_CHOOSE_TEST:
  Normal end of execution.

MONOMIAL_VALUE_TEST
  Python version: 3.6.9
  Use monomial_value() to evaluate some monomials
  in dimensions 1 through 3.

  Spatial dimension M =  1

  Exponents:
      -1

   V(X)               X(0)

      0.111111      9.0000
         0.125      8.0000
           0.2      5.0000
      0.333333      3.0000
            -1     -1.0000

  Spatial dimension M =  2

  Exponents:
      -1      -2

   V(X)               X(0)      X(1)

    -0.0277778     -1.0000    6.0000
     -0.111111     -1.0000    3.0000
    0.00680272      3.0000    7.0000
       0.03125      8.0000   -2.0000
     0.0277778      9.0000    2.0000

  Spatial dimension M =  3

  Exponents:
      -3      -3       5

   V(X)               X(0)      X(1)      X(2)

        0.0625      8.0000   -1.0000   -2.0000
   -0.00137174      1.0000    9.0000   -1.0000
   0.000244141      2.0000    8.0000    1.0000
       1.21363      6.0000    5.0000    8.0000
      0.158766      3.0000    9.0000    5.0000

MONOMIAL_VALUE_TEST
  Normal end of execution.

SIMPLEX_UNIT_MONOMIAL_INTEGRAL_TEST
  Python version: 3.6.9
  Estimate monomial integrals using Monte Carlo
  over the interior of the unit simplex in M dimensions.

  Number of sample points used is 4192

  We randomly choose the exponents.

  Ex  Ey  Ez     MC-Estimate      Exact           Error

   4   0   1     0.000596497     0.000595238     1.3e-06
   2   1   4     1.21848e-05     1.32275e-05       1e-06
   4   1   2      1.3095e-05     1.32275e-05     1.3e-07
   0   4   2     0.000133047     0.000132275     7.7e-07
   0   0   3      0.00828332      0.00833333       5e-05
   1   3   4     3.44193e-06      3.6075e-06     1.7e-07
   0   1   0       0.0416317       0.0416667     3.5e-05
   2   3   2     6.43774e-06     6.61376e-06     1.8e-07
   3   1   0      0.00123659      0.00119048     4.6e-05
   4   4   1     1.22501e-06      1.2025e-06     2.3e-08
   4   2   4     1.71043e-07        1.85e-07     1.4e-08
   1   1   4     6.22057e-05     6.61376e-05     3.9e-06
   3   0   2     0.000283257     0.000297619     1.4e-05
   4   2   0     0.000138185     0.000132275     5.9e-06
   3   0   0      0.00855041      0.00833333     0.00022
   4   1   0     0.000628507     0.000595238     3.3e-05
   4   2   1     1.37709e-05     1.32275e-05     5.4e-07
   1   3   0      0.00118823      0.00119048     2.2e-06
   1   4   4     1.17146e-06      1.2025e-06     3.1e-08
   0   1   1      0.00827531      0.00833333     5.8e-05

SIMPLEX_UNIT_MONOMIAL_INTEGRAL_TEST:
  Normal end of execution.

SIMPLEX_UNIT_TO_GENERAL_TEST01
  SIMPLEX_UNIT_TO_GENERAL
  maps points in the unit simplex to a general simplex.

  Here we consider a simplex in 2D, a triangle.

  The vertices of the general triangle are:

    1.0000    1.0000
    3.0000    1.0000
    2.0000    5.0000

   (  XSI     ETA )   ( X       Y  )

    0.0000    0.0000    1.0000    1.0000
    1.0000    0.0000    3.0000    1.0000
    0.0000    1.0000    2.0000    5.0000
    0.8679    0.0255    2.7613    1.1019
    0.1383    0.2106    1.4872    1.8425
    0.2027    0.3299    1.7353    2.3197
    0.1128    0.6893    1.9149    3.7572
    0.6425    0.1981    2.4831    1.7923
    0.8450    0.0145    2.7044    1.0580
    0.3465    0.6312    2.3242    3.5247
    0.0242    0.2926    1.3410    2.1704
    0.3726    0.0254    1.7706    1.1014
    0.4083    0.0761    1.8926    1.3046

SIMPLEX_UNIT_TO_GENERAL_TEST02
  SIMPLEX_UNIT_TO_GENERAL
  maps points in the unit simplex to a general simplex.

  Here we consider a simplex in 3D, a tetrahedron.

  The vertices of the general tetrahedron are:

    1.0000    1.0000    1.0000
    3.0000    1.0000    1.0000
    1.0000    4.0000    1.0000
    1.0000    1.0000    5.0000

   (  XSI     ETA )   ( X       Y  )

    0.0000    0.0000    0.0000    1.0000    1.0000    1.0000
    1.0000    0.0000    0.0000    3.0000    1.0000    1.0000
    0.0000    1.0000    0.0000    1.0000    4.0000    1.0000
    0.0000    0.0000    1.0000    1.0000    1.0000    5.0000
    0.6530    0.0192    0.0802    2.3060    1.0575    1.3209
    0.1227    0.3794    0.1895    1.2455    2.1383    1.7579
    0.4363    0.0636    0.3885    1.8726    1.1908    2.5542
    0.1183    0.0365    0.0293    1.2365    1.1094    1.1174
    0.0138    0.1341    0.3020    1.0277    1.4024    2.2079
    0.0208    0.0237    0.2865    1.0415    1.0711    2.1460
    0.2890    0.0197    0.4669    1.5780    1.0590    2.8677
    0.0792    0.5366    0.1496    1.1585    2.6099    1.5985
    0.0966    0.5111    0.0596    1.1933    2.5332    1.2384
    0.3663    0.0599    0.2031    1.7327    1.1797    1.8125

SIMPLEX_UNIT_SAMPLE_TEST
  Python version: 3.6.9
  SIMPLEX_UNIT_SAMPLE samples the unit simplex in M dimensions.

  Sample points in the unit simplex.

  Row: 
      0             1             2       
  Col
      0 :    0.653014     0.0191719     0.0802331  
      1 :    0.122743      0.379417      0.189469  
      2 :    0.436322     0.0635846      0.388548  
      3 :    0.118269     0.0364603      0.029345  
      4 :   0.0138444      0.134129      0.301972  
      5 :   0.0207729     0.0237097      0.286511  
      6 :    0.288996     0.0196653      0.466915  
      7 :   0.0792463      0.536617      0.149631  
      8 :   0.0966452       0.51108     0.0596006  
      9 :    0.366347     0.0599075      0.203121  

SIMPLEX_UNIT_SAMPLE_TEST
  Normal end of execution.

SIMPLEX_UNIT_VOLUME_TEST
  Python version: 3.6.9
  SIMPLEX_UNIT_VOLUME returns the volume of the unit simplex
  in M dimensions.

   M   Volume

   1  1
   2  0.5
   3  0.166667
   4  0.0416667
   5  0.00833333
   6  0.00138889
   7  0.000198413
   8  2.48016e-05
   9  2.75573e-06

SIMPLEX_UNIT_VOLUME_TEST
  Normal end of execution.

SIMPLEX_GM_RULE_TEST
  Normal end of execution.
Mon Feb  3 07:59:24 2020
