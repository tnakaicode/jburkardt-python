Fri Jan 24 08:32:15 2020

FN_TEST
  Python version: 2.7.17
  Test the FN library.

AIRY_AI_VALUES_TEST:
  Python version: 2.7.17
  AIRY_AI_VALUES stores values of
  the Airy function Ai(x).

      X           Ai(X)

      0.000000        0.3550280538878172
      0.100000        0.3292031299435381
      0.200000        0.3037031542863820
      0.300000        0.2788064819550049
      0.400000        0.2547423542956763
      0.500000        0.2316936064808335
      0.600000        0.2098000616663795
      0.700000        0.1891624003981501
      0.800000        0.1698463174443649
      0.900000        0.1518868036405444
      1.000000        0.1352924163128814

AIRY_AI_VALUES_TEST:
  Normal end of execution.

AIRY_AI_PRIME_VALUES_TEST:
  Python version: 2.7.17
  AIRY_AI_PRIME_VALUES stores values of
  the derivative of the Airy Ai function.

      X           FX

      0.000000       -0.2588194037928068
      0.100000       -0.2571304219075862
      0.200000       -0.2524054702856195
      0.300000       -0.2451463642190548
      0.400000       -0.2358320344192082
      0.500000       -0.2249105326646839
      0.600000       -0.2127932593891585
      0.700000       -0.1998511915822805
      0.800000       -0.1864128638072717
      0.900000       -0.1727638434616347
      1.000000       -0.1591474412967932

AIRY_AI_PRIME_VALUES_TEST:
  Normal end of execution.

AIRY_BI_VALUES_TEST:
  Python version: 2.7.17
  AIRY_BI_VALUES stores values of
  the Airy function Bi(x).

      X           Bi(X)

      0.000000        0.6149266274460007
      0.100000        0.6598616901941892
      0.200000        0.7054642029186612
      0.300000        0.7524855850873156
      0.400000        0.8017730000135972
      0.500000        0.8542770431031556
      0.600000        0.9110633416949405
      0.700000        0.9733286558781659
      0.800000        1.0424221712315609
      0.900000        1.1198728131344471
      1.000000        1.2074235949528711

AIRY_BI_VALUES_TEST:
  Normal end of execution.

AIRY_BI_PRIME_VALUES_TEST:
  Python version: 2.7.17
  AIRY_BI_PRIME_VALUES stores values of
  the derivative of the Airy Bi function.

      X           FX

      0.000000        0.4482883573538264
      0.100000        0.4515126311496465
      0.200000        0.4617892843621509
      0.300000        0.4800490287524480
      0.400000        0.5072816760506224
      0.500000        0.5445725641405923
      0.600000        0.5931444786342857
      0.700000        0.6544059191721400
      0.800000        0.7300069016152518
      0.900000        0.8219038903072090
      1.000000        0.9324359333927756

AIRY_BI_PRIME_VALUES_TEST:
  Normal end of execution.

ARCCOS_VALUES_TEST:
  Python version: 2.7.17
  ARCCOS_VALUES stores values of
  the arc cosine function.

        X               F(X)

     -0.100000         1.670963747956457
      0.000000         1.570796326794897
      0.100000         1.470628905633337
      0.200000         1.369438406004566
      0.300000         1.266103672779499
      0.400000         1.159279480727408
      0.500000         1.047197551196598
      0.600000        0.9272952180016122
      0.700000        0.7953988301841436
      0.800000        0.6435011087932844
      0.900000        0.4510268117962624
      1.000000                         0

ARCCOS_VALUES_TEST:
  Normal end of execution.

ARCCOSH_VALUES_TEST:
  Python version: 2.7.17
  ARCCOSH_VALUES stores values of
  the hyperbolic arc cosine function.

        X               F(X)

      1.000000                         0
      1.010000        0.1413037694856486
      1.100000        0.4435682543851152
      1.200000        0.6223625037147786
      1.300000        0.7564329108569596
      1.400000        0.8670147264905651
      1.500000        0.9624236501192069
      2.000000         1.316957896924817
      3.000000         1.762747174039086
      3.141593         1.811526272460853
      4.000000          2.06343706889556
      5.000000         2.292431669561178
     10.000000         2.993222846126381
    100.000000         5.298292365610485
   1000.000000         7.600902209541989

ARCCOSH_VALUES_TEST:
  Normal end of execution.

ARCSIN_VALUES_TEST:
  Python version: 2.7.17
  ARCSIN_VALUES stores values of
  the arc sine function.

        X               F(X)

     -0.100000       -0.1001674211615598
      0.000000                         0
      0.100000        0.1001674211615598
      0.200000        0.2013579207903308
      0.300000        0.3046926540153975
      0.400000         0.411516846067488
      0.500000        0.5235987755982989
      0.600000        0.6435011087932844
      0.700000        0.7753974966107531
      0.800000        0.9272952180016122
      0.900000         1.119769514998634
      1.000000         1.570796326794897

ARCSIN_VALUES_TEST:
  Normal end of execution.

ARCSINH_VALUES_TEST:
  Python version: 2.7.17
  ARCSINH_VALUES stores values of
  the hyperbolic arc sine function.

        X               F(X)

     -5.000000        -2.312438341272752
     -1.000000        -0.881373587019543
      0.000000                         0
      0.100000       0.09983407889920756
      0.200000        0.1986901103492414
      0.300000        0.2956730475634224
      0.400000        0.3900353197707153
      0.500000        0.4812118250596035
      0.600000        0.5688248987322475
      0.700000        0.6526665660823557
      0.800000        0.7326682560454109
      0.900000        0.8088669356527824
      1.000000         0.881373587019543
      2.000000          1.44363547517881
      3.000000         1.818446459232067
      4.000000         2.094712547261101
      5.000000         2.312438341272752
     10.000000          2.99822295029797
    100.000000         5.298342365610589
   1000.000000         7.600902709541988

ARCSINH_VALUES_TEST:
  Normal end of execution.

ARCTAN_VALUES_TEST:
  Python version: 2.7.17
  ARCTAN_VALUES stores values of
  the arc tangent function.

        X               F(X)

      0.000000                         0
      0.250000        0.2449786631268641
      0.333333        0.3217505543966422
      0.500000        0.4636476090008061
      1.000000        0.7853981633974483
      2.000000          1.10714871779409
      3.000000         1.249045772398254
      4.000000         1.325817663668033
      5.000000         1.373400766945016
     10.000000         1.471127674303735
     20.000000         1.520837931072954

ARCTAN_VALUES_TEST:
  Normal end of execution.

ARCTAN2_VALUES_TEST:
  Python version: 2.7.17
  ARCTAN_VALUES stores values of
  the arc tangent function.

        X           Y               F(X,Y)

      0.000000     -1.000000        -1.570796326794897
      0.500000     -0.866025        -1.047197551196598
      0.866025     -0.500000       -0.5235987755982989
      1.000000      0.000000                         0
      0.866025      0.500000        0.5235987755982989
      0.500000      0.866025         1.047197551196598
      0.000000      1.000000         1.570796326794897
     -0.500000      0.866025         2.094395102393196
     -0.866025      0.500000         2.617993877991494
     -1.000000      0.000000         3.141592653589793
     -0.866025     -0.500000        -2.617993877991494
     -0.500000     -0.866025        -2.094395102393196
      0.000000     -1.000000        -1.570796326794897
      0.500000     -0.866025        -1.047197551196598
      0.866025     -0.500000       -0.5235987755982989
      1.000000      0.000000                         0
      0.866025      0.500000        0.5235987755982989
      0.500000      0.866025         1.047197551196598
      0.000000      1.000000         1.570796326794897

ARCTAN2_VALUES_TEST:
  Normal end of execution.

ARCTANH_VALUES_TEST:
  Python version: 2.7.17
  ARCTANH_VALUES stores values of
  the hyperbolic arc tangent function.

        X               F(X)

     -0.500000       -0.5493061443340549
      0.000000                         0
      0.001000      0.001000000333333533
      0.100000        0.1003353477310756
      0.200000        0.2027325540540822
      0.300000        0.3095196042031117
      0.400000        0.4236489301936018
      0.500000        0.5493061443340549
      0.600000        0.6931471805599453
      0.700000        0.8673005276940532
      0.800000          1.09861228866811
      0.900000          1.47221948958322
      0.990000         2.646652412362246
      0.999000           3.8002011672502
      0.999999         7.254328619262047

ARCTANH_VALUES_TEST:
  Normal end of execution.

BESSEL_I0_VALUES_TEST:
  Python version: 2.7.17
  BESSEL_I0_VALUES stores values of the Bessel I function. of order 0.

      X           I(0,X)

      0.000000                         1
      0.200000         1.010025027795146
      0.400000         1.040401782229341
      0.600000          1.09204536431734
      0.800000         1.166514922869803
      1.000000         1.266065877752008
      1.200000         1.393725584134064
      1.400000         1.553395099731217
      1.600000         1.749980639738909
      1.800000         1.989559356618051
      2.000000         2.279585302336067
      2.500000         3.289839144050123
      3.000000         4.880792585865024
      3.500000          7.37820343222548
      4.000000         11.30192195213633
      4.500000         17.48117185560928
      5.000000         27.23987182360445
      6.000000         67.23440697647798
      8.000000         427.5641157218048
     10.000000         2815.716628466254

BESSEL_I0_VALUES_TEST:
  Normal end of execution.

BESSEL_I1_VALUES_TEST:
  Python version: 2.7.17
  BESSEL_I1_VALUES stores values of the Bessel I function. of order 1.

      X           I(1,X)

      0.000000                         0
      0.200000        0.1005008340281251
      0.400000        0.2040267557335706
      0.600000        0.3137040256049221
      0.800000        0.4328648026206398
      1.000000         0.565159103992485
      1.200000        0.7146779415526431
      1.400000        0.8860919814143274
      1.600000          1.08481063512988
      1.800000         1.317167230391899
      2.000000         1.590636854637329
      2.500000         2.516716245288698
      3.000000         3.953370217402609
      3.500000         6.205834922258365
      4.000000         9.759465153704451
      4.500000         15.38922275373592
      5.000000         24.33564214245053
      6.000000         61.34193677764024
      8.000000         399.8731367825601
     10.000000         2670.988303701255

BESSEL_I1_VALUES_TEST:
  Normal end of execution.

BESSEL_J0_VALUES_TEST:
  BESSEL_J0_VALUES stores values of the Bessel J function. of order 0.

      X           J(0,X)

     -5.000000       -0.1775967713143383
     -4.000000       -0.3971498098638474
     -3.000000       -0.2600519549019334
     -2.000000        0.2238907791412357
     -1.000000        0.7651976865579666
      0.000000                         1
      1.000000        0.7651976865579666
      2.000000        0.2238907791412357
      3.000000       -0.2600519549019334
      4.000000       -0.3971498098638474
      5.000000       -0.1775967713143383
      6.000000        0.1506452572509969
      7.000000        0.3000792705195556
      8.000000        0.1716508071375539
      9.000000      -0.09033361118287613
     10.000000       -0.2459357644513483
     11.000000       -0.1711903004071961
     12.000000       0.04768931079683354
     13.000000        0.2069261023770678
     14.000000        0.1710734761104587
     15.000000      -0.01422447282678077

BESSEL_J0_VALUES_TEST:
  Normal end of execution.

BESSEL_J1_VALUES_TEST:
  BESSEL_J1_VALUES stores values of the Bessel J function. of order 1.

      X           J(1,X)

     -5.000000        0.3275791375914652
     -4.000000       0.06604332802354913
     -3.000000       -0.3390589585259365
     -2.000000       -0.5767248077568734
     -1.000000       -0.4400505857449335
      0.000000                         0
      1.000000        0.4400505857449335
      2.000000        0.5767248077568734
      3.000000        0.3390589585259365
      4.000000      -0.06604332802354913
      5.000000       -0.3275791375914652
      6.000000       -0.2766838581275656
      7.000000     -0.004682823482345833
      8.000000        0.2346363468539146
      9.000000        0.2453117865733253
     10.000000       0.04347274616886144
     11.000000       -0.1767852989567215
     12.000000       -0.2234471044906276
     13.000000      -0.07031805212177837
     14.000000        0.1333751546987933
     15.000000        0.2051040386135228

BESSEL_J1_VALUES_TEST:
  Normal end of execution.

BESSEL_K0_VALUES_TEST:
  BESSEL_K0_VALUES stores values of the Bessel K function. of order 0.

      X           K(0,X)

      0.100000         2.427069024702017
      0.200000         1.752703855528146
      0.400000         1.114529134524434
      0.600000        0.7775220919047293
      0.800000        0.5653471052658957
      1.000000        0.4210244382407083
      1.200000        0.3185082202865936
      1.400000        0.2436550611815419
      1.600000        0.1879547519693323
      1.800000         0.145931400489828
      2.000000        0.1138938727495334
      2.500000       0.06234755320036619
      3.000000       0.03473950438627925
      3.500000       0.01959889717036849
      4.000000       0.01115967608585302
      4.500000      0.006399857243233975
      5.000000      0.003691098334042594
      6.000000      0.001243994328013123
      8.000000     0.0001464707052228154
     10.000000     1.778006231616765e-05

BESSEL_K0_VALUES_TEST:
  Normal end of execution.

BESSEL_K1_VALUES_TEST:
  BESSEL_K1_VALUES stores values of the Bessel K function. of order 1.

      X           K(1,X)

      0.100000         9.853844780870606
      0.200000         4.775972543220472
      0.400000         2.184354424732687
      0.600000         1.302834939763502
      0.800000        0.8617816344721803
      1.000000        0.6019072301972346
      1.200000         0.434592391060715
      1.400000        0.3208359022298758
      1.600000        0.2406339113576119
      1.800000         0.182623099801747
      2.000000        0.1398658818165224
      2.500000       0.07389081634774707
      3.000000       0.04015643112819418
      3.500000       0.02223939292592383
      4.000000       0.01248349888726843
      4.500000       0.00707809490896809
      5.000000      0.004044613445452164
      6.000000      0.001343919717735509
      8.000000     0.0001553692118050011
     10.000000     1.864877345382558e-05

BESSEL_K1_VALUES_TEST:
  Normal end of execution.

BESSEL_KX_VALUES_TEST:
  BESSEL_KX_VALUES stores values of the Bessel K function. of real order NU.

      NU          X           K(NU,X)

      0.500000      0.200000         2.294489339798475
      0.500000      1.000000        0.4610685044478946
      0.500000      2.000000        0.1199377719680614
      0.500000      2.500000       0.06506594315400999
      0.500000      3.000000       0.03602598513176459
      0.500000      5.000000      0.003776613374642883
      0.500000     10.000000     1.799347809370518e-05
      0.500000     20.000000     5.776373974707445e-10
      1.500000      1.000000        0.9221370088957891
      1.500000      2.000000        0.1799066579520922
      1.500000      5.000000      0.004531936049571459
      1.500000     10.000000      1.97928259030757e-05
      1.500000     50.000000     3.486992497366216e-23
      2.500000      1.000000         3.227479531135262
      2.500000      2.000000        0.3897977588961997
      2.500000      5.000000      0.006495775004385758
      2.500000     10.000000     2.393132586462789e-05
      2.500000     50.000000     3.627839645299048e-23
      1.250000      1.000000        0.7311451879202114
      1.250000      2.000000        0.1567475478393932
      1.250000      5.000000      0.004257389528177461
      1.250000     10.000000     1.915541065869563e-05
      1.250000     50.000000     3.463337593569306e-23
      2.750000      1.000000         4.731184839919541
      2.750000      2.000000        0.4976876225514758
      2.750000      5.000000      0.007300864610941163
      2.750000     10.000000     2.546421294106458e-05
      2.750000     50.000000     3.675275677913656e-23

BESSEL_KX_VALUES_TEST:
  Normal end of execution.

BESSEL_Y0_VALUES_TEST:
  BESSEL_Y0_VALUES stores values of the Bessel Y function. of order 0.

      X           Y(0,X)

      0.100000        -1.534238651350367
      1.000000       0.08825696421567696
      2.000000        0.5103756726497451
      3.000000        0.3768500100127904
      4.000000      -0.01694073932506499
      5.000000       -0.3085176252490338
      6.000000       -0.2881946839815792
      7.000000      -0.02594974396720926
      8.000000        0.2235214893875662
      9.000000        0.2499366982850247
     10.000000       0.05567116728359939
     11.000000       -0.1688473238920795
     12.000000       -0.2252373126343614
     13.000000      -0.07820786452787591
     14.000000        0.1271925685821837
     15.000000        0.2054642960389183

BESSEL_Y0_VALUES_TEST:
  Normal end of execution.

BESSEL_Y1_VALUES_TEST:
  BESSEL_Y1_VALUES stores values of the Bessel Y function. of order 1.

      X           Y(1,X)

      0.100000        -6.458951094702027
      1.000000       -0.7812128213002887
      2.000000       -0.1070324315409375
      3.000000           0.3246744247918
      4.000000           0.3979257105571
      5.000000        0.1478631433912268
      6.000000       -0.1750103443003983
      7.000000       -0.3026672370241849
      8.000000       -0.1580604617312475
      9.000000        0.1043145751967159
     10.000000        0.2490154242069539
     11.000000        0.1637055374149429
     12.000000      -0.05709921826089652
     13.000000       -0.2100814084206935
     14.000000       -0.1666448418561723
     15.000000       0.02107362803687351

BESSEL_Y1_VALUES_TEST:
  Normal end of execution.

BETA_VALUES_TEST:
  Python version: 2.7.17
  BETA_VALUES stores values of the BETA function.

      X         Y         BETA(X,Y)

      0.200000      1.000000                         5
      0.400000      1.000000                       2.5
      0.600000      1.000000         1.666666666666667
      0.800000      1.000000                      1.25
      1.000000      0.200000                         5
      1.000000      0.400000                       2.5
      1.000000      1.000000                         1
      2.000000      2.000000        0.1666666666666667
      3.000000      3.000000       0.03333333333333333
      4.000000      4.000000      0.007142857142857143
      5.000000      5.000000      0.001587301587301587
      6.000000      2.000000       0.02380952380952381
      6.000000      3.000000      0.005952380952380952
      6.000000      4.000000      0.001984126984126984
      6.000000      5.000000     0.0007936507936507937
      6.000000      6.000000     0.0003607503607503608
      7.000000      7.000000     8.325008325008325e-05

BETA_VALUES_TEST:
  Normal end of execution.

BETA_INC_VALUES_TEST:
  Python version: 2.7.17
  BETA_INC_VALUES stores values of the BETA function.

      A         B         X        BETA_INC(A,B,X)

      0.500000      0.500000      0.010000       0.06376856085851985
      0.500000      0.500000      0.100000        0.2048327646991335
      0.500000      0.500000      1.000000                         1
      1.000000      0.500000      0.000000                         0
      1.000000      0.500000      0.010000      0.005012562893380045
      1.000000      0.500000      0.100000        0.0513167019494862
      1.000000      0.500000      0.500000        0.2928932188134525
      1.000000      1.000000      0.500000                       0.5
      2.000000      2.000000      0.100000                     0.028
      2.000000      2.000000      0.200000                     0.104
      2.000000      2.000000      0.300000                     0.216
      2.000000      2.000000      0.400000                     0.352
      2.000000      2.000000      0.500000                       0.5
      2.000000      2.000000      0.600000                     0.648
      2.000000      2.000000      0.700000                     0.784
      2.000000      2.000000      0.800000                     0.896
      2.000000      2.000000      0.900000                     0.972
      5.500000      5.000000      0.500000        0.4361908850559777
     10.000000      0.500000      0.900000        0.1516409096347099
     10.000000      5.000000      0.500000          0.08978271484375
     10.000000      5.000000      1.000000                         1
     10.000000     10.000000      0.500000                       0.5
     20.000000      5.000000      0.800000        0.4598773297575791
     20.000000     10.000000      0.600000        0.2146816102371739
     20.000000     10.000000      0.800000        0.9507364826957875
     20.000000     20.000000      0.500000                       0.5
     20.000000     20.000000      0.600000        0.8979413687105918
     30.000000     10.000000      0.700000        0.2241297491808366
     30.000000     10.000000      0.800000        0.7586405487192086
     40.000000     20.000000      0.700000        0.7001783247477069
      1.000000      0.500000      0.100000        0.0513167019494862
      1.000000      0.500000      0.200000        0.1055728090000841
      1.000000      0.500000      0.300000        0.1633399734659245
      1.000000      0.500000      0.400000        0.2254033307585166
      1.000000      2.000000      0.200000                      0.36
      1.000000      3.000000      0.200000                     0.488
      1.000000      4.000000      0.200000                    0.5904
      1.000000      5.000000      0.200000                   0.67232
      2.000000      2.000000      0.300000                     0.216
      3.000000      2.000000      0.300000                    0.0837
      4.000000      2.000000      0.300000                   0.03078
      5.000000      2.000000      0.300000                  0.010935
      1.306250     11.756200      0.225609         0.918884684620518
      1.306250     11.756200      0.033557          0.21052977489419
      1.306250     11.756200      0.029522        0.1824130512500673

BETA_INC_VALUES_TEST:
  Normal end of execution.

BETA_LOG_VALUES_TEST:
  BETA_LOG_VALUES stores values of the Log(BETA) function.

      X         Y         Log(BETA(X,Y))

      0.200000      1.000000           1.6094379124341
      0.400000      1.000000        0.9162907318741551
      0.600000      1.000000        0.5108256237659907
      0.800000      1.000000        0.2231435513142098
      1.000000      0.200000           1.6094379124341
      1.000000      0.400000        0.9162907318741551
      1.000000      1.000000                         0
      2.000000      2.000000        -1.791759469228055
      3.000000      3.000000        -3.401197381662155
      4.000000      4.000000        -4.941642422609304
      5.000000      5.000000        -6.445719819385578
      6.000000      2.000000        -3.737669618283368
      6.000000      3.000000        -5.123963979403259
      6.000000      4.000000        -6.222576268071369
      6.000000      5.000000        -7.138866999945524
      6.000000      6.000000        -7.927324360309794
      7.000000      7.000000         -9.39366142910322

BETA_LOG_VALUES_TEST:
  Normal end of execution.

BINOMIAL_VALUES_TEST:
  BINOMIAL_VALUES stores values of the BINOMIAL function.

      A         B         BINOMIAL(A,B)

             1             0             1
             6             1             6
             6             3            20
             6             5             6
            15             1            15
            15             3           455
            15             5          3003
            15             7          6435
            15             9          5005
            15            11          1365
            15            13           105
            25             1            25
            25             3          2300
            25             5         53130
            25             7        480700
            25             9       2042975
            25            11       4457400
            25            13       5200300
            25            15       3268760
            25            17       1081575

BINOMIAL_VALUES_TEST:
  Normal end of execution.

CBRT_VALUES_TEST:
  Python version: 2.7.17
  CBRT_VALUES stores values of the cube root function.

      X         CBRT(X)

      0.000000        0.0000000000000000
     -0.000000       -0.0020082988563383
      0.090000        0.4481404746557165
     -0.100000       -0.4641588833612779
      0.400000        0.7368062997280773
     -1.000000       -1.0000000000000000
      2.000000        1.2599210498948732
     -3.000000       -1.4422495703074083
      3.141593        1.4645918875615234
    -19.000000       -2.6684016487219449
     29.000000        3.0723168256858471
    -71.000000       -4.1408177494228529
     97.000000        4.5947008922070394
  -123456789.000000     -497.9338592181744616

CBRT_VALUES_TEST:
  Normal end of execution.

CHI_VALUES_TEST:
  Python version: 2.7.17
  CHI_VALUES stores values of the hyperbolic cosine integral function.

      X         CHI(X)

      0.500000       -0.0527768449564936
      0.600000        0.1577508933739787
      0.700000        0.3455691756953907
      0.800000        0.5183999848333914
      0.900000        0.6813138871854340
      1.000000        0.8378669409802082
      1.200000        1.1418419241705950
      1.400000        1.4454940757896440
      1.600000        1.7595058076609651
      1.800000        2.0925772140620320
      2.000000        2.4526669226469151
      2.500000        3.5244254883541650
      3.000000        4.9603920947656102
      3.500000        6.9591919276473932
      4.000000        9.8135475588231866
      4.500000       13.9658116485924300

CHI_VALUES_TEST:
  Normal end of execution.

CI_VALUES_TEST:
  Python version: 2.7.17
  CI_VALUES stores values of the cosine integral function.

      X         CI(X)

      0.500000       -0.1777840788066129
      0.600000       -0.0222707069592798
      0.700000        0.1005147070088978
      0.800000        0.1982786159524672
      0.900000        0.2760678304677729
      1.000000        0.3374039229009681
      1.200000        0.4204591828942405
      1.400000        0.4620065850946773
      1.600000        0.4717325169318778
      1.800000        0.4568111294183369
      2.000000        0.4229808287748650
      2.500000        0.2858711963653835
      3.000000        0.1196297860080003
      3.500000       -0.0321285485124811
      4.000000       -0.1409816978869304
      4.500000       -0.1934911221017388

CI_VALUES_TEST:
  Normal end of execution.

CIN_VALUES_TEST:
  Python version: 2.7.17
  CIN_VALUES stores values of the alternate cosine integral function.

      X         CIN(X)

      0.500000        0.0618525631482005
      0.600000        0.0886607480948219
      0.700000        0.1200260139539026
      0.800000        0.1557934976348559
      0.900000        0.1957873187759337
      1.000000        0.2398117420005647
      1.200000        0.3390780388012470
      1.400000        0.4516813164280685
      1.600000        0.5754867772153907
      1.800000        0.7081912003853150
      2.000000        0.8473820166866132
      2.500000        1.2076352004103039
      3.000000        1.5561981675616421
      3.500000        1.8621071819093820
      4.000000        2.1044917239083540
      4.500000        2.2747841837795462

CIN_VALUES_TEST:
  Normal end of execution.

CINH_VALUES_TEST:
  Python version: 2.7.17
  CINH_VALUES: values of the alternate hyperbolic cosine integral function.

      X         CINH(X)

      0.000000        0.0000000000000000
      0.500000        0.0631546707019188
      0.600000        0.0913608522384365
      0.700000        0.1250284547325902
      0.800000        0.1643278712460683
      0.900000        0.2094587379417273
      1.000000        0.2606512760786754
      1.200000        0.3823047024751071
      1.400000        0.5318061742668980
      1.600000        0.7122865135136963
      1.800000        0.9275748842583805
      2.000000        1.1823040771854361
      2.500000        2.0309190915784781
      3.000000        3.2845641411959670
      3.500000        5.1292132942504933
      4.000000        7.8500375328017622
      4.500000       11.8845185869146306

CINH_VALUES_TEST:
  Normal end of execution.

COS_VALUES_TEST:
  Python version: 2.7.17
  COS_VALUES stores values of the cosine function.

      X         COS(X)

      0.000000        1.0000000000000000
      0.261799        0.9659258262890683
      0.500000        0.8775825618903728
      0.523599        0.8660254037844386
      0.785398        0.7071067811865476
      1.000000        0.5403023058681398
      1.047198        0.5000000000000000
      1.570796        0.0000000000000000
      2.000000       -0.4161468365471424
      3.000000       -0.9899924966004454
      3.141593       -1.0000000000000000
      4.000000       -0.6536436208636119
      5.000000        0.2836621854632262

COS_VALUES_TEST:
  Normal end of execution.

COS_DEGREE_VALUES_TEST:
  Python version: 2.7.17
  COS_DEGREE_VALUES stores values of the cosine function.

      X         COS(X)

     -5.000000        0.9961946980917455
      0.000000        1.0000000000000000
      1.000000        0.9998476951563913
      2.000000        0.9993908270190958
      3.000000        0.9986295347545738
      4.000000        0.9975640502598242
      5.000000        0.9961946980917455
     10.000000        0.9848077530122080
     15.000000        0.9659258262890683
     30.000000        0.8660254037844386
     45.000000        0.7071067811865476
     60.000000        0.5000000000000000
     75.000000        0.2588190451025207
     85.000000        0.0871557427476582
     86.000000        0.0697564737441253
     87.000000        0.0523359562429438
     88.000000        0.0348994967025010
     89.000000        0.0174524064372835
     90.000000        0.0000000000000000
     91.000000       -0.0174524064372835
    105.000000       -0.2588190451025207
    180.000000       -1.0000000000000000

COS_DEGREE_VALUES_TEST:
  Normal end of execution.

COSH_VALUES_TEST:
  Python version: 2.7.17
  COSH_VALUES stores values of the hyperbolic cosine function.

      X         COSH(X)

     -5.000000       74.2099485247878476
     -1.000000        1.5430806348152437
      0.000000        1.0000000000000000
      0.100000        1.0050041680558035
      0.200000        1.0200667556190759
      0.300000        1.0453385141288605
      0.400000        1.0810723718384547
      0.500000        1.1276259652063807
      0.600000        1.1854652182422678
      0.700000        1.2551690056309430
      0.800000        1.3374349463048445
      0.900000        1.4330863854487743
      1.000000        1.5430806348152437
      2.000000        3.7621956910836314
      3.000000       10.0676619957777653
      4.000000       27.3082328360164865
      5.000000       74.2099485247878476
     10.000000    11013.2329201033226127

COSH_VALUES_TEST:
  Normal end of execution.

COT_VALUES_TEST:
  Python version: 2.7.17
  COT_VALUES stores values of the cotangent function.

      X         COT(X)

      0.083333       11.9722093536286618
      0.261799        3.7320508075688772
      0.500000        1.8304877217124520
      0.523599        1.7320508075688772
      0.785398        1.0000000000000000
      1.000000        0.6420926159343308
      1.047198        0.5773502691896257
      1.308997        0.2679491924311227
      1.570796        0.0000000000000000
      1.439897        0.1316524975873959
      1.505346        0.0655434628152382
      2.000000       -0.4576575543602858
      3.000000       -7.0152525514345339
      4.000000        0.8636911544506166
      5.000000       -0.2958129155327455

COT_VALUES_TEST:
  Normal end of execution.

DAWSON_VALUES_TEST:
  Python version: 2.7.17
  DAWSON_VALUES stores values of the Dawson integral function.

      X         F(X)

      0.000000        0.0000000000000000
      0.100000        0.0993359923978529
      0.200000        0.1947510333680280
      0.300000        0.2826316650213119
      0.400000        0.3599434819348881
      0.500000        0.4244363835020223
      0.600000        0.4747632036629779
      0.700000        0.5105040575592318
      0.800000        0.5321017070563654
      0.900000        0.5407243187262987
      1.000000        0.5380795069127684
      1.100000        0.5262066799705525
      1.200000        0.5072734964077396
      1.300000        0.4833975173848241
      1.400000        0.4565072375268973
      1.500000        0.4282490710853986
      1.600000        0.3999398943230814
      1.700000        0.3725593489740788
      1.800000        0.3467727691148722
      1.900000        0.3229743193228178
      2.000000        0.3013403889237920

DAWSON_VALUES_TEST:
  Normal end of execution.

DILOGARITHM_VALUES_TEST:
  Python version: 2.7.17
  DILOGARITHM_VALUES stores values of the dilogarithm function.

      X         F(X)

      0.000000        0.0000000000000000
      0.050000        0.0506392924644960
      0.100000        0.1026177910993911
      0.150000        0.1560350339454831
      0.200000        0.2110037754397048
      0.250000        0.2676526390827326
      0.300000        0.3261295100754761
      0.350000        0.3866059411605865
      0.400000        0.4492829744712817
      0.450000        0.5143989891542119
      0.500000        0.5822405264650125
      0.550000        0.6531576315069018
      0.600000        0.7275863077163334
      0.650000        0.8060826895177240
      0.700000        0.8893776242860387
      0.750000        0.9784693929303061
      0.800000        1.0747946000082480
      0.850000        1.1805811238302550
      0.900000        1.2997147230049590
      0.950000        1.4406337969700389
      1.000000        1.6449340668482260

DILOGARITHM_VALUES_TEST:
  Normal end of execution.

E1_VALUES_TEST:
  Python version: 2.7.17
  E1_VALUES stores values of the exponential integral.

      X         E1(X)

      0.500000        0.5597735947761608
      0.600000        0.4543795031894021
      0.700000        0.3737688432335091
      0.800000        0.3105965785455430
      0.900000        0.2601839393259996
      1.000000        0.2193839343955203
      1.100000        0.1859909045360402
      1.200000        0.1584084368514626
      1.300000        0.1354509578491291
      1.400000        0.1162193125713579
      1.500000        0.1000195824066327
      1.600000        0.0863083336975398
      1.700000        0.0746546444012531
      1.800000        0.0647131293638689
      1.900000        0.0562043781745349
      2.000000        0.0489005107080611

E1_VALUES_TEST:
  Normal end of execution.

EI_VALUES_TEST:
  Python version: 2.7.17
  EI_VALUES stores values of the exponential integral.

      X         EI(X)

      0.500000        0.4542199048631736
      0.600000        0.7698812899373594
      0.700000        1.0649071946242910
      0.800000        1.3473965482123260
      0.900000        1.6228117136968669
      1.000000        1.8951178163559370
      1.100000        2.1673782795634029
      1.200000        2.4420922851926519
      1.300000        2.7213988802320239
      1.400000        3.0072074641506461
      1.500000        3.3012854491297978
      1.600000        3.6053199490194690
      1.700000        3.9209632013549038
      1.800000        4.2498675574879341
      1.900000        4.5937136869535848
      2.000000        4.9542343560018898

EI_VALUES_TEST:
  Normal end of execution.

ERF_VALUES_TEST:
  Python version: 2.7.17
  ERF_VALUES stores values of the error function.

      X         ERF(X)

      0.000000        0.0000000000000000
      0.100000        0.1124629160182849
      0.200000        0.2227025892104785
      0.300000        0.3286267594591274
      0.400000        0.4283923550466685
      0.500000        0.5204998778130465
      0.600000        0.6038560908479259
      0.700000        0.6778011938374185
      0.800000        0.7421009647076605
      0.900000        0.7969082124228321
      1.000000        0.8427007929497149
      1.100000        0.8802050695740817
      1.200000        0.9103139782296354
      1.300000        0.9340079449406524
      1.400000        0.9522851197626488
      1.500000        0.9661051464753106
      1.600000        0.9763483833446440
      1.700000        0.9837904585907746
      1.800000        0.9890905016357306
      1.900000        0.9927904292352575
      2.000000        0.9953222650189527

ERF_VALUES_TEST:
  Normal end of execution.

ERFC_VALUES_TEST:
  Python version: 2.7.17
  ERFC_VALUES stores values of the complementary error function.

      X         ERFC(X)

      0.000000        1.0000000000000000
      0.200000        0.7772974107895215
      0.400000        0.5716076449533315
      0.600000        0.3961439091520741
      0.800000        0.2578990352923395
      1.000000        0.1572992070502851
      1.200000        0.0896860217703646
      1.400000        0.0477148802373512
      1.600000        0.0236516166553560
      1.800000        0.0109094983642693
      2.000000        0.0046777349810473
      2.200000        0.0018628462979819
      2.400000        0.0006885138966451
      2.600000        0.0002360344165293
      2.800000        0.0000750131946655
      3.000000        0.0000220904969986
      3.200000        0.0000060257611518
      3.400000        0.0000015219933629
      3.600000        0.0000003558629930
      3.800000        0.0000000770039275
      4.000000        0.0000000154172579

ERFC_VALUES_TEST:
  Normal end of execution.

EXP_VALUES_TEST:
  Python version: 2.7.17
  EXP_VALUES stores values of the exponential function.

      X         F(X)

    -10.000000        0.0000453999297625
     -5.000000        0.0067379469990855
     -1.000000        0.3678794411714423
      0.000000        1.0000000000000000
      0.000000        1.0000000099999999
      0.000100        1.0001000050001667
      0.001000        1.0010005001667084
      0.010000        1.0100501670841679
      0.100000        1.1051709180756477
      0.200000        1.2214027581601699
      0.300000        1.3498588075760032
      0.400000        1.4918246976412703
      0.500000        1.6487212707001282
      0.600000        1.8221188003905089
      0.700000        2.0137527074704766
      0.800000        2.2255409284924674
      0.900000        2.4596031111569499
      1.000000        2.7182818284590451
      2.000000        7.3890560989306504
      3.141593       23.1406926327792704
      5.000000      148.4131591025765999
     10.000000    22026.4657948067178950
     20.000000  485165195.4097902774810791
     40.000000  235385266837020000.0000000000000000

EXP_VALUES_TEST:
  Normal end of execution.

GAMMA_VALUES_TEST:
  Python version: 2.7.17
  GAMMA_VALUES stores values of the Gamma function.

      X            GAMMA(X)

     -0.500000       -3.5449077018110322
     -0.010000     -100.5871979644108052
      0.010000       99.4325851191506018
      0.100000        9.5135076986687324
      0.200000        4.5908437119988026
      0.400000        2.2181595437576882
      0.500000        1.7724538509055161
      0.600000        1.4891922488128171
      0.800000        1.1642297137253030
      1.000000        1.0000000000000000
      1.100000        0.9513507698668732
      1.200000        0.9181687423997607
      1.300000        0.8974706963062772
      1.400000        0.8872638175030753
      1.500000        0.8862269254527581
      1.600000        0.8935153492876903
      1.700000        0.9086387328532904
      1.800000        0.9313837709802427
      1.900000        0.9617658319073874
      2.000000        1.0000000000000000
      3.000000        2.0000000000000000
      4.000000        6.0000000000000000
     10.000000   362880.0000000000000000
     20.000000  121645100408832000.0000000000000000
     30.000000  8841761993739701898620088352768.0000000000000000

GAMMA_VALUES_TEST:
  Normal end of execution.

GAMMA_INC_VALUES_TEST:
  Python version: 2.7.17
  GAMMA_INC_VALUES stores values of the incomplete Gamma function.

      A         X        GAMMA_INC(A,X)

      0.100000      0.030000          2.49030283630057
      0.100000      0.300000        0.8718369702247978
      0.100000      1.500000        0.1079213896175866
      0.500000      0.075000         1.238121685818417
      0.500000      0.750000        0.3911298052193973
      0.500000      3.500000       0.01444722098952533
      1.000000      0.100000        0.9048374180359596
      1.000000      1.000000        0.3678794411714423
      1.000000      5.000000      0.006737946999085467
      1.100000      0.100000        0.8827966752611692
      1.100000      1.000000        0.3908330082003269
      1.100000      5.000000      0.008051456628620992
      2.000000      0.150000        0.9898141728888165
      2.000000      1.500000        0.5578254003710746
      2.000000      7.000000       0.00729505572443613
      6.000000      2.500000         114.9574754165633
      6.000000     12.000000         2.440923530031405
     11.000000     16.000000         280854.6620274718
     26.000000     25.000000     8.576480283455533e+24
     41.000000     45.000000     2.085031346403364e+47

GAMMA_INC_VALUES_TEST:
  Normal end of execution.

GAMMA_INC_TRICOMI_VALUES_TEST:
  Python version: 2.7.17
  GAMMA_INC_TRICOMI_VALUES stores values of an incomplete Gamma function.

      A         X        F(A,X)

      0.100000      0.030000         1.048292641463504
      0.100000      0.300000         1.024577737369574
      0.100000      1.500000        0.9493712443185374
      0.500000      0.075000         1.100793230316492
      0.500000      0.750000        0.8998911979655217
      0.500000      3.500000        0.5301656062431039
      1.000000      0.100000        0.9516258196404043
      1.000000      1.000000        0.6321205588285577
      1.000000      5.000000        0.1986524106001829
      1.100000      0.100000        0.9071784510537487
      1.100000      1.000000        0.5891809618706485
      1.100000      5.000000        0.1688269752193589
      2.000000      0.150000        0.4527034271637121
      2.000000      1.500000        0.1965220442795224
      2.000000      7.000000       0.02025928457705232
      6.000000      2.500000     0.0001721181724479739
      6.000000     12.000000     3.280858070850586e-07
     11.000000     16.000000      5.24439647182159e-14
     26.000000     25.000000     2.013462926183376e-37
     41.000000     45.000000     1.230623887499875e-68

GAMMA_INC_TRICOMI_VALUES_TEST:
  Normal end of execution.

GAMMA_LOG_VALUES:
  Python version: 2.7.17
  GAMMA_LOG_VALUES stores values of
  the logarithm of the Gamma function.

      X            GAMMA_LOG(X)

      0.200000        1.5240638224307841
      0.400000        0.7966778177017837
      0.600000        0.3982338580692348
      0.800000        0.1520596783998375
      1.000000        0.0000000000000000
      1.100000       -0.0498724412598397
      1.200000       -0.0853740900033158
      1.300000       -0.1081748095078604
      1.400000       -0.1196129141723712
      1.500000       -0.1207822376352452
      1.600000       -0.1125917656967557
      1.700000       -0.0958076974070659
      1.800000       -0.0710838729143722
      1.900000       -0.0389842759230833
      2.000000        0.0000000000000000
      3.000000        0.6931471805599453
      4.000000        1.7917594692280550
     10.000000       12.8018274800814691
     20.000000       39.3398841871994946
     30.000000       71.2570389671680147

GAMMA_LOG_VALUES_TEST:
  Normal end of execution.

HYPERGEOMETRIC_U_VALUES_TEST:
  Python version: 2.7.17
  HYPERGEOMETRIC_U_VALUES stores values of the Hypergeometric U function.

        A             B             X              F

     -2.500000      3.300000      0.250000        -68.69362872807861
     -0.500000      1.100000      0.250000     -0.002971055137476107
      0.500000      1.100000      0.250000          1.50086317421778
      2.500000      3.300000      0.250000          20.6146882442006
     -2.500000      3.300000      1.550000         7.456381546930555
     -0.500000      1.100000      1.550000         1.015579376774929
      0.500000      1.100000      1.550000        0.7344653893662267
      2.500000      3.300000      1.550000         0.280464049418794
     -2.500000      3.300000      2.850000         3.450815374144655
     -0.500000      1.100000      2.850000         1.515663736875306
      0.500000      1.100000      2.850000          0.56042118587935
      2.500000      3.300000      2.850000       0.06489714773513422
      0.825000      6.700000      0.250000         223432.0235697746
      1.100000      6.700000      0.250000         263079.2598074081
      1.650000      6.700000      0.250000         269802.9031935128
      3.300000      6.700000      0.250000         82809.31133560656
      0.825000      6.700000      1.550000         26.46568478313185
      1.100000      6.700000      1.550000         28.09350617251606
      1.650000      6.700000      1.550000         23.88916462451887
      3.300000      6.700000      1.550000         4.533884785707039
      0.825000      6.700000      2.850000         3.022446936269484
      1.100000      6.700000      2.850000         2.804065091371336
      1.650000      6.700000      2.850000         1.926257811148017
      3.300000      6.700000      2.850000        0.2302051811586091

HYPERGEOMETRIC_U_VALUES_TEST:
  Normal end of execution.

I4_UNIFORM_AB_TEST
  Python version: 2.7.17
  I4_UNIFORM_AB computes pseudorandom values
  in an interval [A,B].

  The lower endpoint A = -100
  The upper endpoint B = 200
  The initial seed is 123456789

         1       -35
         2       187
         3       149
         4        69
         5        25
         6       -81
         7       -23
         8       -67
         9       -87
        10        90
        11       -82
        12        35
        13        20
        14       127
        15       139
        16      -100
        17       170
        18         5
        19       -72
        20       -96

I4_UNIFORM_AB_TEST:
  Normal end of execution.

INT_VALUES_TEST:
  Python version: 2.7.17
  INT_VALUES stores values of the integer part function.

      X         INT(X)

     -2.010000       -2.0000000000000000
     -1.990000       -1.0000000000000000
     -1.500000       -1.0000000000000000
     -1.100000       -1.0000000000000000
     -1.010000       -1.0000000000000000
     -1.000000       -1.0000000000000000
     -0.990000        0.0000000000000000
     -0.900000        0.0000000000000000
     -0.510000        0.0000000000000000
     -0.500000        0.0000000000000000
     -0.490000        0.0000000000000000
     -0.010000        0.0000000000000000
      0.000000        0.0000000000000000
      0.010000        0.0000000000000000
      0.490000        0.0000000000000000
      0.500000        0.0000000000000000
      0.510000        0.0000000000000000
      0.900000        0.0000000000000000
      0.990000        0.0000000000000000
      1.000000        1.0000000000000000
      1.010000        1.0000000000000000
      1.100000        1.0000000000000000
      1.500000        1.0000000000000000
      1.990000        1.0000000000000000
      2.010000        2.0000000000000000

INT_VALUES_TEST:
  Normal end of execution.

LOG_VALUES_TEST:
  Python version: 2.7.17
  LOG_VALUES stores values of the LOG function.

      X         LOG(X)

      0.000010      -11.5129254649702286
      0.010000       -4.6051701859880918
      0.100000       -2.3025850929940459
      0.200000       -1.6094379124341003
      0.300000       -1.2039728043259359
      0.400000       -0.9162907318741551
      0.500000       -0.6931471805599453
      0.600000       -0.5108256237659907
      0.700000       -0.3566749439387324
      0.800000       -0.2231435513142098
      0.900000       -0.1053605156578263
      1.000000        0.0000000000000000
      2.000000        0.6931471805599453
      3.000000        1.0986122886681098
      3.141593        1.1447298858494002
      5.000000        1.6094379124341003
     10.000000        2.3025850929940459
     20.000000        2.9957322735539909
    100.000000        4.6051701859880918
  123456789.000000       18.6314017661680182

LOG_VALUES_TEST:
  Normal end of execution.

LOG10_VALUES_TEST:
  Python version: 2.7.17
  LOG10_VALUES stores values of the LOG10 function.

      X         LOG10(X)

      0.000010       -5.0000000000000000
      0.010000       -2.0000000000000000
      0.100000       -1.0000000000000000
      0.200000       -0.6989700043360189
      0.300000       -0.5228787452803375
      0.400000       -0.3979400086720376
      0.500000       -0.3010299956639812
      0.600000       -0.2218487496163564
      0.700000       -0.1549019599857432
      0.800000       -0.0969100130080564
      0.900000       -0.0457574905606751
      1.000000        0.0000000000000000
      2.000000        0.3010299956639812
      3.000000        0.4771212547196624
      3.141593        0.4971498726941339
      5.000000        0.6989700043360189
     10.000000        1.0000000000000000
     20.000000        1.3010299956639813
    100.000000        2.0000000000000000
  123456789.000000        8.0915149771692700

LOG10_VALUES_TEST:
  Normal end of execution.

LOGARITHMIC_INTEGRAL_VALUES_TEST:
  Python version: 2.7.17
  LOGARITHMIC_INTEGRAL_VALUES stores values of the LOGARITHMIC_INTEGRAL function.

      X         LOGARITHMIC_INTEGRAL(X)

      0.000000        0.0000000000000000
      0.100000       -0.0323897895932910
      0.200000       -0.0851264867287941
      0.300000       -0.1574149028946895
      0.400000       -0.2529494192126213
      0.500000       -0.3786710430610880
      0.600000       -0.5468514142104171
      0.700000       -0.7809468775455607
      0.800000       -1.1340119573823271
      0.900000       -1.7758006834235249
      0.950000       -2.4436225538732250
      0.975000       -3.1241900505072109
      1.031250       -2.8729355103291199
      1.062500       -2.1642825241382071
      1.125000       -1.4403512962794081
      1.250000       -0.6864884538258716
      1.500000        0.1250649863152964
      2.000000        1.0451637801174929
      4.000000        2.9675850950390510
      8.000000        5.2537182995589307
     16.000000        8.5197164637110596
     32.000000       13.6050921770917199
     64.000000       21.9346683280510000
    128.000000       36.0425483172294392
    256.000000       60.5130653379173324
    512.000000      103.7211171690372993
   1024.000000      181.0780396816944915
   2048.000000      321.1144156746836984

LOGARITHMIC_INTEGRAL_VALUES_TEST:
  Normal end of execution.

PSI_VALUES_TEST:
  Python version: 2.7.17
  PSI_VALUES stores values of the PSI function.

      X         PSI(X)

      0.100000      -10.4237549404110794
      0.200000       -5.2890398965921879
      0.300000       -3.5025242222001332
      0.400000       -2.5613845445851160
      0.500000       -1.9635100260214231
      0.600000       -1.5406192138931900
      0.700000       -1.2200235536979349
      0.800000       -0.9650085667061385
      0.900000       -0.7549269499470515
      1.000000       -0.5772156649015329
      1.100000       -0.4237549404110768
      1.200000       -0.2890398965921883
      1.300000       -0.1691908888667997
      1.400000       -0.0613845445851161
      1.500000        0.0364899739785765
      1.600000        0.1260474527734763
      1.700000        0.2085478748734940
      1.800000        0.2849914332938615
      1.900000        0.3561841611640597
      2.000000        0.4227843350984671

PSI_VALUES_TEST:
  Normal end of execution.

R8_FACTORIAL_VALUES_TEST:
  Python version: 2.7.17
  R8_FACTORIAL_VALUES returns values of the real factorial function.

          N          R8_FACTORIAL(N)

         0               1
         1               1
         2               2
         3               6
         4              24
         5             120
         6             720
         7            5040
         8           40320
         9          362880
        10      3.6288e+06
        11     3.99168e+07
        12     4.79002e+08
        13     6.22702e+09
        14     8.71783e+10
        15     1.30767e+12
        16     2.09228e+13
        17     3.55687e+14
        18     6.40237e+15
        19     1.21645e+17
        20      2.4329e+18
        25     1.55112e+25
        50     3.04141e+64
       100    9.33262e+157
       150    5.71338e+262

R8_FACTORIAL_VALUES_TEST:
  Normal end of execution.

R8_RISE_VALUES_TEST:
  Python version: 2.7.17
  R8_RISE_VALUES returns values of the rising factorial.

          X         N          R8_RISE(X,N)

    5.0000         4                      1680
    5.2500         4             1962.59765625
    5.5000         4                 2279.0625
    5.7500         4             2631.97265625
    6.0000         4                      3024
    7.5000         0                         1
    7.5000         1                       7.5
    7.5000         2                     63.75
    7.5000         3                   605.625
    7.5000         4                 6359.0625
    7.5000         5               73129.21875
    7.5000         6             914115.234375
    7.5000         7          12340555.6640625
    7.5000         8         178938057.1289063
    7.5000         9         2773539885.498047

R8_RISE_VALUES_TEST:
  Normal end of execution.

SHI_VALUES_TEST:
  Python version: 2.7.17
  SHI_VALUES stores values of the SHI function.

      X         SHI(X)

      0.500000        0.5069967498196672
      0.600000        0.6121303965633808
      0.700000        0.7193380189288998
      0.800000        0.8289965633789345
      0.900000        0.9414978265114335
      1.000000        1.0572508753757290
      1.200000        1.3002503610220570
      1.400000        1.5617133883610019
      1.600000        1.8458141413585041
      1.800000        2.1572903434259012
      2.000000        2.5015674333549760
      2.500000        3.5493404062244349
      3.000000        4.9734404758598068
      3.500000        6.9661620675049418
      4.000000        9.8173269112330335
      4.500000       13.9678850493471494

SHI_VALUES_TEST:
  Normal end of execution.

SI_VALUES_TEST:
  Python version: 2.7.17
  SI_VALUES stores values of the SI function.

      X         SI(X)

      0.500000        0.4931074180430667
      0.600000        0.5881288096080801
      0.700000        0.6812222391166113
      0.800000        0.7720957854819966
      0.900000        0.8604707107452929
      1.000000        0.9460830703671830
      1.200000        1.1080471990137191
      1.400000        1.2562267327792180
      1.600000        1.3891804858704380
      1.800000        1.5058167802555791
      2.000000        1.6054129768026950
      2.500000        1.7785201734438270
      3.000000        1.8486525279994681
      3.500000        1.8331253986659970
      4.000000        1.7582031389490529
      4.500000        1.6541404143792440

SI_VALUES_TEST:
  Normal end of execution.

SIN_VALUES_TEST:
  Python version: 2.7.17
  SIN_VALUES stores values of the SIN function.

      X         SIN(X)

      0.000000        0.0000000000000000
      0.261799        0.2588190451025207
      0.500000        0.4794255386042030
      0.523599        0.5000000000000000
      0.785398        0.7071067811865476
      1.000000        0.8414709848078965
      1.047198        0.8660254037844386
      1.570796        1.0000000000000000
      2.000000        0.9092974268256817
      3.000000        0.1411200080598672
      3.141593        0.0000000000000000
      4.000000       -0.7568024953079282
      5.000000       -0.9589242746631385

SIN_VALUES_TEST:
  Normal end of execution.

SIN_DEGREE_VALUES_TEST:
  Python version: 2.7.17
  SIN_DEGREE_VALUES stores values of the SIN function.

      X         SIN(X)

     -5.000000       -0.0871557427476582
      0.000000        0.0000000000000000
      1.000000        0.0174524064372835
      2.000000        0.0348994967025010
      3.000000        0.0523359562429438
      4.000000        0.0697564737441253
      5.000000        0.0871557427476582
     10.000000        0.1736481776669304
     15.000000        0.2588190451025207
     30.000000        0.5000000000000000
     45.000000        0.7071067811865476
     60.000000        0.8660254037844386
     75.000000        0.9659258262890683
     85.000000        0.9961946980917455
     86.000000        0.9975640502598242
     87.000000        0.9986295347545738
     88.000000        0.9993908270190958
     89.000000        0.9998476951563913
     90.000000        1.0000000000000000
     91.000000        0.9998476951563913
    105.000000        0.9659258262890683
    180.000000        0.0000000000000000

SIN_DEGREE_VALUES_TEST:
  Normal end of execution.

SINH_VALUES_TEST:
  Python version: 2.7.17
  SINH_VALUES stores values of the SINH function.

      X         SINH(X)

     -5.000000      -74.2032105777887523
     -1.000000       -1.1752011936438014
      0.000000        0.0000000000000000
      0.100000        0.1001667500198440
      0.200000        0.2013360025410940
      0.300000        0.3045202934471426
      0.400000        0.4107523258028155
      0.500000        0.5210953054937474
      0.600000        0.6366535821482413
      0.700000        0.7585837018395335
      0.800000        0.8881059821876230
      0.900000        1.0265167257081753
      1.000000        1.1752011936438014
      2.000000        3.6268604078470186
      3.000000       10.0178749274099026
      4.000000       27.2899171971277532
      5.000000       74.2032105777887523
     10.000000    11013.2328747033934633

SINH_VALUES_TEST:
  Normal end of execution.

SQRT_VALUES_TEST:
  Python version: 2.7.17
  SQRT_VALUES stores values of the SQRT function.

      X         SQRT(X)

      0.000000        0.0000000000000000
      0.000000        0.0000900000004095
      0.090000        0.3000000000000000
      0.100000        0.3162277660168379
      0.400000        0.6324555320336759
      1.000000        1.0000000000000000
      2.000000        1.4142135623730949
      3.000000        1.7320508075688770
      3.141593        1.7724538509055161
     19.000000        4.3588989435406740
     29.000000        5.3851648071345037
     71.000000        8.4261497731763590
     97.000000        9.8488578017961057
  123456789.000000    11111.1110605555604707

SQRT_VALUES_TEST:
  Normal end of execution.

TAN_VALUES_TEST:
  Python version: 2.7.17
  TAN_VALUES stores values of the TAN function.

      X         TAN(X)

             0                         0
      0.261799        0.2679491924311227
           0.5        0.5463024898437905
      0.523599        0.5773502691896257
      0.785398                         1
             1         1.557407724654902
        1.0472         1.732050807568877
         1.309         3.732050807568877
        1.4399          7.59575411272515
       1.50535         15.25705168826554
             2        -2.185039863261519
             3       -0.1425465430742778
       3.14159                         0
             4         1.157821282349577
             5        -3.380515006246586

TAN_VALUES_TEST:
  Normal end of execution.

TANH_VALUES_TEST:
  Python version: 2.7.17
  TANH_VALUES stores values of the TANH function.

      X         TANH(X)

            -5       -0.9999092042625951
            -1       -0.7615941559557649
             0                         0
           0.1       0.09966799462495582
           0.2         0.197375320224904
           0.3        0.2913126124515909
           0.4        0.3799489622552249
           0.5        0.4621171572600097
           0.6        0.5370495669980353
           0.7        0.6043677771171635
           0.8         0.664036770267849
           0.9        0.7162978701990245
             1        0.7615941559557649
             2        0.9640275800758169
             3        0.9950547536867305
             4         0.999329299739067
             5        0.9999092042625951
            10        0.9999999958776927

TANH_VALUES_TEST:
  Normal end of execution.

I4_MACH_TEST
  Python version: 2.7.17
  I4_MACH reports the value of constants associated
  with integer computer arithmetic.

  Numbers associated with input/output units:

  I4_MACH(1) = the standard input unit.
  5

  I4_MACH(2) = the standard output unit.
  6

  I4_MACH(3) = the standard punch unit.
  7

  I4_MACH(4) = the standard error message unit.
  6

  Numbers associated with words:

  I4_MACH(5) = the number of bits per integer.
  32

  I4_MACH(6) = the number of characters per integer.
  4

  Numbers associated with integer values:

  Assume integers are represented in the S digit
  base A form:

    Sign * (X(S-1)*A^(S-1) + ... + X(1)*A + X(0))

  where the digits X satisfy 0 <= X(1:S-1) < A.

  I4_MACH(7) = A, the base.
  2

  I4_MACH(8) = S, the number of base A digits.
  31

  I4_MACH(9) = A^S-1, the largest integer.
  2147483647

  Numbers associated with floating point values:

  Assume floating point numbers are represented 
  in the T digit base B form:

    Sign * (B^E) * ((X(1)/B) + ... + (X(T)/B^T) )

  where

    0 <= X(1:T) < B,
    0 < X(1) (unless the value being represented is 0),
    EMIN <= E <= EMAX.

  I4_MACH(10) = B, the base.
  2

  Numbers associated with single precision values:

  I4_MACH(11) = T, the number of base B digits.
  24

  I4_MACH(12) = EMIN, the smallest exponent E.
  -125

  I4_MACH(13) = EMAX, the largest exponent E.
  128

  Numbers associated with double precision values:

  I4_MACH(14) = T, the number of base B digits.
  53

  I4_MACH(15) = EMIN, the smallest exponent E.
  -1021

  I4_MACH(16) = EMAX, the largest exponent E.
  1024

I4_MACH_TEST
  Normal end of execution.

R8_ACOS_TEST:
  Python version: 2.7.17
  R8_ACOS evaluates the arc-cosine function

             X      ARCCOS(X)  R8_ACOS(X)         Diff

            -0.1         1.67096         1.67096     2.22045e-16
               0          1.5708          1.5708               0
             0.1         1.47063         1.47063               0
             0.2         1.36944         1.36944     2.22045e-16
             0.3          1.2661          1.2661     2.22045e-16
             0.4         1.15928         1.15928               0
             0.5          1.0472          1.0472               0
             0.6        0.927295        0.927295               0
             0.7        0.795399        0.795399               0
             0.8        0.643501        0.643501     1.11022e-16
             0.9        0.451027        0.451027     5.55112e-17
               1               0               0               0

R8_ACOS_TEST:
  Normal end of execution.

R8_ACOSH_TEST:
  Python version: 2.7.17
  R8_ACOSH evaluates the hyperbolic arccosine function

             X      ARCCOSH(X)  R8_ACOSH(X)        Diff

               1               0               0               0
            1.01        0.141304        0.141304     8.32667e-17
             1.1        0.443568        0.443568     1.11022e-16
             1.2        0.622363        0.622363     1.11022e-16
             1.3        0.756433        0.756433               0
             1.4        0.867015        0.867015     1.11022e-16
             1.5        0.962424        0.962424               0
               2         1.31696         1.31696     2.22045e-16
               3         1.76275         1.76275               0
           3.142         1.81153         1.81153               0
               4         2.06344         2.06344     4.44089e-16
               5         2.29243         2.29243               0
              10         2.99322         2.99322               0
             100         5.29829         5.29829               0
            1000          7.6009          7.6009               0

R8_ACOSH_TEST:
  Normal end of execution.

R8_AI_TEST:
  Python version: 2.7.17
  R8_AI evaluates the Airy function Ai(X)

             X      AIRY_AI(X)  R8_AI(X)        Diff

               0        0.355028        0.355028               0
             0.1        0.329203        0.329203               0
             0.2        0.303703        0.303703               0
             0.3        0.278806        0.278806     5.55112e-17
             0.4        0.254742        0.254742     5.55112e-17
             0.5        0.231694        0.231694     5.55112e-17
             0.6          0.2098          0.2098     8.32667e-17
             0.7        0.189162        0.189162     2.77556e-17
             0.8        0.169846        0.169846     1.38778e-16
             0.9        0.151887        0.151887     8.32667e-17
               1        0.135292        0.135292     8.32667e-17

R8_AI_TEST:
  Normal end of execution.

R8_AID_TEST:
  Python version: 2.7.17
  R8_AID evaluates the derivative of the Airy function Ai(x)

             X     AIRY_AID(X)  R8_AID(X)        Diff

          0.0000       -0.258819       -0.258819               0
          0.1000        -0.25713        -0.25713     1.11022e-16
          0.2000       -0.252405       -0.252405     1.66533e-16
          0.3000       -0.245146       -0.245146     3.88578e-16
          0.4000       -0.235832       -0.235832     5.82867e-16
          0.5000       -0.224911       -0.224911     6.66134e-16
          0.6000       -0.212793       -0.212793     1.11022e-16
          0.7000       -0.199851       -0.199851     1.41553e-15
          0.8000       -0.186413       -0.186413     3.02536e-15
          0.9000       -0.172764       -0.172764      9.4369e-16
          1.0000       -0.159147       -0.159147      4.7462e-15

R8_AID_TEST:
  Normal end of execution.

R8_AINT_TEST:
  Python version: 2.7.17
  R8_AINT rounds an R8 towards 0.

             X         AINT(X)  R8_AINT(X)        Diff

         -2.0100              -2              -2               0
         -1.9900              -1              -1               0
         -1.5000              -1              -1               0
         -1.1000              -1              -1               0
         -1.0100              -1              -1               0
         -1.0000              -1              -1               0
         -0.9900               0              -0               0
         -0.9000               0              -0               0
         -0.5100               0              -0               0
         -0.5000               0              -0               0
         -0.4900               0              -0               0
         -0.0100               0              -0               0
          0.0000               0               0               0
          0.0100               0               0               0
          0.4900               0               0               0
          0.5000               0               0               0
          0.5100               0               0               0
          0.9000               0               0               0
          0.9900               0               0               0
          1.0000               1               1               0
          1.0100               1               1               0
          1.1000               1               1               0
          1.5000               1               1               0
          1.9900               1               1               0
          2.0100               2               2               0

R8_AINT_TEST:
  Normal end of execution.

R8_ASIN_TEST:
  Python version: 2.7.17
  R8_ASIN evaluates the arc-sine function

             X      ARCSIN(X)  R8_ASIN(X)         Diff

         -0.1000       -0.100167       -0.100167               0
          0.0000               0               0               0
          0.1000        0.100167        0.100167               0
          0.2000        0.201358        0.201358               0
          0.3000        0.304693        0.304693               0
          0.4000        0.411517        0.411517     5.55112e-17
          0.5000        0.523599        0.523599     1.11022e-16
          0.6000        0.643501        0.643501               0
          0.7000        0.775397        0.775397     1.11022e-16
          0.8000        0.927295        0.927295     1.11022e-16
          0.9000         1.11977         1.11977               0
          1.0000          1.5708          1.5708               0

R8_ASIN_TEST:
  Normal end of execution.

R8_ASINH_TEST:
  Python version: 2.7.17
  R8_ASINH evaluates the arc hyperbolic sine function

             X     ARCSINH(X)  R8_ASINH(X)         Diff

         -5.0000        -2.31244        -2.31244               0
         -1.0000       -0.881374       -0.881374               0
          0.0000               0               0               0
          0.1000       0.0998341       0.0998341     1.38778e-17
          0.2000         0.19869         0.19869               0
          0.3000        0.295673        0.295673               0
          0.4000        0.390035        0.390035     5.55112e-17
          0.5000        0.481212        0.481212     5.55112e-17
          0.6000        0.568825        0.568825               0
          0.7000        0.652667        0.652667               0
          0.8000        0.732668        0.732668     1.11022e-16
          0.9000        0.808867        0.808867               0
          1.0000        0.881374        0.881374               0
          2.0000         1.44364         1.44364               0
          3.0000         1.81845         1.81845               0
          4.0000         2.09471         2.09471               0
          5.0000         2.31244         2.31244               0
         10.0000         2.99822         2.99822               0
        100.0000         5.29834         5.29834               0
       1000.0000          7.6009          7.6009               0

R8_ASINH_TEST:
  Normal end of execution.

R8_ATAN_TEST:
  Python version: 2.7.17
  R8_ATAN evaluates the arc tangent function.

             X      ARCTAN(X)  R8_ATAN(X)         Diff

               0               0               0               0
            0.25        0.244979        0.244979     1.38778e-16
          0.3333        0.321751        0.321751     5.55112e-17
             0.5        0.463648        0.463648               0
               1        0.785398        0.785398               0
               2         1.10715         1.10715     2.22045e-16
               3         1.24905         1.24905               0
               4         1.32582         1.32582     2.22045e-16
               5          1.3734          1.3734     2.22045e-16
              10         1.47113         1.47113               0
              20         1.52084         1.52084               0

R8_ATAN_TEST:
  Normal end of execution.

R8_ATAN2_TEST:
  Python version: 2.7.17
  R8_ATAN2 evaluates the arctangent function

             X               Y   ARCTAN2(Y,X)  R8_ATAN2(Y,X)         Diff

               0         -1.0000         -1.5708         -1.5708               0
             0.5         -0.8660         -1.0472         -1.0472     2.22045e-16
           0.866         -0.5000       -0.523599       -0.523599     1.11022e-16
               1          0.0000               0               0               0
           0.866          0.5000        0.523599        0.523599     1.11022e-16
             0.5          0.8660          1.0472          1.0472     2.22045e-16
               0          1.0000          1.5708          1.5708               0
            -0.5          0.8660          2.0944          2.0944               0
          -0.866          0.5000         2.61799         2.61799     4.44089e-16
              -1          0.0000         3.14159         3.14159               0
          -0.866         -0.5000        -2.61799        -2.61799     4.44089e-16
            -0.5         -0.8660         -2.0944         -2.0944               0
               0         -1.0000         -1.5708         -1.5708               0
             0.5         -0.8660         -1.0472         -1.0472     2.22045e-16
           0.866         -0.5000       -0.523599       -0.523599     1.11022e-16
               1          0.0000               0               0               0
           0.866          0.5000        0.523599        0.523599     1.11022e-16
             0.5          0.8660          1.0472          1.0472     2.22045e-16
               0          1.0000          1.5708          1.5708               0

R8_ATAN2_TEST:
  Normal end of execution.

R8_ATANH_TEST:
  Python version: 2.7.17
  R8_ATANH evaluates the hyperbolic arctangent function.

             X     ARCTANH(X)  R8_ATANH(X)         Diff

       -0.500000       -0.549306       -0.549306     1.11022e-16
        0.000000               0               0               0
        0.001000           0.001           0.001      2.1684e-19
        0.100000        0.100335        0.100335               0
        0.200000        0.202733        0.202733               0
        0.300000         0.30952         0.30952               0
        0.400000        0.423649        0.423649     5.55112e-17
        0.500000        0.549306        0.549306     1.11022e-16
        0.600000        0.693147        0.693147               0
        0.700000        0.867301        0.867301               0
        0.800000         1.09861         1.09861               0
        0.900000         1.47222         1.47222     2.22045e-16
        0.990000         2.64665         2.64665     4.44089e-16
        0.999000          3.8002          3.8002               0
        0.999999         7.25433         7.25433     1.43778e-11

R8_ATANH_TEST:
  Normal end of execution.

R8_BESI0_TEST:
  Python version: 2.7.17
  R8_BESI0 evaluates the Bessel I0(x) function.

             X       BESI0(X)  R8_BESI0(X)         Diff

          0.0000               1               1               0
          0.2000         1.01003         1.01003     2.22045e-16
          0.4000          1.0404          1.0404     8.88178e-16
          0.6000         1.09205         1.09205               0
          0.8000         1.16651         1.16651     6.66134e-16
          1.0000         1.26607         1.26607     2.22045e-16
          1.2000         1.39373         1.39373     8.88178e-16
          1.4000          1.5534          1.5534     2.22045e-16
          1.6000         1.74998         1.74998     2.22045e-16
          1.8000         1.98956         1.98956     4.44089e-16
          2.0000         2.27959         2.27959     4.44089e-16
          2.5000         3.28984         3.28984     4.44089e-16
          3.0000         4.88079         4.88079               0
          3.5000          7.3782          7.3782     8.88178e-16
          4.0000         11.3019         11.3019     1.77636e-15
          4.5000         17.4812         17.4812     3.55271e-15
          5.0000         27.2399         27.2399     7.10543e-15
          6.0000         67.2344         67.2344     1.42109e-14
          8.0000         427.564         427.564     5.68434e-14
         10.0000         2815.72         2815.72     4.54747e-13

R8_BESI0_TEST:
  Normal end of execution.

R8_BESI1_TEST:
  Python version: 2.7.17
  R8_BESI1 evaluates the Bessel I1(x) function

             X       BESI1(X)  R8_BESI1(X)         Diff

          0.0000               0               0               0
          0.2000        0.100501        0.100501     1.38778e-17
          0.4000        0.204027        0.204027     2.77556e-17
          0.6000        0.313704        0.313704     5.55112e-17
          0.8000        0.432865        0.432865     5.55112e-17
          1.0000        0.565159        0.565159               0
          1.2000        0.714678        0.714678               0
          1.4000        0.886092        0.886092     2.22045e-16
          1.6000         1.08481         1.08481     4.44089e-16
          1.8000         1.31717         1.31717               0
          2.0000         1.59064         1.59064               0
          2.5000         2.51672         2.51672     4.44089e-16
          3.0000         3.95337         3.95337     4.44089e-16
          3.5000         6.20583         6.20583               0
          4.0000         9.75947         9.75947     1.77636e-15
          4.5000         15.3892         15.3892     3.55271e-15
          5.0000         24.3356         24.3356     3.55271e-15
          6.0000         61.3419         61.3419     7.10543e-15
          8.0000         399.873         399.873               0
         10.0000         2670.99         2670.99     4.54747e-13

R8_BESI1_TEST:
  Normal end of execution.

R8_BESJ0_TEST:
  Python version: 2.7.17
  R8_BESJ0 evaluates the Bessel J0(x) function

             X       BESJ0(X)  R8_BESJ0(X)         Diff

              -5       -0.177597       -0.177597     1.38778e-16
              -4        -0.39715        -0.39715     1.05471e-15
              -3       -0.260052       -0.260052     1.05471e-15
              -2        0.223891        0.223891     5.55112e-16
              -1        0.765198        0.765198     8.88178e-16
               0               1               1               0
               1        0.765198        0.765198     8.88178e-16
               2        0.223891        0.223891     5.55112e-16
               3       -0.260052       -0.260052     1.05471e-15
               4        -0.39715        -0.39715     1.05471e-15
               5       -0.177597       -0.177597     1.38778e-16
               6        0.150645        0.150645     5.55112e-17
               7        0.300079        0.300079               0
               8        0.171651        0.171651     2.77556e-17
               9      -0.0903336      -0.0903336     2.91434e-16
              10       -0.245936       -0.245936     5.55112e-17
              11        -0.17119        -0.17119     5.55112e-17
              12       0.0476893       0.0476893     2.70617e-16
              13        0.206926        0.206926     8.32667e-17
              14        0.171073        0.171073               0
              15      -0.0142245      -0.0142245     1.30104e-16

R8_BESJ0_TEST:
  Normal end of execution.

R8_BESJ1_TEST:
  Python version: 2.7.17
  R8_BESJ1 evaluates the Bessel J1(x) function

             X       BESJ1(X)  R8_BESJ1(X)         Diff

         -5.0000        0.327579        0.327579     1.11022e-16
         -4.0000       0.0660433       0.0660433     6.93889e-17
         -3.0000       -0.339059       -0.339059     1.11022e-16
         -2.0000       -0.576725       -0.576725     1.11022e-16
         -1.0000       -0.440051       -0.440051               0
          0.0000               0               0               0
          1.0000        0.440051        0.440051               0
          2.0000        0.576725        0.576725     1.11022e-16
          3.0000        0.339059        0.339059     1.11022e-16
          4.0000      -0.0660433      -0.0660433     6.93889e-17
          5.0000       -0.327579       -0.327579     1.11022e-16
          6.0000       -0.276684       -0.276684               0
          7.0000     -0.00468282     -0.00468282     9.28077e-17
          8.0000        0.234636        0.234636               0
          9.0000        0.245312        0.245312     2.77556e-17
         10.0000       0.0434727       0.0434727     5.55112e-17
         11.0000       -0.176785       -0.176785     2.77556e-16
         12.0000       -0.223447       -0.223447     1.11022e-16
         13.0000      -0.0703181      -0.0703181     2.08167e-16
         14.0000        0.133375        0.133375               0
         15.0000        0.205104        0.205104     5.55112e-17

R8_BESJ1_TEST:
  Normal end of execution.

R8_BESK0_TEST:
  Python version: 2.7.17
  R8_BESK0 evaluates Bessel functions K0(X)

             X       BESK0(X)  R8_BESK0(X)         Diff

          0.1000         2.42707         2.42707     1.77636e-15
          0.2000          1.7527          1.7527     6.66134e-16
          0.4000         1.11453         1.11453     1.33227e-15
          0.6000        0.777522        0.777522     6.66134e-16
          0.8000        0.565347        0.565347     3.33067e-16
          1.0000        0.421024        0.421024       4.996e-16
          1.2000        0.318508        0.318508       4.996e-16
          1.4000        0.243655        0.243655     3.60822e-16
          1.6000        0.187955        0.187955     5.55112e-17
          1.8000        0.145931        0.145931     2.77556e-17
          2.0000        0.113894        0.113894       1.249e-16
          2.5000       0.0623476       0.0623476               0
          3.0000       0.0347395       0.0347395     6.93889e-18
          3.5000       0.0195989       0.0195989               0
          4.0000       0.0111597       0.0111597     3.46945e-18
          4.5000      0.00639986      0.00639986               0
          5.0000       0.0036911       0.0036911     4.33681e-19
          6.0000      0.00124399      0.00124399      2.1684e-19
          8.0000     0.000146471     0.000146471               0
         10.0000     1.77801e-05     1.77801e-05     3.38813e-21

R8_BESK0_TEST:
  Normal end of execution.

R8_BESK_TEST:
  Python version: 2.7.17
  R8_BESK evaluates Bessel K functtions K(NU,X).

              NU             X       BESK(X)  R8_BESK(X)         Diff

             0.5          0.2000         2.29449         2.29449     4.44089e-16
             0.5          1.0000        0.461069        0.461069     1.66533e-16
             0.5          2.0000        0.119938        0.119938     2.77556e-16
             0.5          2.5000       0.0650659       0.0650659     1.38778e-17
             0.5          3.0000        0.036026        0.036026     6.93889e-18
             0.5          5.0000      0.00377661      0.00377661     4.33681e-19
             0.5         10.0000     1.79935e-05     1.79935e-05               0
             0.5         20.0000     5.77637e-10     5.77637e-10               0
             1.5          1.0000        0.922137        0.922137     1.11022e-16
             1.5          2.0000        0.179907        0.179907     1.38778e-16
             1.5          5.0000      0.00453194      0.00453194               0
             1.5         10.0000     1.97928e-05     1.97928e-05               0
             1.5         50.0000     3.48699e-23     3.48699e-23     5.87747e-39
             2.5          1.0000         3.22748         3.22748     4.44089e-16
             2.5          2.0000        0.389798        0.389798     5.55112e-17
             2.5          5.0000      0.00649578      0.00649578               0
             2.5         10.0000     2.39313e-05     2.39313e-05               0
             2.5         50.0000     3.62784e-23     3.62784e-23               0
            1.25          1.0000        0.731145        0.731145     1.11022e-16
            1.25          2.0000        0.156748        0.156748     1.94289e-16
            1.25          5.0000      0.00425739      0.00425739     3.46945e-18
            1.25         10.0000     1.91554e-05     1.91554e-05               0
            1.25         50.0000     3.46334e-23     3.46334e-23     1.76324e-38
            2.75          1.0000         4.73118         4.73118               0
            2.75          2.0000        0.497688        0.497688     1.11022e-16
            2.75          5.0000      0.00730086      0.00730086     1.73472e-18
            2.75         10.0000     2.54642e-05     2.54642e-05     6.77626e-21
            2.75         50.0000     3.67528e-23     3.67528e-23     1.17549e-38

R8_BESK_TEST:
  Normal end of execution.

R8_BESK1_TEST:
  Python version: 2.7.17
  R8_BESK1 evaluates Bessel functions K1(x)

             X       BESK1(X)  R8_BESK1(X)         Diff

          0.1000         9.85384         9.85384     1.59872e-14
          0.2000         4.77597         4.77597     3.55271e-15
          0.4000         2.18435         2.18435     5.77316e-15
          0.6000         1.30283         1.30283     2.66454e-15
          0.8000        0.861782        0.861782     1.11022e-15
          1.0000        0.601907        0.601907     2.44249e-15
          1.2000        0.434592        0.434592     1.11022e-15
          1.4000        0.320836        0.320836     3.33067e-16
          1.6000        0.240634        0.240634     8.04912e-16
          1.8000        0.182623        0.182623     4.44089e-16
          2.0000        0.139866        0.139866       1.249e-15
          2.5000       0.0738908       0.0738908               0
          3.0000       0.0401564       0.0401564     6.93889e-18
          3.5000       0.0222394       0.0222394     3.46945e-18
          4.0000       0.0124835       0.0124835               0
          4.5000      0.00707809      0.00707809               0
          5.0000      0.00404461      0.00404461     8.67362e-19
          6.0000      0.00134392      0.00134392      2.1684e-19
          8.0000     0.000155369     0.000155369     2.71051e-20
         10.0000     1.86488e-05     1.86488e-05     3.38813e-21

R8_BESK1_TEST:
  Normal end of execution.

R8_BESY0_TEST:
  Python version: 2.7.17
  R8_BESY0 evaluates the Bessel Y0(X) function.

             X       BESY0(X)  R8_BESY0(X)         Diff

             0.1        -1.53424        -1.53424      1.9984e-15
               1        0.088257        0.088257       3.747e-16
               2        0.510376        0.510376               0
               3         0.37685         0.37685     3.33067e-16
               4      -0.0169407      -0.0169407     4.47559e-16
               5       -0.308518       -0.308518     5.55112e-17
               6       -0.288195       -0.288195               0
               7      -0.0259497      -0.0259497     1.11022e-16
               8        0.223521        0.223521     5.55112e-17
               9        0.249937        0.249937     5.55112e-17
              10       0.0556712       0.0556712     9.71445e-17
              11       -0.168847       -0.168847               0
              12       -0.225237       -0.225237     8.32667e-17
              13      -0.0782079      -0.0782079     2.91434e-16
              14        0.127193        0.127193     2.77556e-17
              15        0.205464        0.205464     2.77556e-17

R8_BESY0_TEST:
  Normal end of execution.

R8_BESY1_TEST:
  Python version: 2.7.17
  R8_BESY1 evaluates the Bessel Y1(x) function

             X       BESY1(X)  R8_BESY1(X)         Diff

             0.1        -6.45895        -6.45895     8.88178e-16
               1       -0.781213       -0.781213     3.33067e-16
               2       -0.107032       -0.107032     2.22045e-16
               3        0.324674        0.324674               0
               4        0.397926        0.397926     5.55112e-17
               5        0.147863        0.147863     2.77556e-17
               6        -0.17501        -0.17501     2.77556e-17
               7       -0.302667       -0.302667     1.11022e-16
               8        -0.15806        -0.15806     5.55112e-17
               9        0.104315        0.104315     1.38778e-17
              10        0.249015        0.249015     5.55112e-17
              11        0.163706        0.163706     3.05311e-16
              12      -0.0570992      -0.0570992     4.09395e-16
              13       -0.210081       -0.210081     8.32667e-17
              14       -0.166645       -0.166645     5.55112e-17
              15       0.0210736       0.0210736     4.85723e-17

R8_BESY1_TEST:
  Normal end of execution.

R8_BETA_TEST:
  Python version: 2.7.17
  R8_BETA evaluates the Beta function.

             A               B      BETA(A,B)  R8_BETA(A,B)         Diff

             0.2               1               5               5     8.88178e-16
             0.4               1             2.5             2.5     4.44089e-16
             0.6               1         1.66667         1.66667     6.66134e-16
             0.8               1            1.25            1.25     2.22045e-16
               1             0.2               5               5     8.88178e-16
               1             0.4             2.5             2.5     4.44089e-16
               1               1               1               1               0
               2               2        0.166667        0.166667     5.55112e-17
               3               3       0.0333333       0.0333333               0
               4               4      0.00714286      0.00714286               0
               5               5       0.0015873       0.0015873      2.1684e-19
               6               2       0.0238095       0.0238095     3.46945e-18
               6               3      0.00595238      0.00595238               0
               6               4      0.00198413      0.00198413               0
               6               5     0.000793651     0.000793651     1.84314e-18
               6               6      0.00036075      0.00036075      1.6263e-18
               7               7     8.32501e-05     8.32501e-05     1.49078e-19

R8_BETA_TEST:
  Normal end of execution.

R8_BETAI_TEST:
  Python version: 2.7.17
  R8_BETAI evaluates the incomplete Beta function.

             X               A               B     BETAI(A,B)  R8_BETAI(A,B)  Diff

          0.0100          0.5000             0.5       0.0637686       0.0637686               0
          0.1000          0.5000             0.5        0.204833        0.204833     5.55112e-17
          1.0000          0.5000             0.5               1               1               0
          0.0000          1.0000             0.5               0               0               0
          0.0100          1.0000             0.5      0.00501256      0.00501256     3.46945e-18
          0.1000          1.0000             0.5       0.0513167       0.0513167     1.38778e-17
          0.5000          1.0000             0.5        0.292893        0.292893     1.11022e-16
          0.5000          1.0000               1             0.5             0.5               0
          0.1000          2.0000               2           0.028           0.028     1.04083e-17
          0.2000          2.0000               2           0.104           0.104     1.38778e-17
          0.3000          2.0000               2           0.216           0.216     8.32667e-17
          0.4000          2.0000               2           0.352           0.352     5.55112e-17
          0.5000          2.0000               2             0.5             0.5               0
          0.6000          2.0000               2           0.648           0.648     1.11022e-16
          0.7000          2.0000               2           0.784           0.784     1.11022e-16
          0.8000          2.0000               2           0.896           0.896               0
          0.9000          2.0000               2           0.972           0.972               0
          0.5000          5.5000               5        0.436191        0.436191     7.77156e-16
          0.9000         10.0000             0.5        0.151641        0.151641     1.44329e-15
          0.5000         10.0000               5       0.0897827       0.0897827     2.63678e-16
          1.0000         10.0000               5               1               1               0
          0.5000         10.0000              10             0.5             0.5     1.11022e-16
          0.8000         20.0000               5        0.459877        0.459877     1.11022e-16
          0.6000         20.0000              10        0.214682        0.214682     1.08247e-15
          0.8000         20.0000              10        0.950736        0.950736     2.22045e-16
          0.5000         20.0000              20             0.5             0.5               0
          0.6000         20.0000              20        0.897941        0.897941     2.55351e-15
          0.7000         30.0000              10         0.22413         0.22413     4.16334e-16
          0.8000         30.0000              10        0.758641        0.758641     3.33067e-16
          0.7000         40.0000              20        0.700178        0.700178     5.55112e-16
          0.1000          1.0000             0.5       0.0513167       0.0513167     1.38778e-17
          0.2000          1.0000             0.5        0.105573        0.105573     1.38778e-17
          0.3000          1.0000             0.5         0.16334         0.16334               0
          0.4000          1.0000             0.5        0.225403        0.225403     8.32667e-17
          0.2000          1.0000               2            0.36            0.36               0
          0.2000          1.0000               3           0.488           0.488     1.11022e-16
          0.2000          1.0000               4          0.5904          0.5904     1.11022e-16
          0.2000          1.0000               5         0.67232         0.67232     1.11022e-16
          0.3000          2.0000               2           0.216           0.216     8.32667e-17
          0.3000          3.0000               2          0.0837          0.0837     5.55112e-17
          0.3000          4.0000               2         0.03078         0.03078     1.73472e-17
          0.3000          5.0000               2        0.010935        0.010935     3.46945e-18
          0.2256          1.3062           11.76        0.918885        0.918885     2.22045e-16
          0.0336          1.3062           11.76         0.21053         0.21053     3.88578e-16
          0.0295          1.3062           11.76        0.182413        0.182413       2.498e-16

R8_BETAI_TEST:
  Normal end of execution.

R8_BI_TEST:
  Python version: 2.7.17
  R8_BI evaluates the Airy Bi(X) function

             X      AIRY_BI(X)  R8_BI(X)        Diff

               0        0.614927        0.614927               0
             0.1        0.659862        0.659862     1.11022e-16
             0.2        0.705464        0.705464               0
             0.3        0.752486        0.752486     1.11022e-16
             0.4        0.801773        0.801773     2.22045e-16
             0.5        0.854277        0.854277     1.11022e-16
             0.6        0.911063        0.911063     2.22045e-16
             0.7        0.973329        0.973329     1.11022e-16
             0.8         1.04242         1.04242     2.22045e-16
             0.9         1.11987         1.11987               0
               1         1.20742         1.20742     2.22045e-16

R8_BI_TEST:
  Normal end of execution.

R8_BID_TEST:
  Python version: 2.7.17
  R8_BID evaluates the derivative of the Airy function Bi(X)

             X     AIRY_BID(X)  R8_BID(X)        Diff

          0.0000        0.448288        0.448288     5.55112e-17
          0.1000        0.451513        0.451513     5.55112e-17
          0.2000        0.461789        0.461789     4.44089e-16
          0.3000        0.480049        0.480049      9.4369e-16
          0.4000        0.507282        0.507282     1.66533e-15
          0.5000        0.544573        0.544573      1.9984e-15
          0.6000        0.593144        0.593144     1.44329e-15
          0.7000        0.654406        0.654406     1.77636e-15
          0.8000        0.730007        0.730007     5.88418e-15
          0.9000        0.821904        0.821904     9.99201e-16
          1.0000        0.932436        0.932436     9.32587e-15

R8_BID_TEST:
  Normal end of execution.

R8_BINOM_TEST:
  Python version: 2.7.17
  R8_BINOM evaluates the binomial coefficient.

             A               B     BINOM(A,B)  R8_BINOM(A,B)         Diff

               1               0               1               1               0
               6               1               6               6               0
               6               3              20              20               0
               6               5               6               6               0
              15               1              15              15               0
              15               3             455             455               0
              15               5            3003            3003               0
              15               7            6435            6435               0
              15               9            5005            5005               0
              15              11            1365            1365               0
              15              13             105             105               0
              25               1              25              25               0
              25               3            2300            2300               0
              25               5           53130           53130               0
              25               7          480700          480700               0
              25               9         2042975         2042975               0
              25              11         4457400         4457400               0
              25              13         5200300         5200300               0
              25              15         3268760         3268760               0
              25              17         1081575         1081575               0

R8_BINOM_TEST:
  Normal end of execution.

R8_CBRT_TEST:
  Python version: 2.7.17
  R8_CBRT evaluates the cube root function.

             X        CBRT(X)  R8_CBRT(X)         Diff

               0               0               0               0
        -8.1e-09      -0.0020083      -0.0020083     4.33681e-19
            0.09         0.44814         0.44814               0
            -0.1       -0.464159       -0.464159     5.55112e-17
             0.4        0.736806        0.736806     1.11022e-16
              -1              -1              -1               0
               2         1.25992         1.25992               0
              -3        -1.44225        -1.44225     2.22045e-16
           3.142         1.46459         1.46459               0
             -19         -2.6684         -2.6684     4.44089e-16
              29         3.07232         3.07232     4.44089e-16
             -71        -4.14082        -4.14082               0
              97          4.5947          4.5947     8.88178e-16
      -1.235e+08        -497.934        -497.934               0

R8_CBRT_TEST:
  Normal end of execution.

R8_CHI_TEST:
  Python version: 2.7.17
  R8_CHI evaluates the hyperbolic cosine integral.

             X          CHI(X)  R8_CHI(X)        Diff

          0.5000      -0.0527768      -0.0527768     7.63278e-17
          0.6000        0.157751        0.157751     1.94289e-16
          0.7000        0.345569        0.345569     1.11022e-16
          0.8000          0.5184          0.5184     2.22045e-16
          0.9000        0.681314        0.681314     2.22045e-16
          1.0000        0.837867        0.837867     3.33067e-16
          1.2000         1.14184         1.14184     2.22045e-16
          1.4000         1.44549         1.44549     2.22045e-16
          1.6000         1.75951         1.75951               0
          1.8000         2.09258         2.09258     8.88178e-16
          2.0000         2.45267         2.45267     4.44089e-16
          2.5000         3.52443         3.52443     4.44089e-16
          3.0000         4.96039         4.96039     8.88178e-16
          3.5000         6.95919         6.95919               0
          4.0000         9.81355         9.81355     1.77636e-15
          4.5000         13.9658         13.9658     3.55271e-15

R8_CHI_TEST:
  Normal end of execution.

R8_CHU_TEST:
  Python version: 2.7.17
  R8_CHU evaluates the hypergeometric U function.

             A               B               X     CHU(A,B,X)  R8_CHU(A,B,X)  Diff

         -2.5000          3.3000            0.25        -68.6936        -68.6936     5.68434e-14
         -0.5000          1.1000            0.25     -0.00297106     -0.00297106     4.75748e-16
          0.5000          1.1000            0.25         1.50086         1.50086     1.11022e-15
          2.5000          3.3000            0.25         20.6147         20.6147     1.06581e-14
         -2.5000          3.3000            1.55         7.45638         7.45638     1.77636e-15
         -0.5000          1.1000            1.55         1.01558         1.01558     2.22045e-16
          0.5000          1.1000            1.55        0.734465        0.734465     9.99201e-16
          2.5000          3.3000            1.55        0.280464        0.280464     1.66533e-16
         -2.5000          3.3000            2.85         3.45082         3.45082     5.77316e-15
         -0.5000          1.1000            2.85         1.51566         1.51566     4.44089e-16
          0.5000          1.1000            2.85        0.560421        0.560421     1.11022e-16
          2.5000          3.3000            2.85       0.0648971       0.0648971               0
          0.8250          6.7000            0.25          223432          223432     5.82077e-11
          1.1000          6.7000            0.25          263079          263079     1.74623e-10
          1.6500          6.7000            0.25          269803          269803     1.16415e-10
          3.3000          6.7000            0.25         82809.3         82809.3     4.36557e-11
          0.8250          6.7000            1.55         26.4657         26.4657     3.55271e-15
          1.1000          6.7000            1.55         28.0935         28.0935     7.10543e-15
          1.6500          6.7000            1.55         23.8892         23.8892               0
          3.3000          6.7000            1.55         4.53388         4.53388     8.88178e-16
          0.8250          6.7000            2.85         3.02245         3.02245     8.88178e-16
          1.1000          6.7000            2.85         2.80407         2.80407     1.33227e-15
          1.6500          6.7000            2.85         1.92626         1.92626     2.22045e-16
          3.3000          6.7000            2.85        0.230205        0.230205               0

R8_CHU_TEST:
  Normal end of execution.

R8_CI_TEST:
  Python version: 2.7.17
  R8_CI evaluates the cosine integral.

             X           CI(X)  R8_CI(X)        Diff

          0.5000       -0.177784       -0.177784     1.66533e-16
          0.6000      -0.0222707      -0.0222707     4.09395e-16
          0.7000        0.100515        0.100515     1.80411e-16
          0.8000        0.198279        0.198279     1.11022e-16
          0.9000        0.276068        0.276068     5.55112e-17
          1.0000        0.337404        0.337404     1.11022e-16
          1.2000        0.420459        0.420459     5.55112e-17
          1.4000        0.462007        0.462007     5.55112e-17
          1.6000        0.471733        0.471733     3.88578e-16
          1.8000        0.456811        0.456811     2.22045e-16
          2.0000        0.422981        0.422981     1.11022e-16
          2.5000        0.285871        0.285871     2.22045e-16
          3.0000         0.11963         0.11963     1.80411e-16
          3.5000      -0.0321285      -0.0321285     1.94289e-16
          4.0000       -0.140982       -0.140982     1.38778e-16
          4.5000       -0.193491       -0.193491     5.55112e-17

R8_CI_TEST:
  Normal end of execution.

R8_CIN_TEST:
  Python version: 2.7.17
  R8_CIN evaluates the alternate hyperbolic cosine integral.

             X          CIN(X)  R8_CIN(X)        Diff

          0.5000       0.0618526       0.0618526     1.38778e-17
          0.6000       0.0886607       0.0886607     2.77556e-17
          0.7000        0.120026        0.120026     6.93889e-17
          0.8000        0.155793        0.155793     8.32667e-17
          0.9000        0.195787        0.195787     2.77556e-17
          1.0000        0.239812        0.239812               0
          1.2000        0.339078        0.339078     1.11022e-16
          1.4000        0.451681        0.451681     1.66533e-16
          1.6000        0.575487        0.575487     1.11022e-16
          1.8000        0.708191        0.708191     2.22045e-16
          2.0000        0.847382        0.847382     1.11022e-16
          2.5000         1.20764         1.20764     2.22045e-16
          3.0000          1.5562          1.5562     6.66134e-16
          3.5000         1.86211         1.86211     4.44089e-16
          4.0000         2.10449         2.10449     1.33227e-15
          4.5000         2.27478         2.27478     4.44089e-16

R8_CIN_TEST:
  Normal end of execution.

R8_CINH_TEST:
  Python version: 2.7.17
  R8_CINH evaluates the alternate hyperbolic cosine integral.

             X         CINH(X)  R8_CINH(X)        Diff

          0.0000               0               0               0
          0.5000       0.0631547       0.0631547     1.38778e-17
          0.6000       0.0913609       0.0913609     2.77556e-17
          0.7000        0.125028        0.125028               0
          0.8000        0.164328        0.164328     1.11022e-16
          0.9000        0.209459        0.209459     8.32667e-17
          1.0000        0.260651        0.260651     5.55112e-17
          1.2000        0.382305        0.382305               0
          1.4000        0.531806        0.531806     2.22045e-16
          1.6000        0.712287        0.712287               0
          1.8000        0.927575        0.927575     2.22045e-16
          2.0000          1.1823          1.1823     4.44089e-16
          2.5000         2.03092         2.03092               0
          3.0000         3.28456         3.28456     4.44089e-16
          3.5000         5.12921         5.12921     8.88178e-16
          4.0000         7.85004         7.85004     1.77636e-15
          4.5000         11.8845         11.8845     5.32907e-15

R8_CINH_TEST:
  Normal end of execution.

R8_COS_TEST:
  Python version: 2.7.17
  R8_COS evaluates the cosine function.

             X         COS(X)  R8_COS(X)         Diff

          0.0000               1               1               0
          0.2618        0.965926        0.965926     1.11022e-16
          0.5000        0.877583        0.877583     2.22045e-16
          0.5236        0.866025        0.866025     1.11022e-16
          0.7854        0.707107        0.707107               0
          1.0000        0.540302        0.540302     1.11022e-16
          1.0472             0.5             0.5     1.11022e-16
          1.5708               0     6.12574e-17     6.12574e-17
          2.0000       -0.416147       -0.416147               0
          3.0000       -0.989992       -0.989992     1.11022e-16
          3.1416              -1              -1     2.22045e-16
          4.0000       -0.653644       -0.653644               0
          5.0000        0.283662        0.283662     5.55112e-17

R8_COS_TEST:
  Normal end of execution.

R8_COS_DEG_TEST:
  Python version: 2.7.17
  R8_COS_DEG evaluates the cosine of an argument in degrees.

             X     COS_DEG(X)  R8_COS_DEG(X)         Diff

         -5.0000        0.996195        0.996195     2.22045e-16
          0.0000               1               1               0
          1.0000        0.999848        0.999848               0
          2.0000        0.999391        0.999391     1.11022e-16
          3.0000         0.99863         0.99863               0
          4.0000        0.997564        0.997564               0
          5.0000        0.996195        0.996195     2.22045e-16
         10.0000        0.984808        0.984808               0
         15.0000        0.965926        0.965926     1.11022e-16
         30.0000        0.866025        0.866025               0
         45.0000        0.707107        0.707107               0
         60.0000             0.5             0.5     1.11022e-16
         75.0000        0.258819        0.258819               0
         85.0000       0.0871557       0.0871557     5.55112e-17
         86.0000       0.0697565       0.0697565     8.32667e-17
         87.0000        0.052336        0.052336       1.249e-16
         88.0000       0.0348995       0.0348995     1.11022e-16
         89.0000       0.0174524       0.0174524     8.67362e-17
         90.0000               0               0               0
         91.0000      -0.0174524      -0.0174524     3.81639e-17
        105.0000       -0.258819       -0.258819     1.11022e-16
        180.0000              -1              -1               0

R8_COS_DEG_TEST:
  Normal end of execution.

R8_COSH_TEST:
  Python version: 2.7.17
  R8_COSH evaluates the hyperbolic cosine function.

             X         COSH(X)  R8_COSH(X)        Diff

         -5.0000         74.2099         74.2099     4.26326e-14
         -1.0000         1.54308         1.54308     2.22045e-16
          0.0000               1               1               0
          0.1000           1.005           1.005               0
          0.2000         1.02007         1.02007     2.22045e-16
          0.3000         1.04534         1.04534     4.44089e-16
          0.4000         1.08107         1.08107     2.22045e-16
          0.5000         1.12763         1.12763     4.44089e-16
          0.6000         1.18547         1.18547     6.66134e-16
          0.7000         1.25517         1.25517               0
          0.8000         1.33743         1.33743     4.44089e-16
          0.9000         1.43309         1.43309     8.88178e-16
          1.0000         1.54308         1.54308     2.22045e-16
          2.0000          3.7622          3.7622     4.44089e-16
          3.0000         10.0677         10.0677               0
          4.0000         27.3082         27.3082     7.10543e-15
          5.0000         74.2099         74.2099     4.26326e-14
         10.0000         11013.2         11013.2     1.63709e-11

R8_COSH_TEST:
  Normal end of execution.

R8_COT_TEST:
  Python version: 2.7.17
  R8_COT evaluates the cotangent function.

             X         COT(X)  R8_COT(X)         Diff

          0.0833         11.9722         11.9722     1.77636e-15
          0.2618         3.73205         3.73205               0
          0.5000         1.83049         1.83049     2.22045e-16
          0.5236         1.73205         1.73205               0
          0.7854               1               1     2.22045e-16
          1.0000        0.642093        0.642093     1.11022e-16
          1.0472         0.57735         0.57735     1.11022e-16
          1.3090        0.267949        0.267949     5.55112e-17
          1.5708               0    -2.22045e-16     2.22045e-16
          1.4399        0.131652        0.131652     8.32667e-17
          1.5053       0.0655435       0.0655435     1.38778e-16
          2.0000       -0.457658       -0.457658     1.11022e-16
          3.0000        -7.01525        -7.01525     8.88178e-16
          4.0000        0.863691        0.863691               0
          5.0000       -0.295813       -0.295813     5.55112e-17

R8_COT_TEST:
  Normal end of execution.

R8_CSEVL_TEST:
  Python version: 2.7.17
  R8_CSEVL evaluates a Chebyshev approximant
  of N terms at a point X.

  Here we use an approximant to the exponential function
  and average the absolute error at 21 points.

   N    error

   1        0.605859
   2        0.172657
   3       0.0290247
   4      0.00362759
   5     0.000367891
   6     3.07777e-05
   7     2.19352e-06
   8     1.37199e-07
   9     7.67356e-09
  10      3.5653e-10
  11     1.62784e-11
  12     6.53432e-13

R8_CSEVL_TEST:
  Normal end of execution.

R8_DAWSON_TEST:
  Python version: 2.7.17
  R8_DAWSON evaluates Dawson's integral.

             X      DAWSON(X)  R8_DAWSON(X)         Diff

          0.0000               0               0               0
          0.1000        0.099336        0.099336     1.38778e-17
          0.2000        0.194751        0.194751     5.55112e-17
          0.3000        0.282632        0.282632     5.55112e-17
          0.4000        0.359943        0.359943               0
          0.5000        0.424436        0.424436               0
          0.6000        0.474763        0.474763     5.55112e-17
          0.7000        0.510504        0.510504               0
          0.8000        0.532102        0.532102               0
          0.9000        0.540724        0.540724               0
          1.0000         0.53808         0.53808               0
          1.1000        0.526207        0.526207     1.11022e-16
          1.2000        0.507273        0.507273     2.22045e-16
          1.3000        0.483398        0.483398     1.11022e-16
          1.4000        0.456507        0.456507               0
          1.5000        0.428249        0.428249     1.11022e-16
          1.6000         0.39994         0.39994     1.11022e-16
          1.7000        0.372559        0.372559     5.55112e-17
          1.8000        0.346773        0.346773     1.11022e-16
          1.9000        0.322974        0.322974     2.22045e-16
          2.0000         0.30134         0.30134               0

R8_DAWSON_TEST:
  Normal end of execution.

R8_E1_TEST:
  Python version: 2.7.17
  R8_E1 evaluates the E1(x) exponential function.

             X           E1(X)  R8_E1(X)        Diff

          0.5000        0.559774        0.559774     1.11022e-16
          0.6000         0.45438         0.45438     1.11022e-16
          0.7000        0.373769        0.373769     5.55112e-17
          0.8000        0.310597        0.310597     5.55112e-17
          0.9000        0.260184        0.260184     1.66533e-16
          1.0000        0.219384        0.219384     8.32667e-17
          1.1000        0.185991        0.185991     5.55112e-17
          1.2000        0.158408        0.158408               0
          1.3000        0.135451        0.135451     2.77556e-17
          1.4000        0.116219        0.116219     1.38778e-17
          1.5000         0.10002         0.10002     4.16334e-17
          1.6000       0.0863083       0.0863083     2.77556e-17
          1.7000       0.0746546       0.0746546               0
          1.8000       0.0647131       0.0647131     1.38778e-17
          1.9000       0.0562044       0.0562044               0
          2.0000       0.0489005       0.0489005     6.93889e-18

R8_E1_TEST:
  Normal end of execution.

R8_EI_TEST:
  Python version: 2.7.17
  R8_EI evaluates the exponential integral Ei(X).

             X           EI(X)  R8_EI(X)        Diff

          0.5000         0.45422         0.45422     5.55112e-17
          0.6000        0.769881        0.769881     1.11022e-16
          0.7000         1.06491         1.06491     6.66134e-16
          0.8000          1.3474          1.3474     2.22045e-16
          0.9000         1.62281         1.62281     2.22045e-16
          1.0000         1.89512         1.89512     4.44089e-16
          1.1000         2.16738         2.16738     1.77636e-15
          1.2000         2.44209         2.44209     4.44089e-16
          1.3000          2.7214          2.7214     1.77636e-15
          1.4000         3.00721         3.00721               0
          1.5000         3.30129         3.30129     4.44089e-16
          1.6000         3.60532         3.60532     8.88178e-16
          1.7000         3.92096         3.92096     8.88178e-16
          1.8000         4.24987         4.24987     8.88178e-16
          1.9000         4.59371         4.59371     8.88178e-16
          2.0000         4.95423         4.95423     8.88178e-16

R8_EI_TEST:
  Normal end of execution.

R8_ERF_TEST:
  R8_ERF evaluates the error function.

             X          ERF(X)  R8_ERF(X)        Diff

               0               0               0               0
             0.1        0.112463        0.112463     1.38778e-17
             0.2        0.222703        0.222703     2.77556e-17
             0.3        0.328627        0.328627     5.55112e-17
             0.4        0.428392        0.428392     1.11022e-16
             0.5          0.5205          0.5205     1.11022e-16
             0.6        0.603856        0.603856               0
             0.7        0.677801        0.677801               0
             0.8        0.742101        0.742101               0
             0.9        0.796908        0.796908     2.22045e-16
               1        0.842701        0.842701     3.33067e-16
             1.1        0.880205        0.880205               0
             1.2        0.910314        0.910314     1.11022e-16
             1.3        0.934008        0.934008               0
             1.4        0.952285        0.952285               0
             1.5        0.966105        0.966105     1.11022e-16
             1.6        0.976348        0.976348               0
             1.7         0.98379         0.98379     1.11022e-16
             1.8        0.989091        0.989091     1.11022e-16
             1.9         0.99279         0.99279               0
               2        0.995322        0.995322               0

R8_ERF_TEST:
  Normal end of execution.

R8_ERFC_TEST:
  Python version: 2.7.17
  R8_ERFC evaluates the complementary error function.

             X         ERFC(X)  R8_ERFC(X)        Diff

               0               1               1               0
             0.2        0.777297        0.777297               0
             0.4        0.571608        0.571608     1.11022e-16
             0.6        0.396144        0.396144               0
             0.8        0.257899        0.257899               0
               1        0.157299        0.157299     3.33067e-16
             1.2        0.089686        0.089686               0
             1.4       0.0477149       0.0477149     1.38778e-17
             1.6       0.0236516       0.0236516     6.93889e-18
             1.8       0.0109095       0.0109095     8.67362e-18
               2      0.00467773      0.00467773     8.67362e-19
             2.2      0.00186285      0.00186285      1.0842e-18
             2.4     0.000688514     0.000688514     3.25261e-19
             2.6     0.000236034     0.000236034      1.6263e-19
             2.8     7.50132e-05     7.50132e-05     6.77626e-20
               3     2.20905e-05     2.20905e-05     6.77626e-21
             3.2     6.02576e-06     6.02576e-06     1.35525e-20
             3.4     1.52199e-06     1.52199e-06     2.11758e-21
             3.6     3.55863e-07     3.55863e-07     3.70577e-22
             3.8     7.70039e-08     7.70039e-08     5.29396e-23
               4     1.54173e-08     1.54173e-08     3.30872e-24

R8_ERFC_TEST:
  Normal end of execution.

R8_EXP_TEST:
  Python version: 2.7.17
  R8_EXP evaluates the exponential function.

             X          EXP(X)  R8_EXP(X)        Diff

        -10.0000     4.53999e-05     2.94382e-05     1.59617e-05
         -5.0000      0.00673795      0.00383655       0.0029014
         -1.0000        0.367879        0.249101        0.118778
          0.0000               1               1               0
          0.0000               1               1               0
          0.0001          1.0001          1.0001               0
          0.0010           1.001           1.001               0
          0.0100         1.01005         1.01005     2.22045e-16
          0.1000         1.10517         1.10517     2.22045e-16
          0.2000          1.2214          1.2214     8.88178e-16
          0.3000         1.34986         1.34986     1.33227e-15
          0.4000         1.49182         1.49182               0
          0.5000         1.64872         1.64872     1.55431e-15
          0.6000         1.82212         1.82212     2.44249e-15
          0.7000         2.01375         2.01375               0
          0.8000         2.22554         2.22554     1.33227e-15
          0.9000          2.4596          2.4596     1.77636e-15
          1.0000         2.71828         2.71828     4.44089e-16
          2.0000         7.38906         7.38906     8.88178e-16
          3.1416         23.1407         23.1407      2.4869e-14
          5.0000         148.413         148.413     8.52651e-14
         10.0000         22026.5         22026.5     2.91038e-11
         20.0000     4.85165e+08     4.85165e+08     2.38419e-07
         40.0000     2.35385e+17     2.35385e+17              96

R8_EXP_TEST:
  Normal end of execution.

R8_FAC_TEST:
  Python version: 2.7.17
  R8_FAC evaluates the factorial function.

             N          FAC(N)  R8_FAC(N)        Diff

               0               1               1               0
               1               1               1               0
               2               2               2               0
               3               6               6               0
               4              24              24               0
               5             120             120               0
               6             720             720               0
               7            5040            5040               0
               8           40320           40320               0
               9          362880          362880               0
              10      3.6288e+06      3.6288e+06               0
              11     3.99168e+07     3.99168e+07               0
              12     4.79002e+08     4.79002e+08               0
              13     6.22702e+09     6.22702e+09               0
              14     8.71783e+10     8.71783e+10               0
              15     1.30767e+12     1.30767e+12               0
              16     2.09228e+13     2.09228e+13               0
              17     3.55687e+14     3.55687e+14               0
              18     6.40237e+15     6.40237e+15               0
              19     1.21645e+17     1.21645e+17               0
              20      2.4329e+18      2.4329e+18               0
              25     1.55112e+25     1.55112e+25     4.29497e+09
              50     3.04141e+64     3.04141e+64     3.62452e+50
             100    9.33262e+157    9.33262e+157    1.90232e+144
             150    5.71338e+262    5.71338e+262    4.99922e+249

R8_FAC_TEST:
  Normal end of execution.

R8_GAMIC_TEST:
  Python version: 2.7.17
  R8_GAMIC evaluates the incomplete Gamma function.

             A               X     GAMIC(A,X)  R8_GAMIC(A,X)         Diff

             0.1          0.0300          2.4903          2.4903     1.33227e-15
             0.1          0.3000        0.871837        0.871837               0
             0.1          1.5000        0.107921        0.107921     2.77556e-17
             0.5          0.0750         1.23812         1.23812     4.44089e-16
             0.5          0.7500         0.39113         0.39113     2.22045e-16
             0.5          3.5000       0.0144472       0.0144472               0
               1          0.1000        0.904837        0.904837     1.11022e-16
               1          1.0000        0.367879        0.367879     5.55112e-17
               1          5.0000      0.00673795      0.00673795               0
             1.1          0.1000        0.882797        0.882797               0
             1.1          1.0000        0.390833        0.390833     2.22045e-16
             1.1          5.0000      0.00805146      0.00805146     3.46945e-18
               2          0.1500        0.989814        0.989814               0
               2          1.5000        0.557825        0.557825     1.11022e-16
               2          7.0000      0.00729506      0.00729506     1.73472e-18
               6          2.5000         114.957         114.957      9.9476e-14
               6         12.0000         2.44092         2.44092     2.66454e-15
              11         16.0000          280855          280855     5.82077e-11
              26         25.0000     8.57648e+24     8.57648e+24     3.22123e+09
              41         45.0000     2.08503e+47     2.08503e+47     2.83954e+32

R8_GAMIC_TEST:
  Normal end of execution.

R8_GAMIT_TEST:
  Python version: 2.7.17
  R8_GAMIT evaluates Tricomi's incomplete Gamma function

             A               X     GAMIT(A,X)  R8_GAMIT(A,X)         Diff

             0.1            0.03         1.04829         1.04829     4.44089e-16
             0.1             0.3         1.02458         1.02458     2.22045e-16
             0.1             1.5        0.949371        0.949371               0
             0.5           0.075         1.10079         1.10079     2.22045e-16
             0.5            0.75        0.899891        0.899891     1.11022e-16
             0.5             3.5        0.530166        0.530166               0
               1             0.1        0.951626        0.951626               0
               1               1        0.632121        0.632121     1.11022e-16
               1               5        0.198652        0.198652     2.77556e-17
             1.1             0.1        0.907178        0.907178               0
             1.1               1        0.589181        0.589181               0
             1.1               5        0.168827        0.168827     5.55112e-17
               2            0.15        0.452703        0.452703               0
               2             1.5        0.196522        0.196522               0
               2               7       0.0202593       0.0202593     6.93889e-18
               6             2.5     0.000172118     0.000172118     8.13152e-20
               6              12     3.28086e-07     3.28086e-07     3.17637e-22
              11              16      5.2444e-14      5.2444e-14     9.46633e-29
              26              25     2.01346e-37     2.01346e-37     4.17619e-53
              41              45     1.23062e-68     1.23062e-68     1.77076e-82

R8_GAMIT_TEST:
  Normal end of execution.

R8_GAML_TEST:
  Python version: 2.7.17
  R8_GAML returns bounds for the argument of the gamma function.

  Lower limit XMIN = -170.345
  Upper limit XMAX = 171.345

R8_GAML_TEST:
  Normal end of execution.

R8_GAMMA_TEST:
  Python version: 2.7.17
  R8_GAMMA computes the Gamma function.

             X        GAMMA(X)  R8_GAMMA(X)        Diff

            -0.5        -3.54491        -3.54491               0
           -0.01        -100.587        -100.587      9.9476e-14
            0.01         99.4326         99.4326     8.52651e-14
             0.1         9.51351         9.51351     8.88178e-15
             0.2         4.59084         4.59084     1.77636e-15
             0.4         2.21816         2.21816     4.44089e-16
             0.5         1.77245         1.77245               0
             0.6         1.48919         1.48919     2.22045e-16
             0.8         1.16423         1.16423     2.22045e-16
               1               1               1               0
             1.1        0.951351        0.951351               0
             1.2        0.918169        0.918169               0
             1.3        0.897471        0.897471               0
             1.4        0.887264        0.887264               0
             1.5        0.886227        0.886227               0
             1.6        0.893515        0.893515               0
             1.7        0.908639        0.908639               0
             1.8        0.931384        0.931384               0
             1.9        0.961766        0.961766               0
               2               1               1               0
               3               2               2               0
               4               6               6               0
              10          362880          362880               0
              20     1.21645e+17     1.21645e+17              80
              30     8.84176e+30     8.84176e+30     7.54353e+16

R8_GAMMA_TEST:
  Normal end of execution.

R8_GAMR_TEST:
  Python version: 2.7.17
  R8_GAMR computes the 1/Gamma(x).

             X      1/GAMMA(X)  R8_GAMR(X)        Diff

            -0.5       -0.282095       -0.282095               0
           -0.01     -0.00994162     -0.00994162     1.04083e-17
            0.01       0.0100571       0.0100571     8.67362e-18
             0.1        0.105114        0.105114     9.71445e-17
             0.2        0.217825        0.217825     8.32667e-17
             0.4        0.450824        0.450824     1.11022e-16
             0.5         0.56419         0.56419               0
             0.6        0.671505        0.671505               0
             0.8        0.858937        0.858937     1.11022e-16
               1               1               1               0
             1.1         1.05114         1.05114               0
             1.2         1.08912         1.08912               0
             1.3         1.11424         1.11424               0
             1.4         1.12706         1.12706               0
             1.5         1.12838         1.12838               0
             1.6         1.11917         1.11917               0
             1.7         1.10055         1.10055               0
             1.8         1.07367         1.07367               0
             1.9         1.03975         1.03975               0
               2               1               1               0
               3             0.5             0.5               0
               4        0.166667        0.166667               0
              10     2.75573e-06     2.75573e-06               0
              20     8.22064e-18     8.22064e-18     4.62223e-33
              30       1.131e-31       1.131e-31     9.63393e-46

R8_GAMR_TEST:
  Normal end of execution.

R8_INITS_TEST:
  Python version: 2.7.17
  R8_INITS determines the Chebyshev interpolant degree
  necessary to guarantee a desired accuracy level.

  Here, we use a 15 term Chebyshev expansion for the
  sine function.

  Accuracy    Terms Needed

               1     0
             0.1     1
            0.01     1
           0.001     2
          0.0001     2
           1e-05     3
           1e-06     3
           1e-07     4
           1e-08     4
           1e-09     5
           1e-10     5
           1e-11     6
           1e-12     6
           1e-13     6
           1e-14     7
           1e-15     7
           1e-16     8
           1e-17     8

R8_INITS_TEST:
  Normal end of execution.

R8_INT_TEST:
  Python version: 2.7.17
  R8_INT computes the integer part of an R8.

             X         INT(X)  R8_INT(X)        Diff

         -2.0100              -2              -2               0
         -1.9900              -1              -1               0
         -1.5000              -1              -1               0
         -1.1000              -1              -1               0
         -1.0100              -1              -1               0
         -1.0000              -1              -1               0
         -0.9900               0              -0               0
         -0.9000               0              -0               0
         -0.5100               0              -0               0
         -0.5000               0              -0               0
         -0.4900               0              -0               0
         -0.0100               0              -0               0
          0.0000               0               0               0
          0.0100               0               0               0
          0.4900               0               0               0
          0.5000               0               0               0
          0.5100               0               0               0
          0.9000               0               0               0
          0.9900               0               0               0
          1.0000               1               1               0
          1.0100               1               1               0
          1.1000               1               1               0
          1.5000               1               1               0
          1.9900               1               1               0
          2.0100               2               2               0

R8_INT_TEST:
  Normal end of execution.

R8_LBETA_TEST:
  Python version: 2.7.17
  R8_LBETA evaluates the logarithm of the Beta function.

             A               B     LBETA(A,B)  R8_LBETA(A,B)         Diff

          0.2000               1         1.60944         1.60944     4.44089e-16
          0.4000               1        0.916291        0.916291     1.11022e-16
          0.6000               1        0.510826        0.510826     1.11022e-16
          0.8000               1        0.223144        0.223144     2.22045e-16
          1.0000             0.2         1.60944         1.60944     4.44089e-16
          1.0000             0.4        0.916291        0.916291     1.11022e-16
          1.0000               1               0               0               0
          2.0000               2        -1.79176        -1.79176               0
          3.0000               3         -3.4012         -3.4012     4.44089e-16
          4.0000               4        -4.94164        -4.94164               0
          5.0000               5        -6.44572        -6.44572     8.88178e-16
          6.0000               2        -3.73767        -3.73767     4.44089e-16
          6.0000               3        -5.12396        -5.12396               0
          6.0000               4        -6.22258        -6.22258               0
          6.0000               5        -7.13887        -7.13887     2.66454e-15
          6.0000               6        -7.92732        -7.92732     4.44089e-15
          7.0000               7        -9.39366        -9.39366     1.77636e-15

R8_LBETA_TEST:
  Normal end of execution.

R8_LGAMS_TEST:
  Python version: 2.7.17
  R8_LGAMS evaluates the sign of Gamma(x) and 
  the logarithm of the absolute value of Gamma(x).

             X        LNGAM(X)  Sign(Gamma(x))   Log(|Gamma(x)|)        Diff

             0.2         1.52406               1         1.52406     6.66134e-16
             0.4        0.796678               1        0.796678     2.22045e-16
             0.6        0.398234               1        0.398234     5.55112e-17
             0.8         0.15206               1         0.15206               0
               1               0               1               0               0
             1.1      -0.0498724               1      -0.0498724     1.38778e-17
             1.2      -0.0853741               1      -0.0853741     2.77556e-17
             1.3       -0.108175               1       -0.108175     6.93889e-17
             1.4       -0.119613               1       -0.119613     1.38778e-16
             1.5       -0.120782               1       -0.120782     2.77556e-17
             1.6       -0.112592               1       -0.112592     6.93889e-17
             1.7      -0.0958077               1      -0.0958077     1.38778e-17
             1.8      -0.0710839               1      -0.0710839     1.38778e-17
             1.9      -0.0389843               1      -0.0389843     1.38778e-17
               2               0               1               0               0
               3        0.693147               1        0.693147               0
               4         1.79176               1         1.79176               0
              10         12.8018               1         12.8018               0
              20         39.3399               1         39.3399               0
              30          71.257               1          71.257     1.42109e-14

R8_LGAMS_TEST:
  Normal end of execution.

R8_LGMC_TEST:
  Python version: 2.7.17
  R8_LGMC evaluates the correction log gamma factor.
  r8_lgmc(x) = log ( gamma ( x ) ) - log ( sqrt ( 2 * pi )
    - ( x - 0.5 ) * log ( x ) + x

             X        LGMC(X)  R8_LGMC(X)        Diff

         10.0000      0.00833056      0.00833056     1.65666e-15
         20.0000      0.00416632      0.00416632     7.45931e-17
         30.0000      0.00277767      0.00277767      7.4051e-15

R8_LGMC_TEST:
  Normal end of execution.

R8_LI_TEST:
  Python version: 2.7.17
  R8_LI evaluates the logarithmic integral.

             X           LI(X)  R8_LI(X)        Diff

          0.0000               0               0               0
          0.1000      -0.0323898      -0.0323898     6.93889e-18
          0.2000      -0.0851265      -0.0851265               0
          0.3000       -0.157415       -0.157415     5.55112e-17
          0.4000       -0.252949       -0.252949     1.11022e-16
          0.5000       -0.378671       -0.378671               0
          0.6000       -0.546851       -0.546851     1.11022e-16
          0.7000       -0.780947       -0.780947     2.22045e-16
          0.8000        -1.13401        -1.13401     6.66134e-16
          0.9000         -1.7758         -1.7758     6.66134e-16
          0.9500        -2.44362        -2.44362     8.88178e-16
          0.9750        -3.12419        -3.12419     3.10862e-15
          1.0312        -2.87294        -2.87294     4.44089e-16
          1.0625        -2.16428        -2.16428     4.44089e-16
          1.1250        -1.44035        -1.44035     2.22045e-16
          1.2500       -0.686488       -0.686488     1.11022e-16
          1.5000        0.125065        0.125065     8.32667e-17
          2.0000         1.04516         1.04516     2.22045e-16
          4.0000         2.96759         2.96759               0
          8.0000         5.25372         5.25372     8.88178e-16
         16.0000         8.51972         8.51972               0
         32.0000         13.6051         13.6051     3.55271e-15
         64.0000         21.9347         21.9347     1.06581e-14
        128.0000         36.0425         36.0425     7.10543e-15
        256.0000         60.5131         60.5131     7.10543e-15
        512.0000         103.721         103.721     2.84217e-14
       1024.0000         181.078         181.078     2.84217e-14
       2048.0000         321.114         321.114               0

R8_LI_TEST:
  Normal end of execution.

R8_LNGAM_TEST:
  Python version: 2.7.17
  R8_LNGAM evaluates the logarithm of the Gamma function.

             X        LNGAM(X)  R8_LNGAM(X)        Diff

             0.2         1.52406         1.52406     6.66134e-16
             0.4        0.796678        0.796678     2.22045e-16
             0.6        0.398234        0.398234     5.55112e-17
             0.8         0.15206         0.15206               0
               1               0               0               0
             1.1      -0.0498724      -0.0498724     1.38778e-17
             1.2      -0.0853741      -0.0853741     2.77556e-17
             1.3       -0.108175       -0.108175     6.93889e-17
             1.4       -0.119613       -0.119613     1.38778e-16
             1.5       -0.120782       -0.120782     2.77556e-17
             1.6       -0.112592       -0.112592     6.93889e-17
             1.7      -0.0958077      -0.0958077     1.38778e-17
             1.8      -0.0710839      -0.0710839     1.38778e-17
             1.9      -0.0389843      -0.0389843     1.38778e-17
               2               0               0               0
               3        0.693147        0.693147               0
               4         1.79176         1.79176               0
              10         12.8018         12.8018               0
              20         39.3399         39.3399               0
              30          71.257          71.257     1.42109e-14

R8_LNGAM_TEST:
  Normal end of execution.

R8_LNREL_TEST:
  Python version: 2.7.17
  R8_LNREL evaluates  ln(1+X).

             X          LN(1+X)  R8_LNREL(X)        Diff

        -0.99999        -11.5129        -11.5129     4.55103e-12
           -0.99        -4.60517        -4.60517     8.88178e-16
            -0.9        -2.30259        -2.30259               0
            -0.8        -1.60944        -1.60944     2.22045e-16
            -0.7        -1.20397        -1.20397               0
            -0.6       -0.916291       -0.916291     1.11022e-16
            -0.5       -0.693147       -0.693147               0
            -0.4       -0.510826       -0.510826               0
            -0.3       -0.356675       -0.356675     1.11022e-16
            -0.2       -0.223144       -0.223144     5.55112e-17
            -0.1       -0.105361       -0.105361     2.77556e-17
               0               0               0               0
               1        0.693147        0.693147               0
               2         1.09861         1.09861     2.22045e-16
         2.14159         1.14473         1.14473               0
               4         1.60944         1.60944     2.22045e-16
               9         2.30259         2.30259               0
              19         2.99573         2.99573               0
              99         4.60517         4.60517               0
     1.23457e+08         18.6314         18.6314               0

R8_LNREL_TEST:
  Normal end of execution.

R8_LOG_TEST:
  Python version: 2.7.17
  R8_LOG evaluates the logarithm.

             X          LOG(X)  R8_LOG(X)        Diff

           1e-05        -11.5129        -11.5129               0
            0.01        -4.60517        -4.60517               0
             0.1        -2.30259        -2.30259     4.44089e-16
             0.2        -1.60944        -1.60944               0
             0.3        -1.20397        -1.20397     2.22045e-16
             0.4       -0.916291       -0.916291     1.11022e-16
             0.5       -0.693147       -0.693147               0
             0.6       -0.510826       -0.510826               0
             0.7       -0.356675       -0.356675     5.55112e-17
             0.8       -0.223144       -0.223144     1.11022e-16
             0.9       -0.105361       -0.105361     6.93889e-17
               1               0               0               0
               2        0.693147        0.693147               0
               3         1.09861         1.09861     2.22045e-16
           3.142         1.14473         1.14473               0
               5         1.60944         1.60944     2.22045e-16
              10         2.30259         2.30259               0
              20         2.99573         2.99573               0
             100         4.60517         4.60517               0
       1.235e+08         18.6314         18.6314               0

R8_LOG_TEST:
  Normal end of execution.

R8_LOG10_TEST:
  Python version: 2.7.17
  R8_LOG10 evaluates the logarithm base 10.

             X        LOG10(X)  R8_LOG10(X)        Diff

          0.0000              -5              -5               0
          0.0100              -2              -2               0
          0.1000              -1              -1     1.11022e-16
          0.2000        -0.69897        -0.69897     1.11022e-16
          0.3000       -0.522879       -0.522879     1.11022e-16
          0.4000        -0.39794        -0.39794     5.55112e-17
          0.5000        -0.30103        -0.30103               0
          0.6000       -0.221849       -0.221849               0
          0.7000       -0.154902       -0.154902     2.77556e-17
          0.8000        -0.09691        -0.09691     5.55112e-17
          0.9000      -0.0457575      -0.0457575     2.77556e-17
          1.0000               0               0               0
          2.0000         0.30103         0.30103               0
          3.0000        0.477121        0.477121     5.55112e-17
          3.1416         0.49715         0.49715               0
          5.0000         0.69897         0.69897               0
         10.0000               1               1               0
         20.0000         1.30103         1.30103     2.22045e-16
        100.0000               2               2               0
  123456789.0000         8.09151         8.09151               0

R8_LOG10_TEST:
  Normal end of execution.

R8_MACH_TEST
  Python version: 2.7.17
  R8_MACH reports the value of constants associated
  with real double precision computer arithmetic.

  Assume that double precision numbers are stored 
  with a mantissa of T digits in base B, with an
  exponent whose value must lie between EMIN and EMAX.

  For input arguments of 1 <= I <= 5,
  R8_MACH will return the following values:

  R8_MACH(1) = B^(EMIN-1), the smallest positive magnitude.
     1.1125369292536012e-308

  R8_MACH(2) = B^EMAX*(1-B^(-T)), the largest magnitude.
     4.4942328371557888e+307

  R8_MACH(3) = B^(-T), the smallest relative spacing.
      1.1102230246251570e-16

  R8_MACH(4) = B^(1-T), the largest relative spacing.
      2.2204460492503131e-16

  R8_MACH(5) = log10(B).
      3.0102999566398098e-01

R8_MACH_TEST
  Normal end of execution.

R8_MOP_TEST
  Python version: 2.7.17
  R8_MOP evaluates (-1.0)^I4 as an R8.

    I4  R8_MOP(I4)

   -57  -1.0
    92   1.0
    66   1.0
    12   1.0
   -17  -1.0
   -87  -1.0
   -49  -1.0
   -78   1.0
   -92   1.0
    27  -1.0

R8_MOP_TEST
  Normal end of execution.

R8_PAK_TEST:
  Python version: 2.7.17
  R8_PAK converts a mantissa and base 2 exponent to an R8.

    Mantissa     Exponent         R8

                       0.5         7              64
                       0.5         8             128
                      -0.5         7             -64
                      0.75         7              96
                    0.9375         4              15
                       0.5         0             0.5
                       0.5        -1            0.25
                     0.625         0           0.625
              0.5048828125         7          64.625
        0.7853981633974483         2  3.141592653589793
                         0         0               0

R8_PAK_TEST:
  Normal end of execution.

R8_POCH_TEST:
  Python version: 2.7.17
  R8_POCH evaluates the Pochhammer symbol.

             A               X      POCH(A,X)  R8_POCH(A,X)         Diff

               5               4            1680            1680               0
            5.25               4          1962.6          1962.6               0
             5.5               4         2279.06         2279.06               0
            5.75               4         2631.97         2631.97               0
               6               4            3024            3024               0
             7.5               0               1               1               0
             7.5               1             7.5             7.5               0
             7.5               2           63.75           63.75               0
             7.5               3         605.625         605.625               0
             7.5               4         6359.06         6359.06               0
             7.5               5         73129.2         73129.2               0
             7.5               6          914115          914115               0
             7.5               7     1.23406e+07     1.23406e+07               0
             7.5               8     1.78938e+08     1.78938e+08     5.96046e-08
             7.5               9     2.77354e+09     2.77354e+09               0

R8_POCH_TEST:
  Normal end of execution.

R8_PSI_TEST:
  Python version: 2.7.17
  R8_PSI evaluates the PSI function.

      X            PSI(X)    R8_PSI(X)

           0.1        -10.42375494041108        -10.42375494041108
           0.2        -5.289039896592188        -5.289039896592188
           0.3        -3.502524222200133        -3.502524222200133
           0.4        -2.561384544585116        -2.561384544585116
           0.5        -1.963510026021423        -1.963510026021424
           0.6         -1.54061921389319        -1.540619213893191
           0.7        -1.220023553697935        -1.220023553697935
           0.8       -0.9650085667061385       -0.9650085667061382
           0.9       -0.7549269499470515       -0.7549269499470511
             1       -0.5772156649015329       -0.5772156649015329
           1.1       -0.4237549404110768       -0.4237549404110768
           1.2       -0.2890398965921883       -0.2890398965921884
           1.3       -0.1691908888667997       -0.1691908888667995
           1.4      -0.06138454458511615      -0.06138454458511624
           1.5       0.03648997397857652       0.03648997397857652
           1.6        0.1260474527734763        0.1260474527734763
           1.7         0.208547874873494         0.208547874873494
           1.8        0.2849914332938615        0.2849914332938615
           1.9        0.3561841611640597        0.3561841611640596
             2        0.4227843350984671        0.4227843350984672

R8_PSI_TEST
  Normal end of execution.

R8_RAND_TEST:
  Python version: 2.7.17
  R8_RAND is a random number generator.

             I         R8_RAND        Expected

               1     0.000412703     0.000412703
               2        0.675084        0.675084
               3        0.161475        0.161475
               4         0.90862         0.90862
              10        0.552779        0.552779
             100        0.360089        0.360089
            1000        0.217699        0.217699

       Average =          0.4999             0.5
       Variance =      0.0832492       0.0833333

R8_RAND_TEST:
  Normal end of execution.

R8_RANDGS_TEST:
  Python version: 2.7.17
  R8_RANDGS is a normal random number generator.
  Mean = 3
  Standard Deviation = 2

             I         R8_RANDGS

               0         4.40826
               1         2.94895
               2         2.13857
               3         1.57902
               4         8.76356
               5         1.08396
               6         3.87796
               7         4.96727
               8        0.673294
               9         2.13816
              10         3.28232

  Sequence mean =  2.98999
  Sequence standard deviation = 2.03537

R8_RANDGS_TEST:
  Normal end of execution.

R8_RANDOM_TEST:
  Python version: 2.7.17
  R8_RANDOM is a random number generator.

             I         R8_RANDOM

               1       0.0913844
               2        0.161475
               3        0.658159
               4        0.272802
              10        0.174952
             100        0.820123
            1000        0.640682

       Average =        0.499899             0.5
       Variance =      0.0832494       0.0833333

R8_RANDOM_TEST:
  Normal end of execution.

R8_REN_TEST:
  Python version: 2.7.17
  R8_REN is a random number generator.

             I         R8_REN         Expected

               1        0.470393        0.470393
               2        0.799066        0.799066
               3        0.883261        0.883261
               4        0.407667        0.407667
              10        0.955566        0.955566
             100        0.173576        0.173576
            1000       0.0121733       0.0121733

       Average =         0.49984             0.5
       Variance =      0.0833074       0.0833333

R8_REN_TEST:
  Normal end of execution.

R8_SHI_TEST:
  Python version: 2.7.17
  R8_SHI evaluates the hyperbolic sine integral.

             X          SHI(X)  R8_SHI(X)        Diff

          0.5000        0.506997        0.506997               0
          0.6000         0.61213         0.61213               0
          0.7000        0.719338        0.719338     1.11022e-16
          0.8000        0.828997        0.828997     1.11022e-16
          0.9000        0.941498        0.941498     1.11022e-16
          1.0000         1.05725         1.05725               0
          1.2000         1.30025         1.30025     4.44089e-16
          1.4000         1.56171         1.56171               0
          1.6000         1.84581         1.84581     6.66134e-16
          1.8000         2.15729         2.15729     8.88178e-16
          2.0000         2.50157         2.50157               0
          2.5000         3.54934         3.54934               0
          3.0000         4.97344         4.97344               0
          3.5000         6.96616         6.96616               0
          4.0000         9.81733         9.81733     1.77636e-15
          4.5000         13.9679         13.9679     1.77636e-15

R8_SHI_TEST:
  Normal end of execution.

R8_SI_TEST:
  Python version: 2.7.17
  R8_SI evaluates the sine integral.

             X           SI(X)  R8_SI(X)        Diff

             0.5        0.493107        0.493107               0
             0.6        0.588129        0.588129     1.11022e-16
             0.7        0.681222        0.681222               0
             0.8        0.772096        0.772096               0
             0.9        0.860471        0.860471               0
               1        0.946083        0.946083               0
             1.2         1.10805         1.10805     4.44089e-16
             1.4         1.25623         1.25623     2.22045e-16
             1.6         1.38918         1.38918     6.66134e-16
             1.8         1.50582         1.50582     4.44089e-16
               2         1.60541         1.60541     2.22045e-16
             2.5         1.77852         1.77852     2.22045e-16
               3         1.84865         1.84865     2.22045e-16
             3.5         1.83313         1.83313               0
               4          1.7582          1.7582               0
             4.5         1.65414         1.65414               0

R8_SI_TEST:
  Normal end of execution.

R8_SIGN_TEST
  Python version: 2.7.17
  R8_SIGN returns the sign of an R8.

     R8     R8_SIGN(R8)

   -1.2500        -1
   -0.2500        -1
    0.0000         1
    0.5000         1
    9.0000         1

R8_SIGN_TEST
  Normal end of execution.

R8_SIN_TEST:
  Python version: 2.7.17
  R8_SIN evaluates the sine function.

             X         SIN(X)  R8_SIN(X)         Diff

          0.0000               0               0               0
          0.2618        0.258819        0.258819     5.55112e-17
          0.5000        0.479426        0.479426               0
          0.5236             0.5             0.5               0
          0.7854        0.707107        0.707107               0
          1.0000        0.841471        0.841471               0
          1.0472        0.866025        0.866025               0
          1.5708               1               1     2.22045e-16
          2.0000        0.909297        0.909297     1.11022e-16
          3.0000         0.14112         0.14112               0
          3.1416               0     1.22515e-16     1.22515e-16
          4.0000       -0.756802       -0.756802     2.22045e-16
          5.0000       -0.958924       -0.958924     1.11022e-16

R8_SIN_TEST:
  Normal end of execution.

R8_SIN_DEG_TEST:
  Python version: 2.7.17
  R8_SIN_DEG evaluates the sine of an argument in degrees.

             X     SIN_DEG(X)  R8_SIN_DEG(X)         Diff

         -5.0000      -0.0871557      -0.0871557     1.38778e-17
          0.0000               0               0               0
          1.0000       0.0174524       0.0174524               0
          2.0000       0.0348995       0.0348995               0
          3.0000        0.052336        0.052336               0
          4.0000       0.0697565       0.0697565     1.38778e-17
          5.0000       0.0871557       0.0871557     1.38778e-17
         10.0000        0.173648        0.173648               0
         15.0000        0.258819        0.258819               0
         30.0000             0.5             0.5     1.11022e-16
         45.0000        0.707107        0.707107               0
         60.0000        0.866025        0.866025     1.11022e-16
         75.0000        0.965926        0.965926     1.11022e-16
         85.0000        0.996195        0.996195     2.22045e-16
         86.0000        0.997564        0.997564               0
         87.0000         0.99863         0.99863               0
         88.0000        0.999391        0.999391     1.11022e-16
         89.0000        0.999848        0.999848               0
         90.0000               1               1               0
         91.0000        0.999848        0.999848     1.11022e-16
        105.0000        0.965926        0.965926     1.11022e-16
        180.0000               0               0               0

R8_SIN_DEG_TEST:
  Normal end of execution.

R8_SINH_TEST:
  Python version: 2.7.17
  R8_SINH evaluates the hyperbolic sine function.

             X         SINH(X)  R8_SINH(X)        Diff

         -5.0000        -74.2032        -74.2032               0
         -1.0000         -1.1752         -1.1752               0
          0.0000               0               0               0
          0.1000        0.100167        0.100167     1.38778e-17
          0.2000        0.201336        0.201336     2.77556e-17
          0.3000         0.30452         0.30452               0
          0.4000        0.410752        0.410752     1.11022e-16
          0.5000        0.521095        0.521095               0
          0.6000        0.636654        0.636654     1.11022e-16
          0.7000        0.758584        0.758584     1.11022e-16
          0.8000        0.888106        0.888106     1.11022e-16
          0.9000         1.02652         1.02652               0
          1.0000          1.1752          1.1752               0
          2.0000         3.62686         3.62686     4.44089e-16
          3.0000         10.0179         10.0179               0
          4.0000         27.2899         27.2899     3.55271e-15
          5.0000         74.2032         74.2032               0
         10.0000         11013.2         11013.2               0

R8_SINH_TEST:
  Normal end of execution.

R8_SPENCE_TEST:
  Python version: 2.7.17
  R8_SPENCE evaluates Spence's integral.

             X       SPENCE(X)  R8_SPENCE(X)        Diff

          0.0000               0               0               0
          0.0500       0.0506393       0.0506393     6.93889e-18
          0.1000        0.102618        0.102618     2.77556e-17
          0.1500        0.156035        0.156035               0
          0.2000        0.211004        0.211004     2.77556e-17
          0.2500        0.267653        0.267653               0
          0.3000         0.32613         0.32613     5.55112e-17
          0.3500        0.386606        0.386606               0
          0.4000        0.449283        0.449283     5.55112e-17
          0.4500        0.514399        0.514399     1.11022e-16
          0.5000        0.582241        0.582241               0
          0.5500        0.653158        0.653158               0
          0.6000        0.727586        0.727586               0
          0.6500        0.806083        0.806083               0
          0.7000        0.889378        0.889378     2.22045e-16
          0.7500        0.978469        0.978469     1.11022e-16
          0.8000         1.07479         1.07479     4.44089e-16
          0.8500         1.18058         1.18058               0
          0.9000         1.29971         1.29971     2.22045e-16
          0.9500         1.44063         1.44063     4.44089e-16
          1.0000         1.64493         1.64493     4.44089e-16

R8_SPENCE_TEST:
  Normal end of execution.

R8_SQRT_TEST:
  Python version: 2.7.17
  R8_SQRT evaluates the square root function.

             X         SQRT(X)  R8_SQRT(X)        Diff

          0.0000               0               0               0
          0.0000           9e-05           9e-05     1.35525e-20
          0.0900             0.3             0.3     5.55112e-17
          0.1000        0.316228        0.316228     1.11022e-16
          0.4000        0.632456        0.632456     1.11022e-16
          1.0000               1               1     2.22045e-16
          2.0000         1.41421         1.41421     2.22045e-16
          3.0000         1.73205         1.73205     2.22045e-16
          3.1416         1.77245         1.77245     2.22045e-16
         19.0000          4.3589          4.3589               0
         29.0000         5.38516         5.38516               0
         71.0000         8.42615         8.42615               0
         97.0000         9.84886         9.84886               0
  123456789.0000         11111.1         11111.1     5.45697e-12

R8_SQRT_TEST:
  Normal end of execution.

R8_TAN_TEST:
  Python version: 2.7.17
  R8_TAN evaluates the tangent function.

             X         TAN(X)  R8_TAN(X)         Diff

               0               0               0               0
          0.2618        0.267949        0.267949     5.55112e-17
             0.5        0.546302        0.546302     2.22045e-16
          0.5236         0.57735         0.57735     2.22045e-16
          0.7854               1               1     2.22045e-16
               1         1.55741         1.55741     8.88178e-16
           1.047         1.73205         1.73205     1.11022e-15
           1.309         3.73205         3.73205     8.88178e-16
            1.44         7.59575         7.59575     3.55271e-15
           1.505         15.2571         15.2571     1.95399e-14
               2        -2.18504        -2.18504     1.33227e-15
               3       -0.142547       -0.142547               0
           3.142               0    -1.11022e-16     1.11022e-16
               4         1.15782         1.15782               0
               5        -3.38052        -3.38052               0

R8_TAN_TEST:
  Normal end of execution.

R8_TANH_TEST:
  Python version: 2.7.17
  R8_TANH evaluates the hyperbolic tangent function.
  TANH_VALUES returns some exact values.

             X         TANH(X)  R8_TANH(X)         Diff

              -5       -0.999909       -0.999909     1.11022e-16
              -1       -0.761594       -0.761594     2.22045e-16
               0               0               0               0
             0.1        0.099668        0.099668     1.38778e-17
             0.2        0.197375        0.197375               0
             0.3        0.291313        0.291313     5.55112e-17
             0.4        0.379949        0.379949     5.55112e-17
             0.5        0.462117        0.462117     5.55112e-17
             0.6         0.53705         0.53705     1.11022e-16
             0.7        0.604368        0.604368               0
             0.8        0.664037        0.664037     1.11022e-16
             0.9        0.716298        0.716298               0
               1        0.761594        0.761594     2.22045e-16
               2        0.964028        0.964028     1.11022e-16
               3        0.995055        0.995055     1.11022e-16
               4        0.999329        0.999329     1.11022e-16
               5        0.999909        0.999909     1.11022e-16
              10               1               1     1.11022e-16

R8_TANH_TEST:
  Normal end of execution.

R8_UPAK_TEST:
  Python version: 2.7.17
  R8_UPAK converts an R8 to a mantissa and base 2 exponent.

             X         Mantissa     Exponent

                        64                       0.5         7
                       128                       0.5         8
                       -64                      -0.5         7
                        96                      0.75         7
                        15                    0.9375         4
                       0.5                       0.5         0
                      0.25                       0.5        -1
                     0.625                     0.625         0
                    64.625              0.5048828125         7
         3.141592653589793        0.7853981633974483         2
                         0                         0         0

R8_UPAK_TEST:
  Normal end of execution.

FN_TEST:
  Normal end of execution.
Fri Jan 24 08:32:21 2020
