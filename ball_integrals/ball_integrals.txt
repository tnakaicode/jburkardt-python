Sat Jan 18 11:59:53 2020

BALL_INTEGRALS_TEST
  Python version: 3.6.9
  Test the BALL_INTEGRALS library.

GAMMA_VALUES_TEST:
  Python version: 3.6.9
  GAMMA_VALUES stores values of the Gamma function.

      X            GAMMA(X)

     -0.500000       -3.5449077018110322
     -0.010000     -100.5871979644108052
      0.010000       99.4325851191506018
      0.100000        9.5135076986687324
      0.200000        4.5908437119988026
      0.400000        2.2181595437576882
      0.500000        1.7724538509055161
      0.600000        1.4891922488128171
      0.800000        1.1642297137253030
      1.000000        1.0000000000000000
      1.100000        0.9513507698668732
      1.200000        0.9181687423997607
      1.300000        0.8974706963062772
      1.400000        0.8872638175030753
      1.500000        0.8862269254527581
      1.600000        0.8935153492876903
      1.700000        0.9086387328532904
      1.800000        0.9313837709802427
      1.900000        0.9617658319073874
      2.000000        1.0000000000000000
      3.000000        2.0000000000000000
      4.000000        6.0000000000000000
     10.000000   362880.0000000000000000
     20.000000  121645100408832000.0000000000000000
     30.000000  8841761993739701898620088352768.0000000000000000

GAMMA_VALUES_TEST:
  Normal end of execution.

I4VEC_PRINT_TEST
  Python version: 3.6.9
  I4VEC_PRINT prints an I4VEC.

  Here is an I4VEC:

     0      91
     1      92
     2      93
     3      94

I4VEC_PRINT_TEST:
  Normal end of execution.

I4VEC_TRANSPOSE_PRINT_TEST
  Python version: 3.6.9
  I4VEC_TRANSPOSE_PRINT prints an I4VEC
  with 5 entries to a row, and an optional title.

  My array:   1 2 3 4 5 6 7 8 9 10 11 12

I4VEC_TRANSPOSE_PRINT_TEST:
  Normal end of execution.

I4VEC_UNIFORM_AB_TEST
  Python version: 3.6.9
  I4VEC_UNIFORM_AB computes pseudorandom values
  in an interval [A,B].

  The lower endpoint A = -100
  The upper endpoint B = 200
  The initial seed is 123456789


  The random vector:

     0     -35
     1     187
     2     149
     3      69
     4      25
     5     -81
     6     -23
     7     -67
     8     -87
     9      90
    10     -82
    11      35
    12      20
    13     127
    14     139
    15    -100
    16     170
    17       5
    18     -72
    19     -96

I4VEC_UNIFORM_AB_TEST:
  Normal end of execution.

R8_GAMMA_TEST:
  Python version: 3.6.9
  R8_GAMMA evaluates the Gamma function.

      X            GAMMA(X)      R8_GAMMA(X)

          -0.5        -3.544907701811032        -3.544907701811032
         -0.01        -100.5871979644108        -100.5871979644108
          0.01          99.4325851191506          99.4325851191506
           0.1         9.513507698668732         9.513507698668731
           0.2         4.590843711998803         4.590843711998803
           0.4         2.218159543757688         2.218159543757688
           0.5         1.772453850905516         1.772453850905516
           0.6         1.489192248812817         1.489192248812817
           0.8         1.164229713725303         1.164229713725303
             1                         1                         1
           1.1        0.9513507698668732        0.9513507698668732
           1.2        0.9181687423997607        0.9181687423997607
           1.3        0.8974706963062772        0.8974706963062772
           1.4        0.8872638175030753        0.8872638175030754
           1.5        0.8862269254527581        0.8862269254527581
           1.6        0.8935153492876903        0.8935153492876903
           1.7        0.9086387328532904        0.9086387328532904
           1.8        0.9313837709802427        0.9313837709802427
           1.9        0.9617658319073874        0.9617658319073874
             2                         1                         1
             3                         2                         2
             4                         6                         6
            10                    362880                    362880
            20      1.21645100408832e+17     1.216451004088321e+17
            30     8.841761993739702e+30     8.841761993739751e+30

R8_GAMMA_TEST
  Normal end of execution.

R8_NORMAL_01_TEST
  Python version: 3.6.9
  R8_NORMAL_01 computes pseudonormal values with
  mean 0.0 and standard deviation 1.0.

  SEED = 123456789

   0        1.679040
   1       -0.566060
   2        1.212934
   3        1.269381
   4       -1.666087
   5       -2.242464
   6        0.039675
   7        0.673068
   8       -0.275127
   9        2.164005

R8_NORMAL_01_TEST
  Normal end of execution.

R8_UNIFORM_01_TEST
  Python version: 3.6.9
  R8_UNIFORM_01 produces a sequence of random values.

  Using random seed 123456789

  SEED  R8_UNIFORM_01(SEED)

     469049721        0.218418
    2053676357        0.956318
    1781357515        0.829509
    1206231778        0.561695
     891865166        0.415307
     141988902        0.066119
     553144097        0.257578
     236130416        0.109957
      94122056        0.043829
    1361431000        0.633966

  Verify that the sequence can be restarted.
  Set the seed back to its original value, and see that
  we generate the same sequence.

  SEED  R8_UNIFORM_01(SEED)

     469049721        0.218418
    2053676357        0.956318
    1781357515        0.829509
    1206231778        0.561695
     891865166        0.415307
     141988902        0.066119
     553144097        0.257578
     236130416        0.109957
      94122056        0.043829
    1361431000        0.633966

R8_UNIFORM_01_TEST
  Normal end of execution.

R8MAT_PRINT_TEST
  Python version: 3.6.9
  R8MAT_PRINT prints an R8MAT.

  Here is an R8MAT:

  Col:       0             1             2             3             4       
  Row
      0 :          11            12            13            14            15  
      1 :          21            22            23            24            25  
      2 :          31            32            33            34            35  
      3 :          41            42            43            44            45  

  Col:       5       
  Row
      0 :          16  
      1 :          26  
      2 :          36  
      3 :          46  

R8MAT_PRINT_TEST:
  Normal end of execution.

R8MAT_PRINT_SOME_TEST
  Python version: 3.6.9
  R8MAT_PRINT_SOME prints some of an R8MAT.

  Here is an R8MAT:

  Col:       3             4             5       
  Row
      0 :          14            15            16  
      1 :          24            25            26  
      2 :          34            35            36  

R8MAT_PRINT_SOME_TEST:
  Normal end of execution.

R8MAT_TRANSPOSE_PRINT_TEST
  Python version: 3.6.9
  R8MAT_TRANSPOSE_PRINT prints an R8MAT.

  Here is an R8MAT, transposed:

  Row:       0             1             2             3       
  Col
      0 :          11            21            31            41  
      1 :          12            22            32            42  
      2 :          13            23            33            43  

R8MAT_TRANSPOSE_PRINT_TEST:
  Normal end of execution.

R8MAT_TRANSPOSE_PRINT_SOME_TEST
  Python version: 3.6.9
  R8MAT_TRANSPOSE_PRINT_SOME prints some of an R8MAT, transposed.

  R8MAT, rows 0:2, cols 3:5:

  Row:       0             1             2       
  Col
      3 :          14            24            34  
      4 :          15            25            35  
      5 :          16            26            36  

R8MAT_TRANSPOSE_PRINT_SOME_TEST:
  Normal end of execution.

R8MAT_UNIFORM_AB_TEST
  Python version: 3.6.9
  R8MAT_UNIFORM_AB computes a random R8MAT.

  -1 <= X <= 5
  Initial seed is 123456789

  Random R8MAT:

  Col:       0             1             2             3       
  Row
      0 :     0.31051     -0.603288     -0.629637      -0.98897  
      1 :     4.73791      0.545467       1.69723       4.38502  
      2 :     3.97706     -0.340259       1.40784       1.10451  
      3 :     2.37017     -0.737026       3.52804     -0.432731  
      4 :     1.49184       2.80379       3.78372     -0.918299  

R8MAT_UNIFORM_AB_TEST:
  Normal end of execution.

R8VEC_NORMAL_01_TEST
  Python version: 3.6.9
  R8VEC_NORMAL_01 returns a vector of Normal 01 values

  SEED = 123456789

  Vector:

     0       1.67904
     1      -0.56606
     2       1.21293
     3       1.26938
     4      -1.66609
     5      -2.24246
     6     0.0396749
     7      0.673068
     8     -0.275127
     9         2.164

R8VEC_NORMAL_01_TEST:
  Normal end of execution.

R8VEC_PRINT_TEST
  Python version: 3.6.9
  R8VEC_PRINT prints an R8VEC.

  Here is an R8VEC:

     0       123.456
     1         5e-06
     2        -1e+06
     3       3.14159

R8VEC_PRINT_TEST:
  Normal end of execution.

BALL01_MONOMIAL_INTEGRAL_TEST:
  Python version: 3.6.9
  BALL01_MONOMIAL_INTEGRAL returns the integral of a monomial
  over the interior of the unit ball in 3D.
  Compate against Monte Carlo estimates.

  Number of sample points used is 4192

  If any exponent is odd, the integral is zero.
  We will restrict this test to randomly chosen even exponents.

  Ex  Ey  Ez     MC-Estimate           Exact      Error

   0   2   2       0.0170667       0.0181333    1.07e-03
   4   0   0      0.00414237      0.00418461    4.22e-05
   8   0   0      0.00197222      0.00195282    1.94e-05
   4   8   8       1.214e-06     1.31432e-06    1.00e-07
   0   0   0        0.196024        0.199466    3.44e-03
   8   8   8     6.61499e-08     6.81499e-08    2.00e-09
   2   4   4     0.000106993     0.000114872    7.88e-06
   2   6   6     2.76309e-05     3.02293e-05    2.60e-06
   8   2   2       0.0095903      0.00976408    1.74e-04
   0   8   8        0.128169        0.126933    1.24e-03
   2   0   0       0.0391635       0.0398932    7.30e-04
   6   4   4     4.74864e-05     4.92307e-05    1.74e-06
   4   8   8     4.02668e-06     4.31848e-06    2.92e-07
   0   0   0        0.814873        0.837758    2.29e-02
   4   6   6     4.68185e-05     4.92307e-05    2.41e-06
   0   6   6       0.0174937       0.0181333    6.40e-04
   8   0   0      0.00197222      0.00195282    1.94e-05
   0   6   6      0.00130801      0.00139487    8.69e-05
   6   2   2     0.000272561     0.000278974    6.41e-06
   4   2   2       0.0400729       0.0398932    1.80e-04

BALL01_MONOMIAL_INTEGRAL_TEST
  Normal end of execution.

BALL01_SAMPLE_TEST
  Python version: 3.6.9
  BALL01_SAMPLE samples the unit ball.

  Sample points in the unit ball.

  Row:       0             1             2       
  Col
      0 :    0.497518      -0.16773      0.359406  
      1 :    0.756069      0.330465     -0.384785  
      2 :    0.280276     -0.114567      0.901126  
      3 :    0.523193     -0.251279      0.401636  
      4 :  -0.0681996      -0.80761     -0.532481  
      5 :    0.152427     -0.236512      -0.65837  
      6 :   -0.609231     -0.374499     -0.606816  
      7 :     0.42781      0.522948    -0.0155662  
      8 :   0.0146253     -0.230002     -0.122921  
      9 :    0.231257     -0.039156       0.11065  

BALL01_SAMPLE_TEST
  Normal end of execution.

BALL01_VOLUME_TEST
  Python version: 3.6.9
  BALL01_VOLUME returns the volume of the unit ball.

  BALL01_VOLUME() = 4.18879

BALL01_VOLUME_TEST
  Normal end of execution.

MONOMIAL_VALUE_TEST
  Python version: 3.6.9
  Use monomial_value() to evaluate some monomials
  in dimensions 1 through 3.

  Spatial dimension M =  1
  Exponents: -1

   V(X)               X(0)

      0.111111      9.0000
         0.125      8.0000
           0.2      5.0000
      0.333333      3.0000
            -1     -1.0000

  Spatial dimension M =  2
  Exponents: -1 -2

   V(X)               X(0)      X(1)

    -0.0277778     -1.0000    6.0000
     -0.111111     -1.0000    3.0000
    0.00680272      3.0000    7.0000
       0.03125      8.0000   -2.0000
     0.0277778      9.0000    2.0000

  Spatial dimension M =  3
  Exponents: -3 -3 5

   V(X)               X(0)      X(1)      X(2)

        0.0625      8.0000   -1.0000   -2.0000
   -0.00137174      1.0000    9.0000   -1.0000
   0.000244141      2.0000    8.0000    1.0000
       1.21363      6.0000    5.0000    8.0000
      0.158766      3.0000    9.0000    5.0000

MONOMIAL_VALUE_TEST
  Normal end of execution.

BALL_INTEGRALS_TEST:
  Normal end of execution.

Sat Jan 18 11:59:53 2020
