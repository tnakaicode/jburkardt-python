Sat Jan 18 21:09:24 2020

CUBE_INTEGRALS_TEST
  Python version: 3.6.9
  Test the CUBE_INTEGRALS library.

I4VEC_PRINT_TEST
  Python version: 3.6.9
  I4VEC_PRINT prints an I4VEC.

  Here is an I4VEC:

     0      91
     1      92
     2      93
     3      94

I4VEC_PRINT_TEST:
  Normal end of execution.

I4VEC_TRANSPOSE_PRINT_TEST
  Python version: 3.6.9
  I4VEC_TRANSPOSE_PRINT prints an I4VEC
  with 5 entries to a row, and an optional title.

  My array:   1 2 3 4 5 6 7 8 9 10 11 12

I4VEC_TRANSPOSE_PRINT_TEST:
  Normal end of execution.

I4VEC_UNIFORM_AB_TEST
  Python version: 3.6.9
  I4VEC_UNIFORM_AB computes pseudorandom values
  in an interval [A,B].

  The lower endpoint A = -100
  The upper endpoint B = 200
  The initial seed is 123456789


  The random vector:

     0     -35
     1     187
     2     149
     3      69
     4      25
     5     -81
     6     -23
     7     -67
     8     -87
     9      90
    10     -82
    11      35
    12      20
    13     127
    14     139
    15    -100
    16     170
    17       5
    18     -72
    19     -96

I4VEC_UNIFORM_AB_TEST:
  Normal end of execution.

R8MAT_PRINT_TEST
  Python version: 3.6.9
  R8MAT_PRINT prints an R8MAT.

  Here is an R8MAT:

  Col:       0             1             2             3             4       
  Row
      0 :          11            12            13            14            15  
      1 :          21            22            23            24            25  
      2 :          31            32            33            34            35  
      3 :          41            42            43            44            45  

  Col:       5       
  Row
      0 :          16  
      1 :          26  
      2 :          36  
      3 :          46  

R8MAT_PRINT_TEST:
  Normal end of execution.

R8MAT_PRINT_SOME_TEST
  Python version: 3.6.9
  R8MAT_PRINT_SOME prints some of an R8MAT.

  Here is an R8MAT:

  Col:       3             4             5       
  Row
      0 :          14            15            16  
      1 :          24            25            26  
      2 :          34            35            36  

R8MAT_PRINT_SOME_TEST:
  Normal end of execution.

R8MAT_TRANSPOSE_PRINT_TEST
  Python version: 3.6.9
  R8MAT_TRANSPOSE_PRINT prints an R8MAT.

  Here is an R8MAT, transposed:

  Row:       0             1             2             3       
  Col
      0 :          11            21            31            41  
      1 :          12            22            32            42  
      2 :          13            23            33            43  

R8MAT_TRANSPOSE_PRINT_TEST:
  Normal end of execution.

R8MAT_TRANSPOSE_PRINT_SOME_TEST
  Python version: 3.6.9
  R8MAT_TRANSPOSE_PRINT_SOME prints some of an R8MAT, transposed.

  R8MAT, rows 0:2, cols 3:5:

  Row:       0             1             2       
  Col
      3 :          14            24            34  
      4 :          15            25            35  
      5 :          16            26            36  

R8MAT_TRANSPOSE_PRINT_SOME_TEST:
  Normal end of execution.

R8MAT_UNIFORM_01_TEST
  Python version: 3.6.9
  R8MAT_UNIFORM_01 computes a random R8MAT.

  0 <= X <= 1
  Initial seed is 123456789

  Random R8MAT:

  Col:       0             1             2             3       
  Row
      0 :    0.218418     0.0661187     0.0617272    0.00183837  
      1 :    0.956318      0.257578      0.449539      0.897504  
      2 :    0.829509      0.109957      0.401306      0.350752  
      3 :    0.561695      0.043829      0.754673     0.0945448  
      4 :    0.415307      0.633966      0.797287     0.0136169  

R8MAT_UNIFORM_01_TEST:
  Normal end of execution.

R8MAT_UNIFORM_AB_TEST
  Python version: 3.6.9
  R8MAT_UNIFORM_AB computes a random R8MAT.

  -1 <= X <= 5
  Initial seed is 123456789

  Random R8MAT:

  Col:       0             1             2             3       
  Row
      0 :     0.31051     -0.603288     -0.629637      -0.98897  
      1 :     4.73791      0.545467       1.69723       4.38502  
      2 :     3.97706     -0.340259       1.40784       1.10451  
      3 :     2.37017     -0.737026       3.52804     -0.432731  
      4 :     1.49184       2.80379       3.78372     -0.918299  

R8MAT_UNIFORM_AB_TEST:
  Normal end of execution.

CUBE01_MONOMIAL_INTEGRAL_TEST
  Python version: 3.6.9
  CUBE01_MONOMIAL_INTEGRAL computes the integral of a monomial
  within the interior of the unit cube in 3D.
  Compare with a Monte Carlo estimate.

  Number of sample points used is 4192

  Ex  Ey  Ez     MC-Estimate           Exact      Error

   6   5   0       0.0225282       0.0238095      0.0013
   1   4   5       0.0153349       0.0166667      0.0013
   7   7   4      0.00233818        0.003125     0.00079
   1   4   1       0.0476543            0.05      0.0023
   6   4   0       0.0270378       0.0285714      0.0015
   7   0   7       0.0145014        0.015625      0.0011
   4   7   0       0.0240766           0.025     0.00092
   1   0   7       0.0597218          0.0625      0.0028
   3   4   0       0.0481349            0.05      0.0019
   1   6   3       0.0164819       0.0178571      0.0014
   2   3   3       0.0191385       0.0208333      0.0017
   5   0   7       0.0193346       0.0208333      0.0015
   1   0   2        0.161858        0.166667      0.0048
   7   2   6      0.00497168      0.00595238     0.00098
   6   5   1        0.010598       0.0119048      0.0013
   7   7   4      0.00233818        0.003125     0.00079
   1   7   6      0.00788249      0.00892857       0.001
   2   5   4      0.00983795       0.0111111      0.0013
   0   7   0        0.123613           0.125      0.0014
   1   6   4       0.0130247       0.0142857      0.0013

CUBE01_MONOMIAL_INTEGRAL_TEST:
  Normal end of execution.

CUBE01_SAMPLE_TEST
  Python version: 3.6.9
  CUBE01_SAMPLE samples the unit cube.

  Sample points in the unit cube.

  Row:       0             1             2       
  Col
      0 :    0.218418      0.956318      0.829509  
      1 :    0.561695      0.415307     0.0661187  
      2 :    0.257578      0.109957      0.043829  
      3 :    0.633966     0.0617272      0.449539  
      4 :    0.401306      0.754673      0.797287  
      5 :  0.00183837      0.897504      0.350752  
      6 :   0.0945448     0.0136169      0.859097  
      7 :    0.840847      0.123104    0.00751236  
      8 :    0.260303      0.912484      0.113664  
      9 :    0.351629      0.822887      0.267132  

CUBE01_SAMPLE_TEST
  Normal end of execution.

CUBE01_VOLUME_TEST
  Python version: 3.6.9
  CUBE01_VOLUME returns the volume of the unit cube.

  CUBE01_VOLUME() = 1

CUBE01_VOLUME_TEST
  Normal end of execution.

MONOMIAL_VALUE_TEST
  Python version: 3.6.9
  Use monomial_value() to evaluate some monomials
  in dimensions 1 through 3.

  Spatial dimension M =  1
  Exponents: -1

   V(X)               X(0)

      0.111111      9.0000
         0.125      8.0000
           0.2      5.0000
      0.333333      3.0000
            -1     -1.0000

  Spatial dimension M =  2
  Exponents: -1 -2

   V(X)               X(0)      X(1)

    -0.0277778     -1.0000    6.0000
     -0.111111     -1.0000    3.0000
    0.00680272      3.0000    7.0000
       0.03125      8.0000   -2.0000
     0.0277778      9.0000    2.0000

  Spatial dimension M =  3
  Exponents: -3 -3 5

   V(X)               X(0)      X(1)      X(2)

        0.0625      8.0000   -1.0000   -2.0000
   -0.00137174      1.0000    9.0000   -1.0000
   0.000244141      2.0000    8.0000    1.0000
       1.21363      6.0000    5.0000    8.0000
      0.158766      3.0000    9.0000    5.0000

MONOMIAL_VALUE_TEST
  Normal end of execution.

CUBE_INTEGRALS_TEST:
  Normal end of execution.
Sat Jan 18 21:09:25 2020
