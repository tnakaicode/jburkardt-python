Wed Sep 12 21:11:27 2018

COMPLEX_NUMBERS_TEST
  Python version: 3.6.5
  Demonstrate complex number usage.

COMPLEX_NUMBERS_TEST01
  Declare single precision complex variables.
  Assign value with an = statement.

  Scalar a:
    (+1+2j)

  Vector b:
    (+1-2j)
    (-3+4j)
    (-5-6j)

  Matrix c:
  (+1+0.1j)  (+1+0.2j)
  (+2+0.1j)  (+2+0.2j)

COMPLEX_NUMBERS_TEST02
  Declare single precision complex variables.
  Initialize value as part of the declaration.

  Scalar a:
    (+1+2j)

  Vector b:
    (+1+2j)
    (+3+4j)
    (+5+6j)

  Matrix c:
  (+1+0.1j)  (+1+0.2j)
  (+2+0.1j)  (+2+0.2j)

  Vector d = dr + di * 1j:
    (+1+4j)
    (+2+5j)
    (+3+6j)

COMPLEX_NUMBERS_TEST03
  Apply intrinsic functions to single precision complex variables

  1j =                 (+0+1)
  a =                  (+1+2)
  - a =                (-1-2)
  a + 3 =              (+4+2)
  a + 5j =             (+1+7)
  4 * a =              (+4+8)
  a / 8 =              (+0.125+0.25)
  a * a =              (-3+4)
  a ** 2 =             (-3+4)
  2 ** a =             (+0.366914+1.96606)
  a ** a =             (-0.222517+0.100709)
  1/a =                (+0.2-0.4)

  abs(a) =             (+2.23607)
  arccos(a) =          (+1.14372-1.52857)
  arccosh(a) =         (+1.52857+1.14372)
  angle(a) =           +1.10715
  arcsin(a) =          (+0.427079+1.52857)
  arcsinh(a) =         (+1.46935+1.06344)
  arctan(a) =          (+1.33897+0.402359)
  arctanh(a) =         (+0.173287+1.1781)
  complex(1) =         (+1+0)
  conjugate(a) =       (+1-2)
  cos(a) =             (+2.03272-3.0519)
  cosh(a) =            (-0.642148+1.06861)
  exp(a) =             (-1.1312+2.47173)
  a.imag =              +2
  isinf(a) =            False
  isnan(a) =            False
  log(a) =             (+0.804719+1.10715)
  log10(a) =           (+0.349485+0.480829)
  a.real =              +1
  sin(a) =             (+3.16578+1.9596)
  sinh(a) =            (-0.489056+1.40312)
  sqrt(a) =            (+1.27202+0.786151)
  tan(a) =             (+0.0338128+1.01479)
  tanh(a) =            (      +1.166736245155334     -0.2434582114219666)

COMPLEX_NUMBERS_TEST04
  Declare double precision complex variables.
  Assign value with an = statement.

  Scalar a:
    (+1+2j)

  Vector b:
    (+1-2j)
    (-3+4j)
    (-5-6j)

  Matrix c:
  (+1+0.1j)  (+1+0.2j)
  (+2+0.1j)  (+2+0.2j)

COMPLEX_NUMBERS_TEST05
  Declare a double precision complex variable.
  Initialize value as part of the declaration.

  Scalar a:
    (+1+2j)

  Vector b:
    (+1+2j)
    (+3+4j)
    (+5+6j)

  Matrix c:
  (+1+0.1j)  (+1+0.2j)
  (+2+0.1j)  (+2+0.2j)

  Vector d = dr + di * 1j:
    (+1+4j)
    (+2+5j)
    (+3+6j)

COMPLEX_NUMBERS_TEST06
  Apply intrinsic functions to double precision complex variables

  1j =                 (+0+1)
  a =                  (+1+2)
  - a =                (-1-2)
  a + 3 =              (+4+2)
  a + 5j =             (+1+7)
  4 * a =              (+4+8)
  a / 8 =              (+0.125+0.25)
  a * a =              (-3+4)
  a ** 2 =             (-3+4)
  2 ** a =             (+0.366914+1.96606)
  a ** a =             (-0.222517+0.100709)
  1/a =                (+0.2-0.4)

  abs(a) =             (+2.23607)
  arccos(a) =          (+1.14372-1.52857)
  arccosh(a) =         (+1.52857+1.14372)
  angle(a) =           +1.10715
  arcsin(a) =          (+0.427079+1.52857)
  arcsinh(a) =         (+1.46935+1.06344)
  arctan(a) =          (+1.33897+0.402359)
  arctanh(a) =         (+0.173287+1.1781)
  complex(1) =         (+1+0)
  conjugate(a) =       (+1-2)
  cos(a) =             (+2.03272-3.0519)
  cosh(a) =            (-0.642148+1.06861)
  exp(a) =             (-1.1312+2.47173)
  a.imag =              +2
  isinf(a) =            False
  isnan(a) =            False
  log(a) =             (+0.804719+1.10715)
  log10(a) =           (+0.349485+0.480829)
  a.real =              +1
  sin(a) =             (+3.16578+1.9596)
  sinh(a) =            (-0.489056+1.40312)
  sqrt(a) =            (+1.27202+0.786151)
  tan(a) =             (+0.0338128+1.01479)
  tanh(a) =            (+1.16674-0.243458)

COMPLEX_NUMBERS_TEST
  Normal end of execution.
Wed Sep 12 21:11:27 2018
