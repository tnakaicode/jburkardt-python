Wed Sep 12 21:11:24 2018

CIRCLE_MONTE_CARLO_TEST
  Python version: 3.6.5
  Test the CIRCLE_MONTE_CARLO library.

CIRCLE01_LENGTH_TEST
  Python version: 3.6.5
  CIRCLE01_LENGTH returns the length of the unit circle.

  CIRCLE01_LENGTH() = 6.28319

CIRCLE01_LENGTH_TEST
  Normal end of execution.

CIRCLE01_MONOMIAL_INTEGRAL_TEST
  Python version: 3.6.5
  CIRCLE01_MONOMIAL_INTEGRAL returns the value of the
  integral of a monomial over the unit circle in 2D.
  Compare with a Monte Carlo estimate.

  Number of sample points used is 4192

  If any exponent is odd, the integral is zero.
  We restrict this test to randomly chosen even exponents.

  Ex  Ey     MC-Estimate           Exact      Error

  10   6      0.00812931      0.00862864      0.0005
   0   6         2.01266          1.9635       0.049
  10   6      0.00812931      0.00862864      0.0005
   6  10      0.00825513      0.00862864     0.00037
   6   6       0.0290444       0.0306796      0.0016
   6   4       0.0699347       0.0736311      0.0037
   2   6        0.242124        0.245437      0.0033
   8   2        0.168632        0.171806      0.0032
   2   4        0.382608        0.392699        0.01
   8   8      0.00632997      0.00671117     0.00038
   6   4       0.0699347       0.0736311      0.0037
   4   8       0.0415049       0.0429515      0.0014
   8   8      0.00632997      0.00671117     0.00038
  10   0         1.57835         1.54625       0.032
   0  10         1.59896         1.54625       0.053
   4   8       0.0415049       0.0429515      0.0014
   2   2         0.76166        0.785398       0.024
   8   2        0.168632        0.171806      0.0032
   2   6        0.242124        0.245437      0.0033
   2   8        0.171575        0.171806     0.00023

CIRCLE01_MONOMIAL_INTEGRAL_TEST
  Normal end of execution.

CIRCLE01_SAMPLE_ERGODIC_TEST
  Python version: 3.6.5
  CIRCLE01_SAMPLE_ERGODIC ergodically samples the unit circle.
  Use it to estimate integrals.

         N        1              X^2             Y^2             X^4           X^2Y^2          Y^4          X^6

         1     6.283185307     6.283185307               0     6.283185307               0               0     6.283185307
         2     6.283185307     4.849716988      1.43346832     4.070321825    0.7793951631    0.6540731564     3.646554649
         4     6.283185307     3.018369913     3.264815394     2.250524732    0.7678451818     2.496970212     1.902971277
         8     6.283185307     3.049675381     3.233509926     2.300804618    0.7488707628     2.484639164     1.958708144
        16     6.283185307     3.117519265     3.165666042     2.379081125    0.7384381403     2.427227902     2.016396847
        32     6.283185307     3.219061499     3.064123808      2.43707687     0.781984629     2.282139179     2.047919031
        64     6.283185307      3.16392701     3.119258297     2.383917095     0.780009915     2.339248382     1.993699361
       128     6.283185307      3.16441952     3.118765787     2.385001988    0.7794175322     2.339348255     1.995559912
       256     6.283185307     3.156056777      3.12712853     2.371065206    0.7849915706      2.34213696     1.977888379
       512     6.283185307     3.140118921     3.143066386     2.355499644    0.7846192776     2.358447108     1.963715413
      1024     6.283185307     3.141618707       3.1415666     2.356986312    0.7846323959     2.356934204     1.964665182
      2048     6.283185307     3.143281658     3.139903649     2.357892798      0.78538886     2.354514789     1.965158523
      4096     6.283185307     3.141457119     3.141728188     2.356083522    0.7853735969     2.356354591      1.96343864
      8192     6.283185307     3.141500541     3.141684766     2.356149808     0.785350733     2.356334033     1.963507282
     16384     6.283185307     3.141591557      3.14159375      2.35624137    0.7853501875     2.356243562     1.963566493
     32768     6.283185307     3.141695988     3.141489319      2.35629807    0.7853979182     2.356091401     1.963597306
     65536     6.283185307     3.141585849     3.141599458     2.356188483    0.7853973656     2.356202093     1.963491738

     Exact     6.283185307     3.141592654     3.141592654      2.35619449    0.7853981634      2.35619449     1.963495408

CIRCLE01_SAMPLE_ERGODIC_TEST
  Normal end of execution.

CIRCLE01_SAMPLE_RANDOM_TEST
  Python version: 3.6.5
  CIRCLE01_SAMPLE_RANDOM randomly samples the unit circle.
  Use it to estimate integrals.

         N        1              X^2             Y^2             X^4           X^2Y^2          Y^4          X^6

         1     6.283185307    0.2441759833     6.039009324  0.009489121827    0.2346868615     5.804322462  0.0003687644944
         2     6.283185307     3.032904838     3.250280469      2.70173798    0.3311668577     2.919113611     2.499061463
         4     6.283185307     3.223276534     3.059908773     2.587560159    0.6357163745     2.424192399     2.257590427
         8     6.283185307     3.320589438     2.962595869     2.554310612    0.7662788261     2.196317043     2.075681364
        16     6.283185307     3.576016729     2.707168578      2.86746481    0.7085519185      1.99861666     2.427010708
        32     6.283185307     3.303758059     2.979427248     2.466899098    0.8368589614     2.142568287     2.014183101
        64     6.283185307      3.01501375     3.268171557      2.19253144    0.8224823104     2.445689247     1.757483001
       128     6.283185307     3.033001233     3.250184074     2.222242799    0.8107584348     2.439425639       1.8094348
       256     6.283185307     3.251565255     3.031620052      2.43497141    0.8165938449     2.215026207     2.010591353
       512     6.283185307     3.200200768      3.08298454     2.421901192    0.7782995753     2.304684964     2.027136805
      1024     6.283185307     3.223621478     3.059563829     2.439255739     0.784365739      2.27519809      2.04694632
      2048     6.283185307     3.156622804     3.126562504     2.378266232     0.778356572     2.348205932     1.988959415
      4096     6.283185307     3.139525253     3.143660054     2.377734178    0.7617910749     2.381868979      1.99752215
      8192     6.283185307     3.135938816     3.147246491     2.358198263     0.777740553     2.369505938     1.967432887
     16384     6.283185307      3.14294352     3.140241787     2.364130277    0.7788132431     2.361428544     1.972746407
     32768     6.283185307     3.145215612     3.137969695     2.365205002    0.7800106101     2.357959085     1.973305917
     65536     6.283185307     3.142542786     3.140642522      2.35866479    0.7838779959     2.356764526     1.965931937

     Exact     6.283185307     3.141592654     3.141592654      2.35619449    0.7853981634      2.35619449     1.963495408

CIRCLE01_SAMPLE_RANDOM_TEST
  Normal end of execution.

I4VEC_PRINT_TEST
  Python version: 3.6.5
  I4VEC_PRINT prints an I4VEC.

  Here is an I4VEC:

     0      91
     1      92
     2      93
     3      94

I4VEC_PRINT_TEST:
  Normal end of execution.

I4VEC_TRANSPOSE_PRINT_TEST
  Python version: 3.6.5
  I4VEC_TRANSPOSE_PRINT prints an I4VEC
  with 5 entries to a row, and an optional title.

  My array:  
       1       2       3       4       5       6       7       8       9      10
      11      12

I4VEC_TRANSPOSE_PRINT_TEST:
  Normal end of execution.

I4VEC_UNIFORM_AB_TEST
  Python version: 3.6.5
  I4VEC_UNIFORM_AB computes pseudorandom values
  in an interval [A,B].

  The lower endpoint A = -100
  The upper endpoint B = 200
  The initial seed is 123456789


  The random vector:

     0     -35
     1     187
     2     149
     3      69
     4      25
     5     -81
     6     -23
     7     -67
     8     -87
     9      90
    10     -82
    11      35
    12      20
    13     127
    14     139
    15    -100
    16     170
    17       5
    18     -72
    19     -96

I4VEC_UNIFORM_AB_TEST:
  Normal end of execution.

MONOMIAL_VALUE_TEST
  Python version: 3.6.5
  Use monomial_value() to evaluate some monomials
  in dimensions 1 through 3.

  Spatial dimension M =  1

  Exponents:
      -1

   V(X)               X(0)

      0.111111      9.0000
         0.125      8.0000
           0.2      5.0000
      0.333333      3.0000
            -1     -1.0000

  Spatial dimension M =  2

  Exponents:
      -1      -2

   V(X)               X(0)      X(1)

    -0.0277778     -1.0000    6.0000
     -0.111111     -1.0000    3.0000
    0.00680272      3.0000    7.0000
       0.03125      8.0000   -2.0000
     0.0277778      9.0000    2.0000

  Spatial dimension M =  3

  Exponents:
      -3      -3       5

   V(X)               X(0)      X(1)      X(2)

        0.0625      8.0000   -1.0000   -2.0000
   -0.00137174      1.0000    9.0000   -1.0000
   0.000244141      2.0000    8.0000    1.0000
       1.21363      6.0000    5.0000    8.0000
      0.158766      3.0000    9.0000    5.0000

MONOMIAL_VALUE_TEST
  Normal end of execution.

R8_GAMMA_TEST:
  Python version: 3.6.5
  R8_GAMMA evaluates the Gamma function.

      X            GAMMA(X)      R8_GAMMA(X)

          -0.5        -3.544907701811032        -3.544907701811032
         -0.01        -100.5871979644108        -100.5871979644108
          0.01          99.4325851191506          99.4325851191506
           0.1         9.513507698668732         9.513507698668731
           0.2         4.590843711998803         4.590843711998803
           0.4         2.218159543757688         2.218159543757688
           0.5         1.772453850905516         1.772453850905516
           0.6         1.489192248812817         1.489192248812817
           0.8         1.164229713725303         1.164229713725303
             1                         1                         1
           1.1        0.9513507698668732        0.9513507698668732
           1.2        0.9181687423997607        0.9181687423997607
           1.3        0.8974706963062772        0.8974706963062772
           1.4        0.8872638175030753        0.8872638175030754
           1.5        0.8862269254527581        0.8862269254527581
           1.6        0.8935153492876903        0.8935153492876903
           1.7        0.9086387328532904        0.9086387328532904
           1.8        0.9313837709802427        0.9313837709802427
           1.9        0.9617658319073874        0.9617658319073874
             2                         1                         1
             3                         2                         2
             4                         6                         6
            10                    362880                    362880
            20      1.21645100408832e+17     1.216451004088321e+17
            30     8.841761993739702e+30     8.841761993739751e+30

R8_GAMMA_TEST
  Normal end of execution.

R8MAT_PRINT_TEST
  Python version: 3.6.5
  R8MAT_PRINT prints an R8MAT.

  Here is an R8MAT:

  Col:       0             1             2             3             4       
  Row
      0 :          11            12            13            14            15  
      1 :          21            22            23            24            25  
      2 :          31            32            33            34            35  
      3 :          41            42            43            44            45  

  Col:       5       
  Row
      0 :          16  
      1 :          26  
      2 :          36  
      3 :          46  

R8MAT_PRINT_TEST:
  Normal end of execution.

R8MAT_PRINT_SOME_TEST
  Python version: 3.6.5
  R8MAT_PRINT_SOME prints some of an R8MAT.

  Here is an R8MAT:

  Col:       3             4             5       
  Row
      0 :          14            15            16  
      1 :          24            25            26  
      2 :          34            35            36  

R8MAT_PRINT_SOME_TEST:
  Normal end of execution.

R8MAT_TRANSPOSE_PRINT_TEST
  Python version: 3.6.5
  R8MAT_TRANSPOSE_PRINT prints an R8MAT.

  Here is an R8MAT, transposed:

  Row:       0             1             2             3       
  Col
      0 :          11            21            31            41  
      1 :          12            22            32            42  
      2 :          13            23            33            43  

R8MAT_TRANSPOSE_PRINT_TEST:
  Normal end of execution.

R8MAT_TRANSPOSE_PRINT_SOME_TEST
  Python version: 3.6.5
  R8MAT_TRANSPOSE_PRINT_SOME prints some of an R8MAT, transposed.

  R8MAT, rows 0:2, cols 3:5:

  Row:       0             1             2       
  Col
      3 :          14            24            34  
      4 :          15            25            35  
      5 :          16            26            36  

R8MAT_TRANSPOSE_PRINT_SOME_TEST:
  Normal end of execution.

R8MAT_UNIFORM_AB_TEST
  Python version: 3.6.5
  R8MAT_UNIFORM_AB computes a random R8MAT.

  -1 <= X <= 5
  Initial seed is 123456789

  Random R8MAT:

  Col:       0             1             2             3       
  Row
      0 :     0.31051     -0.603288     -0.629637      -0.98897  
      1 :     4.73791      0.545467       1.69723       4.38502  
      2 :     3.97706     -0.340259       1.40784       1.10451  
      3 :     2.37017     -0.737026       3.52804     -0.432731  
      4 :     1.49184       2.80379       3.78372     -0.918299  

R8MAT_UNIFORM_AB_TEST:
  Normal end of execution.

R8VEC_PRINT_TEST
  Python version: 3.6.5
  R8VEC_PRINT prints an R8VEC.

  Here is an R8VEC:

     0:       123.456
     1:         5e-06
     2:        -1e+06
     3:       3.14159

R8VEC_PRINT_TEST:
  Normal end of execution.

R8VEC_UNIFORM_01_TEST
  Python version: 3.6.5
  R8VEC_UNIFORM_01 computes a random R8VEC.

  Initial seed is 123456789

  Random R8VEC:

     0:      0.218418
     1:      0.956318
     2:      0.829509
     3:      0.561695
     4:      0.415307
     5:     0.0661187
     6:      0.257578
     7:      0.109957
     8:      0.043829
     9:      0.633966

R8VEC_UNIFORM_01_TEST:
  Normal end of execution.

CIRCLE_MONTE_CARLO_TEST:
  Normal end of execution.

Wed Sep 12 21:11:26 2018
