Wed Feb  5 07:59:38 2020

TEST_EIGEN_TEST
  Python version: 3.6.9
  Test the TEST_EIGEN library.

R8VEC_HOUSE_COLUMN_TEST
  Python version: 3.6.9
  R8VEC_HOUSE_COLUMN returns the compact form of
  a Householder matrix that "packs" a column
  of a matrix.

  Matrix A:

  Col: 
      0       
      1       
      2       
      3       

  Row
      0 :
     1.09209  
     2.07654  
    0.219145  
     2.00653  

      1 :
     4.78159  
    0.330594  
     3.16983  
     3.77337  

      2 :
     4.14755  
     1.28789  
    0.308636  
     3.98643  

      3 :
     2.80848  
    0.549784  
     2.24769  
  0.00919186  


  Working on column K = 0

  Householder matrix H:

  Col: 
      0       
      1       
      2       
      3       

  Row
      0 :
   -0.155781  
   -0.682069  
   -0.591626  
   -0.400615  

      1 :
   -0.682069  
    0.597486  
    -0.34914  
   -0.236418  

      2 :
   -0.591626  
    -0.34914  
    0.697156  
   -0.205068  

      3 :
   -0.400615  
   -0.236418  
   -0.205068  
     0.86114  


  Product H*A:

  Col: 
      0       
      1       
      2       
      3       

  Row
      0 :
    -7.01042  
    -1.53117  
    -3.27924  
    -5.24844  

      1 :
-9.84097e-16  
    -1.79845  
      1.1053  
   -0.508058  

      2 :
-1.62294e-15  
   -0.558841  
    -1.48213  
    0.272729  

      3 :
-3.54653e-16  
   -0.700714  
     1.03509  
    -2.50551  


  Working on column K = 1

  Householder matrix H:

  Col: 
      0       
      1       
      2       
      3       

  Row
      0 :
           1  
           0  
           0  
           0  

      1 :
           0  
   -0.895014  
   -0.278112  
   -0.348717  

      2 :
           0  
   -0.278112  
    0.959184  
  -0.0511776  

      3 :
           0  
   -0.348717  
  -0.0511776  
     0.93583  


  Product H*A:

  Col: 
      0       
      1       
      2       
      3       

  Row
      0 :
    -7.01042  
    -1.53117  
    -3.27924  
    -5.24844  

      1 :
 1.45581e-15  
     2.00941  
   -0.938018  
     1.25258  

      2 :
-1.26486e-15  
 8.95426e-17  
    -1.78201  
    0.531121  

      3 :
 9.43344e-17  
 4.79004e-17  
    0.659083  
    -2.18152  


  Working on column K = 2

  Householder matrix H:

  Col: 
      0       
      1       
      2       
      3       

  Row
      0 :
           1  
           0  
           0  
           0  

      1 :
           0  
           1  
           0  
           0  

      2 :
           0  
           0  
   -0.937906  
    0.346889  

      3 :
           0  
           0  
    0.346889  
    0.937906  


  Product H*A:

  Col: 
      0       
      1       
      2       
      3       

  Row
      0 :
    -7.01042  
    -1.53117  
    -3.27924  
    -5.24844  

      1 :
 1.45581e-15  
     2.00941  
   -0.938018  
     1.25258  

      2 :
 1.21904e-15  
-6.73665e-17  
     1.89999  
    -1.25489  

      3 :
-3.50289e-16  
 7.59874e-17  
 9.51424e-18  
    -1.86183  


R8VEC_HOUSE_COLUMN_TEST
  Normal end of execution.

R8MAT_HOUSE_AXH_TEST
  Python version: 3.6.9
  R8MAT_HOUSE_AXH multiplies a matrix A times a
  compact Householder matrix.

  Matrix A:

  Col: 
      0       
      1       
      2       
      3       
      4       

  Row
      0 :
    -2.81582  
    -4.33881  
    -4.38273  
    -4.98162  
     3.59097  

      1 :
     4.56318  
    -2.42422  
    -0.50461  
     3.97504  
     3.40847  

      2 :
     3.29509  
    -3.90043  
   -0.986937  
    -1.49248  
    -3.76896  

      3 :
    0.616954  
    -4.56171  
     2.54673  
    -4.05455  
    -4.92488  

      4 :
   -0.846929  
     1.33966  
     2.97287  
    -4.86383  
    -2.39697  


  Compact vector V so column 3 of H*A is packed:

     0:             0
     1:             0
     2:     -0.788819
     3:      0.399863
     4:      0.466771

  Householder matrix H:

  Col: 
      0       
      1       
      2       
      3       
      4       

  Row
      0 :
           1  
           0  
           0  
           0  
           0  

      1 :
           0  
           1  
           0  
           0  
           0  

      2 :
           0  
           0  
   -0.244469  
    0.630839  
    0.736395  

      3 :
           0  
           0  
    0.630839  
    0.680219  
   -0.373289  

      4 :
           0  
           0  
    0.736395  
   -0.373289  
     0.56425  


  Indirect product A*H:

  Col: 
      0       
      1       
      2       
      3       
      4       

  Row
      0 :
    -2.81582  
    -4.33881  
    0.573215  
    -7.49385  
     0.65837  

      1 :
     4.56318  
    -2.42422  
     5.14095  
     1.11322  
   0.0678026  

      2 :
     3.29509  
    -3.90043  
    -3.47568  
   -0.230898  
    -2.29629  

      3 :
    0.616954  
    -4.56171  
    -6.80702  
    0.686997  
    0.610057  

      4 :
   -0.846929  
     1.33966  
    -5.56019  
   -0.538306  
     2.65233  


  Direct product A*H:

  Col: 
      0       
      1       
      2       
      3       
      4       

  Row
      0 :
    -2.81582  
    -4.33881  
    0.573215  
    -7.49385  
     0.65837  

      1 :
     4.56318  
    -2.42422  
     5.14095  
     1.11322  
   0.0678026  

      2 :
     3.29509  
    -3.90043  
    -3.47568  
   -0.230898  
    -2.29629  

      3 :
    0.616954  
    -4.56171  
    -6.80702  
    0.686997  
    0.610057  

      4 :
   -0.846929  
     1.33966  
    -5.56019  
   -0.538306  
     2.65233  


  H*A should pack column 3:

  Col: 
      0       
      1       
      2       
      3       
      4       

  Row
      0 :
    -2.81582  
    -4.33881  
    -4.38273  
    -4.98162  
     3.59097  

      1 :
     4.56318  
    -2.42422  
    -0.50461  
     3.97504  
     3.40847  

      2 :
    -1.04002  
   -0.937652  
     4.03706  
     -5.7746  
    -3.95052  

      3 :
     2.81449  
    -6.06358  
-4.77072e-16  
    -1.88388  
    -4.83284  

      4 :
     1.71831  
    -0.41352  
-6.18983e-16  
    -2.32995  
    -2.28953  


R8MAT_HOUSE_AXH_TEST
  Normal end of execution.

R8MAT_ORTH_UNIFORM_TEST
  R8SYMM_ORTH_UNIFORM generates a random orthogopnal matrix.

  The matrix Q:

  Col: 
      0       
      1       
      2       
      3       
      4       

  Row
      0 :
   -0.559743  
   -0.371903  
  -0.0337166  
     0.68224  
    0.285986  

      1 :
    0.188708  
   -0.906112  
   0.0432361  
   -0.368531  
   0.0752686  

      2 :
   -0.404357  
  -0.0795868  
   -0.732356  
   -0.200174  
   -0.503733  

      3 :
   -0.423174  
    0.184571  
   -0.114406  
   -0.542494  
    0.692437  

      4 :
    0.555425  
   0.0157436  
   -0.668999  
    0.253702  
    0.423476  


  The matrix Q'Q:

  Col: 
      0       
      1       
      2       
      3       
      4       

  Row
      0 :
           1  
-3.00874e-17  
 -1.7257e-16  
  2.6115e-18  
 1.81076e-16  

      1 :
-3.00874e-17  
           1  
-3.45906e-17  
-2.90051e-17  
 5.59548e-17  

      2 :
 -1.7257e-16  
-3.45906e-17  
           1  
-1.92834e-16  
-3.04566e-16  

      3 :
  2.6115e-18  
-2.90051e-17  
-1.92834e-16  
           1  
-1.97264e-17  

      4 :
 1.81076e-16  
 5.59548e-17  
-3.04566e-16  
-1.97264e-17  
           1  


R8NSYMM_GEN_TEST
  R8NSYMM_GEN makes an arbitrary size nonsymmetric matrix
  with known eigenvalues and eigenvectors.

  LAMBDA_MIN = -1.83804
  LAMBDA_MAX = 3.64456

  Lambda bins:

   Index     Lower Limit   Count     Upper Limit

       0                       0        -1.83804
       1        -1.83804       1        -1.28978
       2        -1.28978       1        -0.74152
       3        -0.74152       3       -0.193259
       4       -0.193259       4        0.355001
       5        0.355001      14        0.903262
       6        0.903262      11         1.45152
       7         1.45152       5         1.99978
       8         1.99978       7         2.54804
       9         2.54804       2          3.0963
      10          3.0963       1         3.64456
      11         3.64456       1

  LAMBDA versus column norms of A*QR:

       0:        2.67904       2.67904
       1:        0.43394       0.43394
       2:        2.21293       2.21293
       3:        2.26938       2.26938
       4:      -0.666087      0.666087
       5:       -1.24246       1.24246
       6:        1.03967       1.03967
       7:        1.67307       1.67307
       8:       0.724873      0.724873
       9:          3.164         3.164
      10:        1.29779       1.29779
      11:        3.04454       3.04454
      12:        2.39882       2.39882
      13:      -0.242985      0.242985
      14:       0.932916      0.932916
      15:       0.205604      0.205604
      16:       0.476232      0.476232
      17:       0.649433      0.649433
      18:         1.1317        1.1317
      19:        1.53738       1.53738
      20:       0.293584      0.293584
      21:       0.366553      0.366553
      22:       0.610616      0.610616
      23:       0.369065      0.369065
      24:        1.28042       1.28042
      25:        0.42451       0.42451
      26:        1.38554       1.38554
      27:        0.72368       0.72368
      28:        1.03913       1.03913
      29:       0.384708      0.384708
      30:       0.671167      0.671167
      31:       -1.83804       1.83804
      32:      -0.710951      0.710951
      33:        2.01779       2.01779
      34:        3.64456       3.64456
      35:        2.46052       2.46052
      36:        2.05497       2.05497
      37:        1.40995       1.40995
      38:        1.36145       1.36145
      39:        1.22203       1.22203
      40:        0.87868       0.87868
      41:        1.77779       1.77779
      42:        1.28288       1.28288
      43:        2.12355       2.12355
      44:       0.682151      0.682151
      45:        0.77659       0.77659
      46:        1.73471       1.73471
      47:        1.58892       1.58892
      48:       0.254638      0.254638
      49:       0.231283      0.231283

R8SYMM_GEN_TEST
  R8SYMM_GEN makes an arbitrary size symmetric matrix
  with known eigenvalues and eigenvectors.

  LAMBDA_MIN = -1.83804
  LAMBDA_MAX = 3.64456

  Lambda bins:

   Index     Lower Limit   Count     Upper Limit

       0                       0        -1.83804
       1        -1.83804       2        -1.28978
       2        -1.28978       3        -0.74152
       3        -0.74152       4       -0.193259
       4       -0.193259      13        0.355001
       5        0.355001      24        0.903262
       6        0.903262      19         1.45152
       7         1.45152      17         1.99978
       8         1.99978      12         2.54804
       9         2.54804       2          3.0963
      10          3.0963       3         3.64456
      11         3.64456       1

  LAMBDA versus column norms of A*Q:

       0:        2.67904       2.67904
       1:        0.43394       0.43394
       2:        2.21293       2.21293
       3:        2.26938       2.26938
       4:      -0.666087      0.666087
       5:       -1.24246       1.24246
       6:        1.03967       1.03967
       7:        1.67307       1.67307
       8:       0.724873      0.724873
       9:          3.164         3.164
      10:        1.29779       1.29779
      11:        3.04454       3.04454
      12:        2.39882       2.39882
      13:      -0.242985      0.242985
      14:       0.932916      0.932916
      15:       0.205604      0.205604
      16:       0.476232      0.476232
      17:       0.649433      0.649433
      18:         1.1317        1.1317
      19:        1.53738       1.53738
      20:       0.293584      0.293584
      21:       0.366553      0.366553
      22:       0.610616      0.610616
      23:       0.369065      0.369065
      24:        1.28042       1.28042
      25:        0.42451       0.42451
      26:        1.38554       1.38554
      27:        0.72368       0.72368
      28:        1.03913       1.03913
      29:       0.384708      0.384708
      30:       0.671167      0.671167
      31:       -1.83804       1.83804
      32:      -0.710951      0.710951
      33:        2.01779       2.01779
      34:        3.64456       3.64456
      35:        2.46052       2.46052
      36:        2.05497       2.05497
      37:        1.40995       1.40995
      38:        1.36145       1.36145
      39:        1.22203       1.22203
      40:        0.87868       0.87868
      41:        1.77779       1.77779
      42:        1.28288       1.28288
      43:        2.12355       2.12355
      44:       0.682151      0.682151
      45:        0.77659       0.77659
      46:        1.73471       1.73471
      47:        1.58892       1.58892
      48:       0.254638      0.254638
      49:       0.231283      0.231283
      50:        1.54825       1.54825
      51:       0.597531      0.597531
      52:       0.537876      0.537876
      53:       0.180041      0.180041
      54:        2.16269       2.16269
      55:        1.63257       1.63257
      56:        0.48852       0.48852
      57:        1.28193       1.28193
      58:        2.08256       2.08256
      59:        1.83468       1.83468
      60:        1.67428       1.67428
      61:        3.13233       3.13233
      62:       0.698019      0.698019
      63:       0.914097      0.914097
      64:        -1.2943        1.2943
      65:        -1.1446        1.1446
      66:       0.992036      0.992036
      67:        1.81194       1.81194
      68:         2.1405        2.1405
      69:        1.37981       1.37981
      70:        2.52867       2.52867
      71:        1.71298       1.71298
      72:       0.552931      0.552931
      73:        1.13508       1.13508
      74:       0.324614      0.324614
      75:        3.33146       3.33146
      76:       0.178454      0.178454
      77:      0.0532788     0.0532788
      78:        1.04643       1.04643
      79:       0.402445      0.402445
      80:        0.21364       0.21364
      81:       0.381924      0.381924
      82:        1.59603       1.59603
      83:      -0.662889      0.662889
      84:        1.72675       1.72675
      85:        1.49661       1.49661
      86:      -0.173372      0.173372
      87:       0.158202      0.158202
      88:        1.17585       1.17585
      89:        0.60457       0.60457
      90:       0.035255      0.035255
      91:        2.11807       2.11807
      92:       0.370307      0.370307
      93:       0.063247      0.063247
      94:        1.61747       1.61747
      95:       0.904797      0.904797
      96:       -1.24479       1.24479
      97:        1.89127       1.89127
      98:        1.47777       1.47777
      99:       0.847075      0.847075

TEST_EIGEN_TEST
  Normal end of execution.
Wed Feb  5 08:01:27 2020
