Tue Jan 28 08:24:31 2020

LAGRANGE_INTERP_1D_TEST
  Python version: 3.6.9
  Test the LAGRANGE_INTERP_1D library.

P00_PROB_NUM_TEST
  Python version: 3.6.9
  P00_PROB_NUM returns the number of test problems.

  TEST_INTERP_1D includes 8 test problems.

P00_PROB_NUM_TEST:
  Normal end of execution.

P00_TITLE_TEST
  Python version: 3.6.9
  P00_TITLE returns the title of any test problems.

  TEST_INTERP_1D includes 8 test problems.

  #1  "f(x) = steps -1/2/1 at [0,1/3], [1/3,4/5], [4/5,1]."
  #2  "f(x) = (1-3x), x < 1/3 (6x-2) if 1/3 < x"
  #3  "f(x) = x (10*x-1) (5x-2) (5x-2) (4x-3.4) (x-1)"
  #4  "f(x) = atan ( 40 * x - 15 )"
  #5  "f(x) = cos(7*x)+5*cos(11.2*x)-2*cos(14*x)+5*cos(31.5*x)+7*cos(63*x)."
  #6  "f(x) = exp ( - ( 4*x-1 )^2 )"
  #7  "f(x) = exp ( 2 x ) if x < 0.5, 0 otherwise"
  #8  "f(x) = 1 / ( 1 + ( 10 * (x-1/2) )^2 )"

P00_TITLE_TEST:
  Normal end of execution.

P00_F_TEST
  Python version: 3.6.9
  P00_F evaluates any function at N points X.


X, Y for problem 1

       0:              0            -1
       1:            0.1            -1
       2:            0.2            -1
       3:            0.3            -1
       4:            0.4             2
       5:            0.5             2
       6:            0.6             2
       7:            0.7             2
       8:            0.8             1
       9:            0.9             1
      10:              1             1

X, Y for problem 2

       0:              0             1
       1:            0.1           0.7
       2:            0.2           0.4
       3:            0.3           0.1
       4:            0.4           0.4
       5:            0.5             1
       6:            0.6           1.6
       7:            0.7           2.2
       8:            0.8           2.8
       9:            0.9           3.4
      10:              1             4

X, Y for problem 3

       0:              0            -0
       1:            0.1             0
       2:            0.2         0.416
       3:            0.3         0.231
       4:            0.4             0
       5:            0.5          0.35
       6:            0.6           1.2
       7:            0.7         1.701
       8:            0.8         0.896
       9:            0.9          -0.9
      10:              1             0

X, Y for problem 4

       0:              0      -1.50423
       1:            0.1      -1.48014
       2:            0.2       -1.4289
       3:            0.3      -1.24905
       4:            0.4      0.785398
       5:            0.5        1.3734
       6:            0.6       1.46014
       7:            0.7       1.49402
       8:            0.8       1.51204
       9:            0.9       1.52321
      10:              1       1.53082

X, Y for problem 5

       0:              0            16
       1:            0.1       4.60251
       2:            0.2       10.9479
       3:            0.3      -2.41286
       4:            0.4       8.33648
       5:            0.5       3.41326
       6:            0.6       17.0369
       7:            0.7       4.07749
       8:            0.8       7.82541
       9:            0.9      -3.02927
      10:              1       13.3791

X, Y for problem 6

       0:              0      0.367879
       1:            0.1      0.697676
       2:            0.2      0.960789
       3:            0.3      0.960789
       4:            0.4      0.697676
       5:            0.5      0.367879
       6:            0.6      0.140858
       7:            0.7     0.0391639
       8:            0.8    0.00790705
       9:            0.9    0.00115923
      10:              1    0.00012341

X, Y for problem 7

       0:              0             1
       1:            0.1       1.49182
       2:            0.2       2.22554
       3:            0.3       3.32012
       4:            0.4       4.95303
       5:            0.5             0
       6:            0.6             0
       7:            0.7             0
       8:            0.8             0
       9:            0.9             0
      10:              1             0

X, Y for problem 8

       0:              0     0.0384615
       1:            0.1     0.0588235
       2:            0.2           0.1
       3:            0.3           0.2
       4:            0.4           0.5
       5:            0.5             1
       6:            0.6           0.5
       7:            0.7           0.2
       8:            0.8           0.1
       9:            0.9     0.0588235
      10:              1     0.0384615

P00_F_TEST:
  Normal end of execution.

R8MAT_PRINT_TEST
  Python version: 3.6.9
  R8MAT_PRINT prints an R8MAT.

  Here is an R8MAT:

  Col:       0             1             2             3             4       
  Row
      0 :          11            12            13            14            15  
      1 :          21            22            23            24            25  
      2 :          31            32            33            34            35  
      3 :          41            42            43            44            45  

  Col:       5       
  Row
      0 :          16  
      1 :          26  
      2 :          36  
      3 :          46  

R8MAT_PRINT_TEST:
  Normal end of execution.

R8MAT_PRINT_SOME_TEST
  Python version: 3.6.9
  R8MAT_PRINT_SOME prints some of an R8MAT.

  Here is an R8MAT:

  Col:       3             4             5       
  Row
      0 :          14            15            16  
      1 :          24            25            26  
      2 :          34            35            36  

R8MAT_PRINT_SOME_TEST:
  Normal end of execution.

R8VEC_CHEBY_EXTREME_TEST
  Python version: 3.6.9
  R8VEC_CHEBY_EXTREME returns Chebyshev Extreme values between A and B.

  The vector:

     0:            10
     1:       11.4645
     2:            15
     3:       18.5355
     4:            20

R8VEC_CHEBY_EXTREME_TEST
  Normal end of execution.

R8VEC_NORM_TEST
  Python version: 3.6.9
  R8VEC_NORM computes the L2 norm of an R8VEC.

  Input vector:

     0:      0.218418
     1:      0.956318
     2:      0.829509
     3:      0.561695
     4:      0.415307
     5:     0.0661187
     6:      0.257578
     7:      0.109957
     8:      0.043829
     9:      0.633966

  L2 norm = 1.62017

R8VEC_NORM_TEST:
  Normal end of execution.

R8VEC_NORM_AFFINE_TEST
  Python version: 3.6.9
  R8VEC_NORM_AFFINE computes the L2 norm of
  the difference of two R8VECs.

  R8VEC_NORM_AFFINE(X,Y) = 1.22756
  R8VEC_NORM (X-Y):        1.22756

R8VEC_NORM_AFFINE_TEST:
  Normal end of execution.

R8VEC_PRINT_TEST
  Python version: 3.6.9
  R8VEC_PRINT prints an R8VEC.

  Here is an R8VEC:

     0:       123.456
     1:         5e-06
     2:        -1e+06
     3:       3.14159

R8VEC_PRINT_TEST:
  Normal end of execution.

R8VEC_UNIFORM_AB_TEST
  Python version: 3.6.9
  R8VEC_UNIFORM_AB computes a random R8VEC.

  -1 <= X <= 5
  Initial seed is 123456789

  Random R8VEC:

     0:       0.31051
     1:       4.73791
     2:       3.97706
     3:       2.37017
     4:       1.49184
     5:     -0.603288
     6:      0.545467
     7:     -0.340259
     8:     -0.737026
     9:       2.80379

R8VEC_UNIFORM_AB_TEST:
  Normal end of execution.

R8VEC2_PRINT_TEST
  Python version: 3.6.9
  R8VEC2_PRINT prints a pair of R8VEC's.

  Print a pair of R8VEC's:

       0:              0             0
       1:            0.2          0.04
       2:            0.4          0.16
       3:            0.6          0.36
       4:            0.8          0.64
       5:              1             1

R8VEC2_PRINT_TEST:
  Normal end of execution.

LAGRANGE_BASIS_1D_TEST:
  Python version: 3.6.9
  LAGRANGE_BASIS_1D evaluates the Lagrange 1D basis
  functions.

  The Lagrange basis functions:

  Col:       0             1             2             3       
  Row
      0 :           1             0            -0             0  
      1 :     0.64125      0.445312        -0.095     0.0084375  
      2 :        0.36          0.75         -0.12          0.01  
      3 :     0.14875      0.929688        -0.085     0.0065625  
      4 :          -0             1             0            -0  
      5 :    -0.09375      0.976563         0.125    -0.0078125  
      6 :       -0.14         0.875          0.28        -0.015  
      7 :    -0.14625      0.710938         0.455    -0.0196875  
      8 :       -0.12           0.5          0.64         -0.02  
      9 :    -0.06875      0.257812         0.825    -0.0140625  
     10 :           0            -0             1             0  
     11 :     0.07875     -0.257812         1.155     0.0240625  
     12 :        0.16          -0.5          1.28          0.06  
     13 :     0.23625     -0.710938         1.365      0.109688  
     14 :         0.3        -0.875           1.4         0.175  
     15 :     0.34375     -0.976562         1.375      0.257812  
     16 :        0.36            -1          1.28          0.36  
     17 :     0.34125     -0.929688         1.105      0.483437  
     18 :        0.28         -0.75          0.84          0.63  
     19 :     0.16875     -0.445312         0.475      0.801562  
     20 :          -0             0            -0             1  

LAGRANGE_BASIS_1D_TEST:
  Normal end of execution.

LAGRANGE_VALUE_1D_TEST:
  Python version: 3.6.9
  LAGRANGE_VALUE_1D evaluates a Lagrange 1D interpolant.

  Table of interpolant values:

       0:              0           -28
       1:            0.5       -11.375
       2:              1             0
       3:            1.5         6.875
       4:              2            10
       5:            2.5        10.125
       6:              3             8
       7:            3.5         4.375
       8:              4   4.44089e-16
       9:            4.5        -4.375
      10:              5            -8
      11:            5.5       -10.125
      12:              6           -10
      13:            6.5        -6.875
      14:              7  -3.55271e-15
      15:            7.5        11.375
      16:              8            28
      17:            8.5        50.625
      18:              9            80
      19:            9.5       116.875
      20:             10           162

LAGRANGE_VALUE_1D_TEST:
  Normal end of execution.

LAGRANGE_INTERP_1D_TEST01:
  Python version: 3.6.9
  Interpolate data from TEST_INTERP_1D problem #1.
  Use even spacing for data points.
  Number of data points = 4

  Data array:

       0:              0            -1
       1:       0.333333            -1
       2:       0.666667             2
       3:              1             1

  L2 interpolation error averaged per interpolant node = 0

  Normalized length of piecewise linear interpolant = 1.20185
  Normalized length of polynomial interpolant       = 0.119535

  Created plot file "p01_dataeven_4.png"
  Created plot file "p01_lageven_4.png".

LAGRANGE_INTERP_1D_TEST01:
  Normal end of execution.

LAGRANGE_INTERP_1D_TEST01:
  Python version: 3.6.9
  Interpolate data from TEST_INTERP_1D problem #1.
  Use even spacing for data points.
  Number of data points = 8

  Data array:

       0:              0            -1
       1:       0.142857            -1
       2:       0.285714            -1
       3:       0.428571             2
       4:       0.571429             2
       5:       0.714286             2
       6:       0.857143             1
       7:              1             1

  L2 interpolation error averaged per interpolant node = 0

  Normalized length of piecewise linear interpolant = 1.11981
  Normalized length of polynomial interpolant       = 0.374529

  Created plot file "p01_dataeven_8.png"
  Created plot file "p01_lageven_8.png".

LAGRANGE_INTERP_1D_TEST01:
  Normal end of execution.

LAGRANGE_INTERP_1D_TEST01:
  Python version: 3.6.9
  Interpolate data from TEST_INTERP_1D problem #1.
  Use even spacing for data points.
  Number of data points = 16

  L2 interpolation error averaged per interpolant node = 0

  Normalized length of piecewise linear interpolant = 1.08525
  Normalized length of polynomial interpolant       = 19.9076

  Created plot file "p01_dataeven_16.png"
  Created plot file "p01_lageven_16.png".

LAGRANGE_INTERP_1D_TEST01:
  Normal end of execution.

LAGRANGE_INTERP_1D_TEST01:
  Python version: 3.6.9
  Interpolate data from TEST_INTERP_1D problem #1.
  Use even spacing for data points.
  Number of data points = 32

  L2 interpolation error averaged per interpolant node = 0

  Normalized length of piecewise linear interpolant = 1.06928
  Normalized length of polynomial interpolant       = 202126

  Created plot file "p01_dataeven_32.png"
