Sat Feb  1 15:37:22 2020

PYRAMID_MONTE_CARLO_TEST
  Python version: 3.6.9
  Test the PYRAMID_MONTE_CARLO library.

GAMMA_LOG_VALUES:
  GAMMA_LOG_VALUES stores values of
  the logarithm of the Gamma function.

      X            GAMMA_LOG(X)

      0.200000        1.5240638224307841
      0.400000        0.7966778177017837
      0.600000        0.3982338580692348
      0.800000        0.1520596783998375
      1.000000        0.0000000000000000
      1.100000       -0.0498724412598397
      1.200000       -0.0853740900033158
      1.300000       -0.1081748095078604
      1.400000       -0.1196129141723712
      1.500000       -0.1207822376352452
      1.600000       -0.1125917656967557
      1.700000       -0.0958076974070659
      1.800000       -0.0710838729143722
      1.900000       -0.0389842759230833
      2.000000        0.0000000000000000
      3.000000        0.6931471805599453
      4.000000        1.7917594692280550
     10.000000       12.8018274800814691
     20.000000       39.3398841871994946
     30.000000       71.2570389671680147

GAMMA_LOG_VALUES_TEST:
  Normal end of execution.

I4_UNIFORM_AB_TEST
  Python version: 3.6.9
  I4_UNIFORM_AB computes pseudorandom values
  in an interval [A,B].

  The lower endpoint A = -100
  The upper endpoint B = 200
  The initial seed is 123456789

         1       -35
         2       187
         3       149
         4        69
         5        25
         6       -81
         7       -23
         8       -67
         9       -87
        10        90
        11       -82
        12        35
        13        20
        14       127
        15       139
        16      -100
        17       170
        18         5
        19       -72
        20       -96

I4_UNIFORM_AB_TEST:
  Normal end of execution.

I4VEC_PRINT_TEST
  Python version: 3.6.9
  I4VEC_PRINT prints an I4VEC.

  Here is an I4VEC:

     0      91
     1      92
     2      93
     3      94

I4VEC_PRINT_TEST:
  Normal end of execution.

I4VEC_TRANSPOSE_PRINT_TEST
  Python version: 3.6.9
  I4VEC_TRANSPOSE_PRINT prints an I4VEC
  with 5 entries to a row, and an optional title.

  My array:   1 2 3 4 5 6 7 8 9 10 11 12

I4VEC_TRANSPOSE_PRINT_TEST:
  Normal end of execution.

I4VEC_UNIFORM_AB_TEST
  Python version: 3.6.9
  I4VEC_UNIFORM_AB computes pseudorandom values
  in an interval [A,B].

  The lower endpoint A = -100
  The upper endpoint B = 200
  The initial seed is 123456789


  The random vector:

     0     -35
     1     187
     2     149
     3      69
     4      25
     5     -81
     6     -23
     7     -67
     8     -87
     9      90
    10     -82
    11      35
    12      20
    13     127
    14     139
    15    -100
    16     170
    17       5
    18     -72
    19     -96

I4VEC_UNIFORM_AB_TEST:
  Normal end of execution.

MONOMIAL_VALUE_TEST
  Python version: 3.6.9
  Use monomial_value() to evaluate some monomials
  in dimensions 1 through 3.

  Spatial dimension M =  1
  Exponents: -1

   V(X)               X(0)

      0.111111      9.0000
         0.125      8.0000
           0.2      5.0000
      0.333333      3.0000
            -1     -1.0000

  Spatial dimension M =  2
  Exponents: -1 -2

   V(X)               X(0)      X(1)

    -0.0277778     -1.0000    6.0000
     -0.111111     -1.0000    3.0000
    0.00680272      3.0000    7.0000
       0.03125      8.0000   -2.0000
     0.0277778      9.0000    2.0000

  Spatial dimension M =  3
  Exponents: -3 -3 5

   V(X)               X(0)      X(1)      X(2)

        0.0625      8.0000   -1.0000   -2.0000
   -0.00137174      1.0000    9.0000   -1.0000
   0.000244141      2.0000    8.0000    1.0000
       1.21363      6.0000    5.0000    8.0000
      0.158766      3.0000    9.0000    5.0000

MONOMIAL_VALUE_TEST
  Normal end of execution.

PYRAMID01_INTEGRAL_TEST
  Python version: 3.6.9
  PYRAMID01_INTEGRAL returns the integral of a monomial
  over the unit pyramid in 3D.
  Compare to a Monte Carlo estimate.

  Number of sample points used is 500000

   E1  E2  E3     MC-Estimate      Exact           Error

   0   0   0         1.33333         1.33333           0
   2   0   0        0.265432        0.266667      0.0012
   4   0   0        0.113616        0.114286     0.00067
   6   0   0       0.0630826       0.0634921     0.00041
   0   2   0        0.266404        0.266667     0.00026
   2   2   0       0.0631172       0.0634921     0.00037
   4   2   0       0.0294246       0.0296296      0.0002
   0   4   0        0.114151        0.114286     0.00013
   2   4   0       0.0294431       0.0296296     0.00019
   0   6   0       0.0633977       0.0634921     9.4e-05
   0   0   1        0.333908        0.333333     0.00058
   2   0   1       0.0443021       0.0444444     0.00014
   4   0   1       0.0142281       0.0142857     5.8e-05
   0   2   1       0.0445419       0.0444444     9.7e-05
   2   2   1      0.00791511      0.00793651     2.1e-05
   0   4   1       0.0143255       0.0142857       4e-05
   0   0   2        0.133741        0.133333     0.00041
   2   0   2       0.0126683       0.0126984       3e-05
   4   0   2      0.00316495       0.0031746     9.7e-06
   0   2   2       0.0127463       0.0126984     4.8e-05
   2   2   2      0.00176164      0.00176367       2e-06
   0   4   2      0.00318874       0.0031746     1.4e-05
   0   0   3        0.066929       0.0666667     0.00026
   2   0   3      0.00475339       0.0047619     8.5e-06
   0   2   3       0.0047852       0.0047619     2.3e-05
   0   0   4       0.0382648       0.0380952     0.00017
   2   0   4      0.00211345       0.0021164     2.9e-06
   0   2   4      0.00212875       0.0021164     1.2e-05
   0   0   5       0.0239229       0.0238095     0.00011
   0   0   6       0.0159526        0.015873       8e-05

PYRAMID01_INTEGRAL_TEST:
  Normal end of execution.

PYRAMID01_MONTE_CARLO_TEST
  Python version: 3.6.9
  Use PYRAMID01_SAMPLE to estimate integrals
  over the interior of the unit pyramid in 3D.

         N
        1
               Z
             X^2
             Y^2
             Z^2
            X^2Z
            Y^2Z
             Z^3
          X^2Y^2
          X^2Z^2

         1
         1.33333
       0.0805408
        0.373326
        0.980424
      0.00486512
        0.022551
       0.0592231
     0.000293881
        0.274513
      0.00136221

         2
         1.33333
        0.828705
       0.0211411
       0.0535591
        0.515958
       0.0136013
       0.0345134
        0.321794
       0.0014815
       0.0087546

         4
         1.33333
        0.216938
        0.387863
        0.614484
       0.0497824
       0.0623849
       0.0855273
       0.0129738
        0.229948
       0.0156092

         8
         1.33333
        0.472294
        0.113265
        0.172749
        0.229933
       0.0305924
       0.0485688
        0.135519
      0.00896647
       0.0108669

        16
         1.33333
        0.411529
        0.229055
        0.233929
         0.19321
       0.0548249
       0.0534605
        0.108439
       0.0386064
       0.0195821

        32
         1.33333
        0.281716
         0.30371
        0.213996
       0.0920697
       0.0523294
        0.031091
       0.0382608
       0.0592789
       0.0149762

        64
         1.33333
         0.33859
        0.309114
        0.249012
        0.132766
       0.0581633
       0.0388547
       0.0633169
        0.071995
       0.0176222

       128
         1.33333
        0.329631
        0.226658
        0.263372
        0.128703
       0.0366629
       0.0453023
       0.0627059
       0.0485369
      0.00981415

       256
         1.33333
        0.349132
        0.264589
        0.268959
         0.14403
       0.0459386
       0.0472589
       0.0728824
       0.0629474
       0.0138414

       512
         1.33333
        0.344229
        0.266463
        0.268343
        0.139162
       0.0458422
       0.0477898
       0.0698209
       0.0614337
       0.0133076

      1024
         1.33333
        0.323395
        0.264595
        0.259571
        0.130926
       0.0437822
       0.0424851
       0.0665184
       0.0596971
       0.0128269

      2048
         1.33333
        0.346192
         0.25989
         0.25794
        0.143914
       0.0431756
       0.0438319
       0.0749375
        0.062771
       0.0125251

      4096
         1.33333
        0.333751
        0.272191
        0.258348
        0.134109
       0.0450484
       0.0425979
       0.0675956
       0.0623705
       0.0126667

      8192
         1.33333
        0.332181
        0.264563
        0.267983
        0.132169
       0.0440421
       0.0447832
       0.0658987
       0.0617065
       0.0124026

     16384
         1.33333
        0.334308
        0.265773
         0.26661
        0.134262
       0.0440533
        0.044185
       0.0674713
        0.064037
       0.0125161

     32768
         1.33333
         0.33348
         0.26574
        0.265681
        0.133488
       0.0443534
       0.0442792
       0.0668804
       0.0630149
       0.0126593

     65536
         1.33333
        0.334955
        0.265387
        0.267659
        0.134301
       0.0443835
       0.0449525
       0.0672506
       0.0633764
       0.0126845


     Exact
         1.33333
        0.333333
        0.266667
        0.266667
        0.133333
       0.0444444
       0.0444444
       0.0666667
       0.0634921
       0.0126984


PYRAMID01_MONTE_CARLO_TEST
  Normal end of execution.

PYRAMID01_SAMPLE_TEST
  Python version: 3.6.9
  PYRAMID01_SAMPLE samples points from the unit pyramid.

  Unit pyramid points

  Row: 
      0       
      1       
      2       

  Col
      0 :
   -0.529145  
    0.857507  
   0.0604056  

      1 :
   0.0498951  
  -0.0684939  
    0.595634  

      2 :
   -0.170945  
    -0.27504  
    0.647423  

      3 :
    0.205248  
   -0.671476  
    0.233952  

      4 :
   -0.183031  
    0.472301  
   0.0727328  

      5 :
   -0.702641  
    0.560667  
    0.294766  

      6 :
    -0.77088  
   -0.924746  
   0.0493645  

      7 :
    0.133511  
   -0.147631  
    0.804149  

      8 :
    -0.23222  
    0.399618  
    0.515596  

      9 :
   -0.191112  
    0.415901  
    0.355966  

     10 :
     0.36547  
    0.117333  
   0.0485835  

     11 :
  -0.0778534  
    0.694145  
    0.157545  

     12 :
   -0.457207  
    0.384369  
    0.265047  

     13 :
   -0.450616  
    0.106489  
    0.284023  

     14 :
    0.139976  
   -0.165375  
    0.402856  

     15 :
    0.286934  
   -0.511457  
    0.331066  

     16 :
    0.257074  
    0.256803  
    0.604505  

     17 :
    0.387721  
   -0.757334  
   0.0802734  

     18 :
    0.473565  
   -0.369359  
   0.0347348  

     19 :
    0.390594  
    0.387917  
    0.258939  


PYRAMID01_SAMPLE_TEST
  Normal end of execution.

PYRAMID01_VOLUME_TEST
  Python version: 3.6.9
  PYRAMID01_VOLUME returns the volume of the unit pyramid.

  PYRAMID01_VOLUME() = 1.33333

PYRAMID01_VOLUME_TEST
  Normal end of execution.

R8_CHOOSE_TEST
  Python version: 3.6.9
  R8_CHOOSE evaluates C(N,K).

         N         K       CNK

         0         0               1

         1         0               1
         1         1               1

         2         0               1
         2         1               2
         2         2               1

         3         0               1
         3         1               3
         3         2               3
         3         3               1

         4         0               1
         4         1               4
         4         2               6
         4         3               4
         4         4               1

         5         0               1
         5         1               5
         5         2              10
         5         3              10
         5         4               5
         5         5               1

R8_CHOOSE_TEST
  Normal end of execution.

R8_GAMMA_LOG_TEST:
  Python version: 3.6.9
  R8_GAMMA_LOG evaluates the logarithm of the Gamma function.

      X            GAMMA_LOG(X)    R8_GAMMA_LOG(X)

           0.2         1.524063822430784         1.524063822430784
           0.4        0.7966778177017837        0.7966778177017837
           0.6        0.3982338580692348        0.3982338580692349
           0.8        0.1520596783998375        0.1520596783998376
             1                         0                         0
           1.1      -0.04987244125983972      -0.04987244125983976
           1.2      -0.08537409000331583      -0.08537409000331585
           1.3       -0.1081748095078604       -0.1081748095078605
           1.4       -0.1196129141723712       -0.1196129141723713
           1.5       -0.1207822376352452       -0.1207822376352453
           1.6       -0.1125917656967557       -0.1125917656967558
           1.7      -0.09580769740706586      -0.09580769740706586
           1.8      -0.07108387291437215      -0.07108387291437215
           1.9      -0.03898427592308333      -0.03898427592308337
             2                         0                         0
             3        0.6931471805599453        0.6931471805599454
             4         1.791759469228055         1.791759469228055
            10         12.80182748008147         12.80182748008147
            20         39.33988418719949         39.33988418719949
            30         71.25703896716801           71.257038967168

R8_GAMMA_LOG_TEST
  Normal end of execution.

R8_MOP_TEST
  Python version: 3.6.9
  R8_MOP evaluates (-1.0)^I4 as an R8.

    I4  R8_MOP(I4)

   -57  -1.0
    92   1.0
    66   1.0
    12   1.0
   -17  -1.0
   -87  -1.0
   -49  -1.0
   -78   1.0
   -92   1.0
    27  -1.0

R8_MOP_TEST
  Normal end of execution.

R8MAT_PRINT_TEST
  Python version: 3.6.9
  R8MAT_PRINT prints an R8MAT.

  Here is an R8MAT:

  Col:       0             1             2             3             4       
  Row
      0 :          11            12            13            14            15  
      1 :          21            22            23            24            25  
      2 :          31            32            33            34            35  
      3 :          41            42            43            44            45  

  Col:       5       
  Row
      0 :          16  
      1 :          26  
      2 :          36  
      3 :          46  

R8MAT_PRINT_TEST:
  Normal end of execution.

R8MAT_PRINT_SOME_TEST
  Python version: 3.6.9
  R8MAT_PRINT_SOME prints some of an R8MAT.

  Here is an R8MAT:

  Col:       3             4             5       
  Row
      0 :          14            15            16  
      1 :          24            25            26  
      2 :          34            35            36  

R8MAT_PRINT_SOME_TEST:
  Normal end of execution.

R8MAT_TRANSPOSE_PRINT_TEST
  Python version: 3.6.9
  R8MAT_TRANSPOSE_PRINT prints an R8MAT.

  Here is an R8MAT, transposed:

  Row: 
      0       
      1       
      2       
      3       

  Col
      0 :
          11  
          21  
          31  
          41  

      1 :
          12  
          22  
          32  
          42  

      2 :
          13  
          23  
          33  
          43  


R8MAT_TRANSPOSE_PRINT_TEST:
  Normal end of execution.

R8MAT_TRANSPOSE_PRINT_SOME_TEST
  Python version: 3.6.9
  R8MAT_TRANSPOSE_PRINT_SOME prints some of an R8MAT, transposed.

  R8MAT, rows 0:2, cols 3:5:

  Row: 
      0       
      1       
      2       

  Col
      3 :
          14  
          24  
          34  

      4 :
          15  
          25  
          35  

      5 :
          16  
          26  
          36  


R8MAT_TRANSPOSE_PRINT_SOME_TEST:
  Normal end of execution.

R8MAT_UNIFORM_01_TEST
  Python version: 3.6.9
  R8MAT_UNIFORM_01 computes a random R8MAT.

  0 <= X <= 1
  Initial seed is 123456789

  Random R8MAT:

  Col:       0             1             2             3       
  Row
      0 :    0.218418     0.0661187     0.0617272    0.00183837  
      1 :    0.956318      0.257578      0.449539      0.897504  
      2 :    0.829509      0.109957      0.401306      0.350752  
      3 :    0.561695      0.043829      0.754673     0.0945448  
      4 :    0.415307      0.633966      0.797287     0.0136169  

R8MAT_UNIFORM_01_TEST:
  Normal end of execution.

R8MAT_UNIFORM_AB_TEST
  Python version: 3.6.9
  R8MAT_UNIFORM_AB computes a random R8MAT.

  -1 <= X <= 5
  Initial seed is 123456789

  Random R8MAT:

  Col:       0             1             2             3       
  Row
      0 :     0.31051     -0.603288     -0.629637      -0.98897  
      1 :     4.73791      0.545467       1.69723       4.38502  
      2 :     3.97706     -0.340259       1.40784       1.10451  
      3 :     2.37017     -0.737026       3.52804     -0.432731  
      4 :     1.49184       2.80379       3.78372     -0.918299  

R8MAT_UNIFORM_AB_TEST:
  Normal end of execution.

PYRAMID_MONTE_CARLO_TEST:
  Normal end of execution.
Sat Feb  1 15:37:40 2020
