Thu Jan 23 08:41:18 2020

ELLIPSE_MONTE_CARLO_TESTS
  Python version: 3.6.9
  Test the ELLIPSE_MONTE_CARLO library.

ELLIPSE_AREA1_TEST
  Python version: 3.6.9
  ELLIPSE_AREA1 computes the area of an ellipse.

  R = 10

  Matrix A in ellipse definition x*A*x=r^2

  Col:       0             1       
  Row
      0 :           5             1  
      1 :           1             2  
  Area = 104.72

ELLIPSE_AREA1_TEST
  Normal end of execution.

ELLIPSE_AREA2_TEST
  Python version: 3.6.9
  ELLIPSE_AREA2 computes the area of an ellipse.

  Ellipse: 5 * x^2 + 2 * xy + 2 * y^2 = 10
  Area = 104.72

ELLIPSE_AREA2_TEST
  Normal end of execution.

ELLIPSE_MONTE_CARLO_TEST
  Use ELLIPSE01_SAMPLE to estimate integrals
  in the ellipse x * A * x <= r^2.

         N        1              X               Y               X^2               XY             Y^2             X^3

         1          2.1241        0.321476       -0.299022       0.0486544      -0.0452561       0.0420951      0.00736369
         2          2.1241        -0.27652        0.499696       0.0478767      -0.0370767        0.183433     -0.00932549
         4          2.1241      -0.0612209        0.144295       0.0130204       0.0199415       0.0882489     -0.00185697
         8          2.1241       0.0317852       0.0869245       0.0214724     -0.00735015        0.072673    -0.000699755
        16          2.1241      0.00154063       0.0268314       0.0330817     -0.00946018        0.165506     0.000300543
        32          2.1241      -0.0165851       -0.142963       0.0342288      -0.0367537        0.155094    -0.000345318
        64          2.1241      -0.0387006       0.0566138       0.0242695      -0.0206398        0.136156    -0.000714845
       128          2.1241       0.0379064      0.00648654        0.031136      -0.0242917        0.151621     0.000651244
       256          2.1241     -0.00153402       0.0122716       0.0296746      -0.0252856        0.151463     0.000143204
       512          2.1241      0.00152787      -0.0115445        0.030106      -0.0208186        0.138797     0.000188673
      1024          2.1241      0.00311013      0.00155926       0.0290905      -0.0207969        0.138277     6.51272e-05
      2048          2.1241     0.000532402      -0.0134502       0.0301181      -0.0230603        0.139695     0.000111932
      4096          2.1241      0.00134544       -0.014149       0.0295652      -0.0227881        0.141501      0.00011408
      8192          2.1241     -0.00300381     -0.00458822       0.0294594      -0.0228104        0.142268    -8.20529e-05
     16384          2.1241      0.00173254      0.00273916       0.0290031      -0.0226607        0.143008     5.54886e-05
     32768          2.1241     -0.00216533      0.00108515       0.0296114      -0.0224396        0.141952    -4.72238e-05
     65536          2.1241     0.000332428     -0.00397407       0.0295669      -0.0224907        0.142094     2.96863e-05

ELLIPSE_MONTE_CARLO_TEST:
  Normal end of execution.

ELLIPSE_SAMPLE_TEST
  Python version: 3.6.9
  ELLIPSE_SAMPLE computes points uniformly distributed
  inside an ellipse x'*A*x=r^2.

  Random points inside ellipse

  Row:       0             1       
  Col
      0 :      1.5858      -1.82229  
      1 :   -0.980284       4.46526  
      2 :    -2.00148       1.07972  
      3 :    0.188387      0.132934  
      4 :   -0.397559       2.72314  
      5 :  0.00607196       2.30289  
      6 :    -1.18765      -2.03451  
      7 :    0.920274      -2.26936  
      8 :   -0.421153      -1.32974  
      9 :    0.549653       3.16931  

ELLIPSE_SAMPLE_TEST
  Normal end of execution.

I4VEC_TRANSPOSE_PRINT_TEST
  Python version: 3.6.9
  I4VEC_TRANSPOSE_PRINT prints an I4VEC
  with 5 entries to a row, and an optional title.

  My array:  
       1       2       3       4       5       6       7       8       9      10
      11      12

I4VEC_TRANSPOSE_PRINT_TEST:
  Normal end of execution.

I4VEC_PRINT_TEST
  Python version: 3.6.9
  I4VEC_PRINT prints an I4VEC.

  Here is an I4VEC:

     0      91
     1      92
     2      93
     3      94

I4VEC_PRINT_TEST:
  Normal end of execution.

I4VEC_UNIFORM_AB_TEST
  Python version: 3.6.9
  I4VEC_UNIFORM_AB computes pseudorandom values
  in an interval [A,B].

  The lower endpoint A = -100
  The upper endpoint B = 200
  The initial seed is 123456789


  The random vector:

     0     -35
     1     187
     2     149
     3      69
     4      25
     5     -81
     6     -23
     7     -67
     8     -87
     9      90
    10     -82
    11      35
    12      20
    13     127
    14     139
    15    -100
    16     170
    17       5
    18     -72
    19     -96

I4VEC_UNIFORM_AB_TEST:
  Normal end of execution.

MONOMIAL_VALUE_TEST
  Python version: 3.6.9
  Use monomial_value() to evaluate some monomials
  in dimensions 1 through 3.

  Spatial dimension M =  1

  Exponents:
      -1

   V(X)               X(0)

      0.111111      9.0000
         0.125      8.0000
           0.2      5.0000
      0.333333      3.0000
            -1     -1.0000

  Spatial dimension M =  2

  Exponents:
      -1      -2

   V(X)               X(0)      X(1)

    -0.0277778     -1.0000    6.0000
     -0.111111     -1.0000    3.0000
    0.00680272      3.0000    7.0000
       0.03125      8.0000   -2.0000
     0.0277778      9.0000    2.0000

  Spatial dimension M =  3

  Exponents:
      -3      -3       5

   V(X)               X(0)      X(1)      X(2)

        0.0625      8.0000   -1.0000   -2.0000
   -0.00137174      1.0000    9.0000   -1.0000
   0.000244141      2.0000    8.0000    1.0000
       1.21363      6.0000    5.0000    8.0000
      0.158766      3.0000    9.0000    5.0000

MONOMIAL_VALUE_TEST
  Normal end of execution.

R8_NORMAL_01_TEST
  Python version: 3.6.9
  R8_NORMAL_01 generates normally distributed
  random values.
  Using initial random number seed = 123456789

  1.679040
  -0.566060
  1.212934
  1.269381
  -1.666087
  -2.242464
  0.039675
  0.673068
  -0.275127
  2.164005
  0.297785
  2.044536
  1.398819
  -1.242985
  -0.067084
  -0.794396
  -0.523768
  -0.350567
  0.131700
  0.537380

R8_NORMAL_01_TEST
  Normal end of execution.

R8_UNIFORM_01_TEST
  Python version: 3.6.9
  R8_UNIFORM_01 produces a sequence of random values.

  Using random seed 123456789

  SEED  R8_UNIFORM_01(SEED)

     469049721        0.218418
    2053676357        0.956318
    1781357515        0.829509
    1206231778        0.561695
     891865166        0.415307
     141988902        0.066119
     553144097        0.257578
     236130416        0.109957
      94122056        0.043829
    1361431000        0.633966

  Verify that the sequence can be restarted.
  Set the seed back to its original value, and see that
  we generate the same sequence.

  SEED  R8_UNIFORM_01(SEED)

     469049721        0.218418
    2053676357        0.956318
    1781357515        0.829509
    1206231778        0.561695
     891865166        0.415307
     141988902        0.066119
     553144097        0.257578
     236130416        0.109957
      94122056        0.043829
    1361431000        0.633966

R8_UNIFORM_01_TEST
  Normal end of execution.

R8MAT_PRINT_TEST
  Python version: 3.6.9
  R8MAT_PRINT prints an R8MAT.

  Here is an R8MAT:

  Col:       0             1             2             3             4       
  Row
      0 :          11            12            13            14            15  
      1 :          21            22            23            24            25  
      2 :          31            32            33            34            35  
      3 :          41            42            43            44            45  

  Col:       5       
  Row
      0 :          16  
      1 :          26  
      2 :          36  
      3 :          46  

R8MAT_PRINT_TEST:
  Normal end of execution.

R8MAT_PRINT_SOME_TEST
  Python version: 3.6.9
  R8MAT_PRINT_SOME prints some of an R8MAT.

  Here is an R8MAT:

  Col:       3             4             5       
  Row
      0 :          14            15            16  
      1 :          24            25            26  
      2 :          34            35            36  

R8MAT_PRINT_SOME_TEST:
  Normal end of execution.

R8PO_FA_TEST
  Python version: 3.6.9
  R8PO_FA factors a positive definite symmetric
  linear system,

  Matrix order N = 5

  The matrix A:

  Col:       0             1             2             3             4       
  Row
      0 :           1             1             1             1             1  
      1 :           1             2             2             2             2  
      2 :           1             2             3             3             3  
      3 :           1             2             3             4             4  
      4 :           1             2             3             4             5  

  The factor R (a R8UT matrix):

  Col:       0             1             2             3             4       
  Row
      0 :           1             1             1             1             1  
      1 :           0             1             1             1             1  
      2 :           0             0             1             1             1  
      3 :           0             0             0             1             1  
      4 :           0             0             0             0             1  

  The product R' * R:

  Col:       0             1             2             3             4       
  Row
      0 :           1             1             1             1             1  
      1 :           1             2             2             2             2  
      2 :           1             2             3             3             3  
      3 :           1             2             3             4             4  
      4 :           1             2             3             4             5  

R8PO_FA_TEST:
  Normal end of execution.

R8PO_SL_TEST
  Python version: 3.6.9
  R8PO_SL solves a linear system with an R8PO matrix
  after it has been factored by R8PO_FA.

  Matrix order N = 5

  Matrix A:

  Col:       0             1             2             3             4       
  Row
      0 :           2            -1             0             0             0  
      1 :           0             2            -1             0             0  
      2 :           0             0             2            -1             0  
      3 :           0             0             0             2            -1  
      4 :           0             0             0             0             2  

  Right hand side b:

     0:             0
     1:             0
     2:             0
     3:             0
     4:             6

  Solution x:

     0:             1
     1:             2
     2:             3
     3:             4
     4:             5

R8PO_SL_TEST
  Normal end of execution.

R8VEC_NORMAL_01_TEST
  Python version: 3.6.9
  R8VEC_NORMAL_01 returns a vector of Normal 01 values

  SEED = 123456789

  Vector:

     0:       1.67904
     1:      -0.56606
     2:       1.21293
     3:       1.26938
     4:      -1.66609
     5:      -2.24246
     6:     0.0396749
     7:      0.673068
     8:     -0.275127
     9:         2.164

R8VEC_NORMAL_01_TEST:
  Normal end of execution.

R8VEC_PRINT_TEST
  Python version: 3.6.9
  R8VEC_PRINT prints an R8VEC.

  Here is an R8VEC:

     0:       123.456
     1:         5e-06
     2:        -1e+06
     3:       3.14159

R8VEC_PRINT_TEST:
  Normal end of execution.

R8VEC_UNIFORM_01_TEST
  Python version: 3.6.9
  R8VEC_UNIFORM_01 computes a random R8VEC.

  Initial seed is 123456789

  Random R8VEC:

     0:      0.218418
     1:      0.956318
     2:      0.829509
     3:      0.561695
     4:      0.415307
     5:     0.0661187
     6:      0.257578
     7:      0.109957
     8:      0.043829
     9:      0.633966

R8VEC_UNIFORM_01_TEST:
  Normal end of execution.

UNIFORM_IN_SPHERE01_MAP_TEST
  Python version: 3.6.9
  UNIFORM_IN_SPHERE01_MAP computes points uniformly distributed
  inside the M-dimensional unit sphere.

  Random points inside unit 3-sphere

  Row:       0             1             2       
  Col
      0 :    0.497518      -0.16773      0.359406  
      1 :    0.756069      0.330465     -0.384785  
      2 :    0.280276     -0.114567      0.901126  
      3 :    0.523193     -0.251279      0.401636  
      4 :  -0.0681996      -0.80761     -0.532481  
      5 :    0.152427     -0.236512      -0.65837  
      6 :   -0.609231     -0.374499     -0.606816  
      7 :     0.42781      0.522948    -0.0155662  
      8 :   0.0146253     -0.230002     -0.122921  
      9 :    0.231257     -0.039156       0.11065  

UNIFORM_IN_SPHERE01_MAP_TEST
  Normal end of execution.

ELLIPSE_MONTE_CARLO_TESTS
  Normal end of execution.
Thu Jan 23 08:41:23 2020
